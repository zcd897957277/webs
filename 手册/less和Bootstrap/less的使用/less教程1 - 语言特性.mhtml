From: <Saved by WebKit>
Subject: ???? | Less ???
Date: Sun, 4 Jul 2015 17:00:06 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_25A7_00BE17D0.638B6235"

------=_NextPart_000_25A7_00BE17D0.638B6235
Content-Type: text/html
Content-Transfer-Encoding: quoted-printable
Content-Location: http://lesscss.cn/features/

<!DOCTYPE html><html><head><meta charset=3D"UTF-8">
   =20
<meta http-equiv=3D"X-UA-Compatible" content=3D"IE=3Dedge">
<meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1.=
0">
<title>=E8=AF=AD=E8=A8=80=E7=89=B9=E6=80=A7 | Less =E4=B8=AD=E6=96=87=E7=BD=
=91</title>
<link href=3D"http://s.nodejs.cn/less/index.css" rel=3D"stylesheet">
<link rel=3D"shortcut icon" href=3D"http://s.nodejs.cn/less/favicon.ico">
  <style id=3D"holderjs-style" type=3D"text/css"></style></head>
  <body class=3D"features">
   =20
    <header class=3D"navbar navbar-inverse navbar-fixed-top docs-nav" role=
=3D"banner">
  <div class=3D"container">
    <div class=3D"navbar-header">
      <button class=3D"navbar-toggle" type=3D"button" data-toggle=3D"collap=
se" data-target=3D".bs-navbar-collapse">
        <span class=3D"icon-bar"></span>
        <span class=3D"icon-bar"></span>
        <span class=3D"icon-bar"></span>
      </button>
      <a href=3D"http://lesscss.cn/" class=3D"navbar-brand">
        <img src=3D"http://s.nodejs.cn/less/img/logo.png">
      </a>
    </div>
    <nav class=3D"collapse navbar-collapse bs-navbar-collapse" role=3D"navi=
gation">
      <ul class=3D"nav navbar-nav">
       =20
        <li class=3D"active">
          <span>=E8=AF=AD=E8=A8=80=E7=89=B9=E6=80=A7</span>
        </li>
       =20
       =20
       =20
        <li>
          <a href=3D"http://lesscss.cn/functions/">=E5=87=BD=E6=95=B0=E6=89=
=8B=E5=86=8C</a>
        </li>
               =20
      =20
        <li>
          <a href=3D"http://lesscss.cn/usage/">=E4=BD=BF=E7=94=A8=E6=96=B9=
=E6=B3=95</a>
        </li>
       =20
       =20
      </ul>
      <ul class=3D"nav navbar-nav navbar-right">
              =20
       =20
        <li>
          <a href=3D"http://lesscss.cn/about/">=E5=85=B3=E4=BA=8E</a>
        </li>
          =20
       =20
        <li class=3D"dropdown">
          <a href=3D"http://lesscss.cn/features/#" class=3D"dropdown-toggle=
" data-toggle=3D"dropdown">GitHub <b class=3D"caret"></b></a>
          <ul class=3D"dropdown-menu">
            <li> <a rel=3D"nofollow" target=3D"_blank" href=3D"https://gith=
ub.com/less/less-docs">=E6=96=87=E6=A1=A3=E7=89=88=E6=9C=AC=E5=BA=93</a> </=
li>
            <li> <a rel=3D"nofollow" target=3D"_blank" href=3D"https://gith=
ub.com/less/less-docs/issues?&amp;state=3Dopen">=E6=96=87=E6=A1=A3=E8=AE=A8=
=E8=AE=BA</a> </li>
            <li class=3D"divider"></li>
            <li> <a rel=3D"nofollow" target=3D"_blank" href=3D"https://gith=
ub.com/less/less.js.git">Less.js =E7=89=88=E6=9C=AC=E5=BA=93</a> </li>
            <li> <a rel=3D"nofollow" target=3D"_blank" href=3D"https://gith=
ub.com/less/less.js/issues">Less.js =E8=AE=A8=E8=AE=BA</a> </li>
          </ul>
        </li>
      </ul>
    </nav>
  </div>
</header>


   =20
<div class=3D"docs-header" id=3D"content">
  <div class=3D"container">
    <h1>=E8=AF=AD=E8=A8=80=E7=89=B9=E6=80=A7</h1>
    <p>Language Features</p>
   =20
  </div>
</div>


<div class=3D"banner">
  <div class=3D"container">
    less v2.5.1 =E7=89=88=E6=9C=AC=E5=B7=B2=E7=BB=8F=E5=8F=91=E5=B8=83 -
    <strong>
      <a rel=3D"nofollow" target=3D"_blank" href=3D"https://github.com/less=
/less.js/blob/master/CHANGELOG.md">=E6=9F=A5=E7=9C=8B=E6=9B=B4=E6=96=B0=E6=
=97=A5=E5=BF=97</a>
    </strong>
  </div>
</div>


   =20
    <div class=3D"container docs-container">
      <div class=3D"row">
        <div class=3D"col-md-3">
          <div class=3D"sidebar hidden-print affix-top" role=3D"complementa=
ry">
            <div id=3D"navigation">
 =20
<ul class=3D"nav sidenav"><li><a href=3D"http://lesscss.cn/features/#featur=
es-overview-feature">=E6=A6=82=E8=A7=88</a><ul class=3D"nav"><li><a href=3D=
"http://lesscss.cn/features/#features-overview-feature-variables">=E5=8F=98=
=E9=87=8F</a></li>
<li><a href=3D"http://lesscss.cn/features/#features-overview-feature-mixin"=
>Mixin</a></li>
<li><a href=3D"http://lesscss.cn/features/#features-overview-feature-nested=
-rules">=E5=B5=8C=E5=A5=97=E8=A7=84=E5=88=99</a></li>
<li><a href=3D"http://lesscss.cn/features/#features-overview-feature-nested=
-directives-and-bubbling">Nested directives and bubbling</a></li>
<li><a href=3D"http://lesscss.cn/features/#features-overview-feature-operat=
ions">Operations</a></li>
<li><a href=3D"http://lesscss.cn/features/#features-overview-feature-escapi=
ng">Escaping</a></li>
<li><a href=3D"http://lesscss.cn/features/#features-overview-feature-functi=
ons">Functions</a></li>
<li><a href=3D"http://lesscss.cn/features/#features-overview-feature-namesp=
aces-and-accessors">Namespaces and Accessors</a></li>
<li><a href=3D"http://lesscss.cn/features/#features-overview-feature-scope"=
>Scope</a></li>
<li><a href=3D"http://lesscss.cn/features/#features-overview-feature-commen=
ts">Comments</a></li>
<li><a href=3D"http://lesscss.cn/features/#features-overview-feature-import=
ing">Importing</a></li></ul></li>
<li><a href=3D"http://lesscss.cn/features/#variables-feature">=E5=8F=98=E9=
=87=8F</a><ul class=3D"nav"><li><a href=3D"http://lesscss.cn/features/#vari=
ables-feature-overview">=E6=A6=82=E8=BF=B0</a></li>
<li><a href=3D"http://lesscss.cn/features/#variables-feature-variable-inter=
polation">=E7=94=A8=E6=B3=95</a></li>
<li><a href=3D"http://lesscss.cn/features/#variables-feature-selectors">=E9=
=80=89=E6=8B=A9=E5=99=A8</a></li>
<li><a href=3D"http://lesscss.cn/features/#variables-feature-url">URL</a></=
li>
<li><a href=3D"http://lesscss.cn/features/#variables-feature-import-stateme=
nts">import =E8=A1=A8=E8=BE=BE=E5=BC=8F</a></li>
<li><a href=3D"http://lesscss.cn/features/#variables-feature-properties">=
=E5=B1=9E=E6=80=A7=E5=90=8D</a></li>
<li><a href=3D"http://lesscss.cn/features/#variables-feature-variable-names=
">=E5=8F=98=E9=87=8F=E5=90=8D</a></li>
<li><a href=3D"http://lesscss.cn/features/#variables-feature-lazy-loading">=
=E5=BB=B6=E8=BF=9F=E5=8A=A0=E8=BD=BD</a></li>
<li><a href=3D"http://lesscss.cn/features/#variables-feature-default-variab=
les">=E9=BB=98=E8=AE=A4=E5=80=BC</a></li></ul></li>
<li><a href=3D"http://lesscss.cn/features/#extend-feature">=E7=BB=A7=E6=89=
=BF</a><ul class=3D"nav"><li><a href=3D"http://lesscss.cn/features/#extend-=
feature-extend-syntax">Extend syntax</a></li>
<li><a href=3D"http://lesscss.cn/features/#extend-feature-extend-attached-t=
o-selector">Extend attached to selector</a></li>
<li><a href=3D"http://lesscss.cn/features/#extend-feature-extend-inside-rul=
eset">Extend inside ruleset</a></li>
<li><a href=3D"http://lesscss.cn/features/#extend-feature-extending-nested-=
selectors">Extending nested Selectors</a></li>
<li><a href=3D"http://lesscss.cn/features/#extend-feature-exact-matching-wi=
th-extend">Exact Matching with Extend</a></li>
<li><a href=3D"http://lesscss.cn/features/#extend-feature-nth-expression">n=
th expression</a></li>
<li><a href=3D"http://lesscss.cn/features/#extend-feature-extend-all-">Exte=
nd "all"</a></li>
<li><a href=3D"http://lesscss.cn/features/#extend-feature-selector-interpol=
ation-with-extend">Selector Interpolation with Extend</a></li>
<li><a href=3D"http://lesscss.cn/features/#extend-feature-scoping-extend-in=
side-media">Scoping / Extend Inside @media</a></li>
<li><a href=3D"http://lesscss.cn/features/#extend-feature-duplication-detec=
tion">Duplication Detection</a></li>
<li><a href=3D"http://lesscss.cn/features/#extend-feature-use-cases-for-ext=
end">Use Cases for Extend</a></li>
<li><a href=3D"http://lesscss.cn/features/#extend-feature-classic-use-case"=
>Classic Use Case</a></li>
<li><a href=3D"http://lesscss.cn/features/#extend-feature-reducing-css-size=
">Reducing CSS Size</a></li>
<li><a href=3D"http://lesscss.cn/features/#extend-feature-combining-styles-=
a-more-advanced-mixin">Combining Styles / a more advanced mixin</a></li></u=
l></li>
<li><a href=3D"http://lesscss.cn/features/#mixins-feature">Mixin</a><ul cla=
ss=3D"nav"><li><a href=3D"http://lesscss.cn/features/#mixins-feature-not-ou=
tputting-the-mixin">Not outputting the mixin</a></li>
<li><a href=3D"http://lesscss.cn/features/#mixins-feature-selectors-in-mixi=
ns">Selectors in mixins</a></li>
<li><a href=3D"http://lesscss.cn/features/#mixins-feature-namespaces">Names=
paces</a></li>
<li><a href=3D"http://lesscss.cn/features/#mixins-feature-guarded-namespace=
s">Guarded Namespaces</a></li>
<li><a href=3D"http://lesscss.cn/features/#mixins-feature-the-important-key=
word">The !important keyword</a></li></ul></li>
<li><a href=3D"http://lesscss.cn/features/#mixins-parametric-feature">Param=
etric Mixins</a><ul class=3D"nav"><li><a href=3D"http://lesscss.cn/features=
/#mixins-parametric-feature-mixins-with-multiple-parameters">Mixins With Mu=
ltiple Parameters</a></li>
<li><a href=3D"http://lesscss.cn/features/#mixins-parametric-feature-named-=
parameters">Named Parameters</a></li>
<li><a href=3D"http://lesscss.cn/features/#mixins-parametric-feature-the-ar=
guments-variable">The @arguments variable</a></li>
<li><a href=3D"http://lesscss.cn/features/#mixins-parametric-feature-advanc=
ed-arguments-and-the-rest-variable">Advanced arguments and the @rest variab=
le</a></li>
<li><a href=3D"http://lesscss.cn/features/#mixins-parametric-feature-patter=
n-matching">Pattern-matching</a></li></ul></li>
<li><a href=3D"http://lesscss.cn/features/#mixins-as-functions-feature">Mix=
ins as Functions</a></li>
<li><a href=3D"http://lesscss.cn/features/#detached-rulesets-feature">Passi=
ng Rulesets to Mixins</a><ul class=3D"nav"><li><a href=3D"http://lesscss.cn=
/features/#detached-rulesets-feature-scoping">Scoping</a></li></ul></li>
<li><a href=3D"http://lesscss.cn/features/#import-directives-feature">Impor=
t Directives</a><ul class=3D"nav"><li><a href=3D"http://lesscss.cn/features=
/#import-directives-feature-file-extensions">File extensions</a></li></ul><=
/li>
<li><a href=3D"http://lesscss.cn/features/#import-options">Import Options</=
a><ul class=3D"nav"><li><a href=3D"http://lesscss.cn/features/#import-optio=
ns-reference">reference</a></li>
<li><a href=3D"http://lesscss.cn/features/#import-options-reference-example=
">reference example</a></li>
<li><a href=3D"http://lesscss.cn/features/#import-options-inline">inline</a=
></li>
<li><a href=3D"http://lesscss.cn/features/#import-options-less">less</a></l=
i>
<li><a href=3D"http://lesscss.cn/features/#import-options-css">css</a></li>
<li><a href=3D"http://lesscss.cn/features/#import-options-once">once</a></l=
i>
<li><a href=3D"http://lesscss.cn/features/#import-options-multiple">multipl=
e</a></li>
<li><a href=3D"http://lesscss.cn/features/#import-options-optional">optiona=
l</a></li></ul></li>
<li><a href=3D"http://lesscss.cn/features/#mixin-guards-feature">Mixin Guar=
ds</a><ul class=3D"nav"><li><a href=3D"http://lesscss.cn/features/#mixin-gu=
ards-feature-guard-comparison-operators">Guard comparison operators</a></li=
>
<li><a href=3D"http://lesscss.cn/features/#mixin-guards-feature-guard-logic=
al-operators">Guard logical operators</a></li>
<li><a href=3D"http://lesscss.cn/features/#mixin-guards-feature-type-checki=
ng-functions">Type checking functions</a></li>
<li><a href=3D"http://lesscss.cn/features/#mixin-guards-feature-conditional=
-mixins">Conditional mixins</a></li></ul></li>
<li><a href=3D"http://lesscss.cn/features/#css-guards-feature">CSS Guards</=
a></li>
<li><a href=3D"http://lesscss.cn/features/#loops-feature">Loops</a></li>
<li><a href=3D"http://lesscss.cn/features/#merge-feature">Merge</a><ul clas=
s=3D"nav"><li><a href=3D"http://lesscss.cn/features/#merge-feature-comma">C=
omma</a></li>
<li><a href=3D"http://lesscss.cn/features/#merge-feature-space">Space</a></=
li></ul></li>
<li><a href=3D"http://lesscss.cn/features/#parent-selectors-feature">Parent=
 Selectors</a><ul class=3D"nav"><li><a href=3D"http://lesscss.cn/features/#=
parent-selectors-feature-multiple-">Multiple &amp;</a></li>
<li><a href=3D"http://lesscss.cn/features/#parent-selectors-feature-changin=
g-selector-order">Changing selector order</a></li>
<li><a href=3D"http://lesscss.cn/features/#parent-selectors-feature-combina=
torial-explosion">Combinatorial explosion</a></li></ul></li></ul></div>
          </div>
        </div>
        <div class=3D"col-md-9" role=3D"main">
         =20
<div class=3D"panel docs-content">
 =20


  <!-- =E6=A6=82=E8=A7=88 -->
  <div class=3D"docs-section">
    <div class=3D"page-header">
      <h1 class=3D"docs-heading">=E6=A6=82=E8=A7=88<span class=3D"anchor-ta=
rget" id=3D"features-overview-feature"></span>
<a href=3D"http://lesscss.cn/features/#features-overview-feature" name=3D"f=
eatures-overview-feature" class=3D"anchor glyphicon glyphicon-link"></a></h=
1>
    </div>

   =20
    <div class=3D"section-content">
     =20


      <!-- features-overview -->
      =20


<blockquote>
<p>=E4=BD=9C=E4=B8=BA CSS =E7=9A=84=E6=89=A9=E5=B1=95=EF=BC=8CLess =E4=B8=
=8D=E4=BB=85=E5=85=BC=E5=AE=B9 CSS=EF=BC=8C=E8=80=8C=E4=B8=94=E6=96=B0=E5=
=A2=9E=E7=9A=84=E7=89=B9=E6=80=A7=E4=B9=9F=E6=98=AF=E4=BD=BF=E7=94=A8 CSS =
=E8=AF=AD=E6=B3=95=E3=80=82</p>
</blockquote>
<h3 class=3D"docs-heading">=E5=8F=98=E9=87=8F<span class=3D"anchor-target" =
id=3D"features-overview-feature-variables"></span>
<a href=3D"http://lesscss.cn/features/#features-overview-feature-variables"=
 name=3D"features-overview-feature-variables" class=3D"anchor glyphicon gly=
phicon-link"></a></h3>

<p>=E4=BE=8B=E5=AD=90=EF=BC=9A</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-variable">@nice-blue:</s=
pan> <span class=3D"hljs-hexcolor">#5B83AD</span>;
<span class=3D"hljs-variable">@light-blue:</span> <span class=3D"hljs-varia=
ble">@nice-blue</span> + <span class=3D"hljs-hexcolor">#111</span>;

<span class=3D"hljs-id">#header</span> {
  <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-variable=
">@light-blue</span>;
}
</code></pre>
<p>=E8=BE=93=E5=87=BA=EF=BC=9A</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-id">#header</span> {
  <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-hexcolor=
">#6c94be</span>;
}
</code></pre>
<h3 class=3D"docs-heading">Mixin<span class=3D"anchor-target" id=3D"feature=
s-overview-feature-mixin"></span>
<a href=3D"http://lesscss.cn/features/#features-overview-feature-mixin" nam=
e=3D"features-overview-feature-mixin" class=3D"anchor glyphicon glyphicon-l=
ink"></a></h3>
<p>Mixins are a way of including ("mixing in") a bunch of properties from o=
ne rule-set into another rule-set. So say we have the following class:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.bordered</span> {
  <span class=3D"hljs-attribute">border-top</span>: dotted <span class=3D"h=
ljs-number">1px</span> black;
  <span class=3D"hljs-attribute">border-bottom</span>: solid <span class=3D=
"hljs-number">2px</span> black;
}
</code></pre>
<p>And we want to use these properties inside other rule-sets. Well, we jus=
t have to drop in the name of the class where we want the properties, like =
so:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-id">#menu</span> <span c=
lass=3D"hljs-tag">a</span> {
  <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-hexcolor=
">#111</span>;
  <span class=3D"hljs-class">.bordered</span>;
}

<span class=3D"hljs-class">.post</span> <span class=3D"hljs-tag">a</span> {
  <span class=3D"hljs-attribute">color</span>: red;
  <span class=3D"hljs-class">.bordered</span>;
}
</code></pre>
<p>The properties of the <code>.bordered</code> class will now appear in bo=
th <code>#menu a</code> and <code>.post a</code>. (Note that you can also u=
se <code>#ids</code> as mixins.)</p>
<p><strong>Learn more</strong></p>
<ul>
<li><a href=3D"http://lesscss.cn/features/#mixins-feature">More about mixin=
s</a></li>
<li><a href=3D"http://lesscss.cn/features/#mixins-parametric-feature">Param=
etric Mixins</a></li>
</ul>
<h3 class=3D"docs-heading">=E5=B5=8C=E5=A5=97=E8=A7=84=E5=88=99<span class=
=3D"anchor-target" id=3D"features-overview-feature-nested-rules"></span>
<a href=3D"http://lesscss.cn/features/#features-overview-feature-nested-rul=
es" name=3D"features-overview-feature-nested-rules" class=3D"anchor glyphic=
on glyphicon-link"></a></h3>

<p>Less gives you the ability to use nesting instead of, or in combination =
with cascading. Let's say we have the following CSS:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-id">#header</span> {
  <span class=3D"hljs-attribute">color</span>: black;
}
<span class=3D"hljs-id">#header</span> <span class=3D"hljs-class">.navigati=
on</span> {
  <span class=3D"hljs-attribute">font-size</span>: <span class=3D"hljs-numb=
er">12px</span>;
}
<span class=3D"hljs-id">#header</span> <span class=3D"hljs-class">.logo</sp=
an> {
  <span class=3D"hljs-attribute">width</span>: <span class=3D"hljs-number">=
300px</span>;
}
</code></pre>
<p>In Less, we can also write it this way:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-id">#header</span> {
  <span class=3D"hljs-attribute">color</span>: black;
  <span class=3D"hljs-class">.navigation</span> {
    <span class=3D"hljs-attribute">font-size</span>: <span class=3D"hljs-nu=
mber">12px</span>;
  }
  <span class=3D"hljs-class">.logo</span> {
    <span class=3D"hljs-attribute">width</span>: <span class=3D"hljs-number=
">300px</span>;
  }
}
</code></pre>
<p>The resulting code is more concise, and mimics the structure of your HTM=
L.</p>
<p>You can also bundle pseudo-selectors with your mixins using this method.=
 Here's the classic clearfix hack, rewritten as a mixin (<code>&amp;</code>=
 represents the current selector parent):</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.clearfix</span> =
{
  <span class=3D"hljs-attribute">display</span>: block;
  <span class=3D"hljs-attribute">zoom</span>: <span class=3D"hljs-number">1=
</span>;

  <span class=3D"hljs-keyword">&amp;</span><span class=3D"hljs-pseudo">:aft=
er</span> {
    <span class=3D"hljs-attribute">content</span>: <span class=3D"hljs-stri=
ng">" "</span>;
    <span class=3D"hljs-attribute">display</span>: block;
    <span class=3D"hljs-attribute">font-size</span>: <span class=3D"hljs-nu=
mber">0</span>;
    <span class=3D"hljs-attribute">height</span>: <span class=3D"hljs-numbe=
r">0</span>;
    <span class=3D"hljs-attribute">clear</span>: both;
    <span class=3D"hljs-attribute">visibility</span>: hidden;
  }
}
</code></pre>
<p><strong>See also</strong></p>
<ul>
<li><a href=3D"http://lesscss.cn/features/#parent-selectors-feature">Parent=
 Selectors</a></li>
</ul>
<h3 class=3D"docs-heading">Nested directives and bubbling<span class=3D"anc=
hor-target" id=3D"features-overview-feature-nested-directives-and-bubbling"=
></span>
<a href=3D"http://lesscss.cn/features/#features-overview-feature-nested-dir=
ectives-and-bubbling" name=3D"features-overview-feature-nested-directives-a=
nd-bubbling" class=3D"anchor glyphicon glyphicon-link"></a></h3>
<p>Directives such as <code>media</code> or <code>keyframe</code> can be ne=
sted in the same way as selectors. Directive is placed on top and relative =
order against other elements inside the same ruleset remains unchanged. Thi=
s is called bubbling.</p>
<p>Conditional directives e.g. <code>@Media</code>, <code>@supports</code> =
and <code>@document</code> have also selectors copied into their bodies:</p=
>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.screen-color</sp=
an> {
  <span class=3D"hljs-at_rule">@media</span> screen {
    <span class=3D"hljs-attribute">color</span>: green;
    <span class=3D"hljs-at_rule">@media</span> (min-width: <span class=3D"h=
ljs-number">768px</span>) {
      <span class=3D"hljs-attribute">color</span>: red;
    }
  }
  <span class=3D"hljs-at_rule">@media</span> tv {
    <span class=3D"hljs-attribute">color</span>: black;
  }
}
</code></pre>
<p>outputs:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-at_rule">@media</span> sc=
reen {
  <span class=3D"hljs-class">.screen-color</span> {
    <span class=3D"hljs-attribute">color</span>: green;
  }
}
<span class=3D"hljs-at_rule">@media</span> screen and (min-width: <span cla=
ss=3D"hljs-number">768px</span>) {
  <span class=3D"hljs-class">.screen-color</span> {
    <span class=3D"hljs-attribute">color</span>: red;
  }
}
<span class=3D"hljs-at_rule">@media</span> tv {
  <span class=3D"hljs-class">.screen-color</span> {
    <span class=3D"hljs-attribute">color</span>: black;
  }
}
</code></pre>
<p>Remaining non-conditional directives, for example <code>font-face</code>=
 or <code>keyframes</code>, are bubbled up too. Their bodies do not change:=
</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-id">#a</span> {
  <span class=3D"hljs-attribute">color</span>: blue;
  <span class=3D"hljs-at_rule">@font-face</span> {
    <span class=3D"hljs-attribute">src</span>: made-up-url;
  }
  <span class=3D"hljs-attribute">padding</span>: <span class=3D"hljs-number=
">2</span> <span class=3D"hljs-number">2</span> <span class=3D"hljs-number"=
>2</span> <span class=3D"hljs-number">2</span>;
}
</code></pre>
<p>outputs:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-id">#a</span> {
  <span class=3D"hljs-attribute">color</span>: blue;
}
<span class=3D"hljs-at_rule">@font-face</span> {
  <span class=3D"hljs-attribute">src</span>: made-up-url;
}
<span class=3D"hljs-id">#a</span> {
  <span class=3D"hljs-attribute">padding</span>: <span class=3D"hljs-number=
">2</span> <span class=3D"hljs-number">2</span> <span class=3D"hljs-number"=
>2</span> <span class=3D"hljs-number">2</span>;
}
</code></pre>
<h3 class=3D"docs-heading">Operations<span class=3D"anchor-target" id=3D"fe=
atures-overview-feature-operations"></span>
<a href=3D"http://lesscss.cn/features/#features-overview-feature-operations=
" name=3D"features-overview-feature-operations" class=3D"anchor glyphicon g=
lyphicon-link"></a></h3>
<p>Any number, color or variable can be operated on. Here are a couple of e=
xamples:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-variable">@base:</span> =
<span class=3D"hljs-number">5%</span>;
<span class=3D"hljs-variable">@filler:</span> <span class=3D"hljs-variable"=
>@base</span> * <span class=3D"hljs-number">2</span>;
<span class=3D"hljs-variable">@other:</span> <span class=3D"hljs-variable">=
@base</span> + <span class=3D"hljs-variable">@filler</span>;

<span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-hexcolor">=
#888</span> / <span class=3D"hljs-number">4</span>;
<span class=3D"hljs-attribute">background-color</span>: <span class=3D"hljs=
-variable">@base-color</span> + <span class=3D"hljs-hexcolor">#111</span>;
<span class=3D"hljs-attribute">height</span>: <span class=3D"hljs-number">1=
00%</span> / <span class=3D"hljs-number">2</span> + <span class=3D"hljs-var=
iable">@filler</span>;
</code></pre>
<p>The output is pretty much what you expect=E2=80=94Less understands the d=
ifference between colors and units. If a unit is used in an operation, like=
 in:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-variable">@var:</span> <=
span class=3D"hljs-number">1px</span> + <span class=3D"hljs-number">5</span=
>;
</code></pre>
<p>Less will use that unit for the final output=E2=80=94<code>6px</code> in=
 this case.</p>
<h3 class=3D"docs-heading">Escaping<span class=3D"anchor-target" id=3D"feat=
ures-overview-feature-escaping"></span>
<a href=3D"http://lesscss.cn/features/#features-overview-feature-escaping" =
name=3D"features-overview-feature-escaping" class=3D"anchor glyphicon glyph=
icon-link"></a></h3>
<p>Escaping allows you to use any arbitrary string as property or variable =
value. Anything inside <code>~"anything"</code> or <code>~'anything'</code>=
 is used as is with no changes except <a href=3D"http://lesscss.cn/features=
/#variables-feature-variable-interpolation">interpolation</a>.</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.weird-element</s=
pan> {
  <span class=3D"hljs-attribute">content</span>: <span class=3D"hljs-string=
">~"^//* some horrible but needed css hack"</span>;
}
</code></pre>
<p>results in:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.weird-element</s=
pan> {
  <span class=3D"hljs-attribute">content</span>: ^<span class=3D"hljs-comme=
nt">//* some horrible but needed css hack;</span>
}
</code></pre>
<h3 class=3D"docs-heading">Functions<span class=3D"anchor-target" id=3D"fea=
tures-overview-feature-functions"></span>
<a href=3D"http://lesscss.cn/features/#features-overview-feature-functions"=
 name=3D"features-overview-feature-functions" class=3D"anchor glyphicon gly=
phicon-link"></a></h3>
<p>Less provides a variety of functions which transform colors, manipulate =
strings and do maths. They are documented fully in the function reference.<=
/p>
<p>Using them is pretty straightforward. The following example uses percent=
age to convert 0.5 to 50%, increases the saturation of a base color by 5% a=
nd then sets the background color to one that is lightened by 25% and spun =
by 8 degrees:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-variable">@base:</span> =
<span class=3D"hljs-hexcolor">#f04615</span>;
<span class=3D"hljs-variable">@width:</span> <span class=3D"hljs-number">0.=
5</span>;

<span class=3D"hljs-class">.class</span> {
  <span class=3D"hljs-attribute">width</span>: <span class=3D"hljs-function=
">percentage</span>(<span class=3D"hljs-variable">@width</span>); <span cla=
ss=3D"hljs-comment">// returns `50%`</span>
  <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-function=
">saturate</span>(<span class=3D"hljs-variable">@base</span>, <span class=
=3D"hljs-number">5%</span>);
  <span class=3D"hljs-attribute">background-color</span>: <span class=3D"hl=
js-function">spin</span>(<span class=3D"hljs-function">lighten</span>(<span=
 class=3D"hljs-variable">@base</span>, <span class=3D"hljs-number">25%</spa=
n>), <span class=3D"hljs-number">8</span>);
}
</code></pre>
<h3 class=3D"docs-heading">Namespaces and Accessors<span class=3D"anchor-ta=
rget" id=3D"features-overview-feature-namespaces-and-accessors"></span>
<a href=3D"http://lesscss.cn/features/#features-overview-feature-namespaces=
-and-accessors" name=3D"features-overview-feature-namespaces-and-accessors"=
 class=3D"anchor glyphicon glyphicon-link"></a></h3>
<p>(Not to be confused with <a href=3D"http://www.w3.org/TR/css3-namespace/=
">CSS <code>@namespace</code></a> or <a href=3D"http://www.w3.org/TR/css3-s=
electors/#typenmsp">namespace selectors</a>).</p>
<p>Sometimes, you may want to group your mixins, for organizational purpose=
s, or just to offer some encapsulation. You can do this pretty intuitively =
in Less, say you want to bundle some mixins and variables under <code>#bund=
le</code>, for later reuse or distributing:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-id">#bundle</span> {
  <span class=3D"hljs-class">.button</span> {
    <span class=3D"hljs-attribute">display</span>: block;
    <span class=3D"hljs-attribute">border</span>: <span class=3D"hljs-numbe=
r">1px</span> solid black;
    <span class=3D"hljs-attribute">background-color</span>: grey;
    <span class=3D"hljs-keyword">&amp;</span><span class=3D"hljs-pseudo">:h=
over</span> {
      <span class=3D"hljs-attribute">background-color</span>: white
    }
  }
  <span class=3D"hljs-class">.tab</span> { ... }
  <span class=3D"hljs-class">.citation</span> { ... }
}
</code></pre>
<p>Now if we want to mixin the <code>.button</code> class in our <code>#hea=
der a</code>, we can do:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-id">#header</span> <span=
 class=3D"hljs-tag">a</span> {
  <span class=3D"hljs-attribute">color</span>: orange;
  <span class=3D"hljs-id">#bundle</span> &gt; <span class=3D"hljs-class">.b=
utton</span>;
}
</code></pre>
<p>Note that variables declared within a namespace will be scoped to that n=
amespace only and will not be available outside of the scope via the same s=
yntax that you would use to reference a mixin (<code>#Namespace &gt; .mixin=
-name</code>). So, for example, you can't do the following: (<code>#Namespa=
ce &gt; @this-will-not-work</code>).</p>
<h3 class=3D"docs-heading">Scope<span class=3D"anchor-target" id=3D"feature=
s-overview-feature-scope"></span>
<a href=3D"http://lesscss.cn/features/#features-overview-feature-scope" nam=
e=3D"features-overview-feature-scope" class=3D"anchor glyphicon glyphicon-l=
ink"></a></h3>
<p>Scope in Less is very similar to that of programming languages. Variable=
s and mixins are first looked for locally, and if they aren't found, the co=
mpiler will look in the parent scope, and so on.</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-variable">@var:</span> r=
ed;

<span class=3D"hljs-id">#page</span> {
  <span class=3D"hljs-variable">@var:</span> white;
  <span class=3D"hljs-id">#header</span> {
    <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-variab=
le">@var</span>; <span class=3D"hljs-comment">// white</span>
  }
}
</code></pre>
<p>Variables and mixins do not have to be declared before being used so the=
 following Less code is identical to the previous example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-variable">@var:</span> r=
ed;

<span class=3D"hljs-id">#page</span> {
  <span class=3D"hljs-id">#header</span> {
    <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-variab=
le">@var</span>; <span class=3D"hljs-comment">// white</span>
  }
  <span class=3D"hljs-variable">@var:</span> white;
}
</code></pre>
<p><strong>See also</strong></p>
<ul>
<li><a href=3D"http://lesscss.cn/features/#variables-feature-lazy-loading">=
Lazy Loading</a></li>
</ul>
<h3 class=3D"docs-heading">Comments<span class=3D"anchor-target" id=3D"feat=
ures-overview-feature-comments"></span>
<a href=3D"http://lesscss.cn/features/#features-overview-feature-comments" =
name=3D"features-overview-feature-comments" class=3D"anchor glyphicon glyph=
icon-link"></a></h3>
<p>Both block-style and inline comments may be used:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-comment">/* One hell of =
a block
style comment! */</span>
<span class=3D"hljs-variable">@var:</span> red;

<span class=3D"hljs-comment">// Get in line!</span>
<span class=3D"hljs-variable">@var:</span> white;
</code></pre>
<h3 class=3D"docs-heading">Importing<span class=3D"anchor-target" id=3D"fea=
tures-overview-feature-importing"></span>
<a href=3D"http://lesscss.cn/features/#features-overview-feature-importing"=
 name=3D"features-overview-feature-importing" class=3D"anchor glyphicon gly=
phicon-link"></a></h3>
<p>Importing works pretty much as expected. You can import a <code>.less</c=
ode> file, and all the variables in it will be available. The extension is =
optionally specified for <code>.less</code> files.</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-at_rule">@import</span> <=
span class=3D"hljs-string">"library"</span>; <span class=3D"hljs-comment">/=
/ library.less</span>
<span class=3D"hljs-at_rule">@import</span> <span class=3D"hljs-string">"ty=
po.css"</span>;
</code></pre>


      <br>
    </div>
   =20

  </div>

  <!-- =E5=8F=98=E9=87=8F -->
  <div class=3D"docs-section">
    <div class=3D"page-header">
      <h1 class=3D"docs-heading">=E5=8F=98=E9=87=8F<span class=3D"anchor-ta=
rget" id=3D"variables-feature"></span>
<a href=3D"http://lesscss.cn/features/#variables-feature" name=3D"variables=
-feature" class=3D"anchor glyphicon glyphicon-link"></a></h1>
    </div>

   =20
    <div class=3D"section-content">
     =20


      <!-- variables -->
      =20


<blockquote>
<p>=E7=BB=9F=E4=B8=80=E7=AE=A1=E7=90=86=E5=B8=B8=E7=94=A8=E7=9A=84=E5=80=BC=
=E3=80=82</p>
</blockquote>
<h2 class=3D"docs-heading">=E6=A6=82=E8=BF=B0<span class=3D"anchor-target" =
id=3D"variables-feature-overview"></span>
<a href=3D"http://lesscss.cn/features/#variables-feature-overview" name=3D"=
variables-feature-overview" class=3D"anchor glyphicon glyphicon-link"></a><=
/h2>

<p>=E5=9C=A8=E4=BB=A3=E7=A0=81=E4=B8=AD=E7=BB=8F=E5=B8=B8=E4=BC=9A=E9=81=87=
=E5=88=B0=E9=87=8D=E5=A4=8D=E5=87=BA=E7=8E=B0=E7=9A=84=E5=80=BC=EF=BC=9A</p=
>
<pre><code class=3D"lang-css"><span class=3D"hljs-tag">a</span>,
<span class=3D"hljs-class">.link</span> {
  <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-hexcolor=
">#428bca</span>;
}
<span class=3D"hljs-class">.widget</span> {
  <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-hexcolor=
">#fff</span>;
  <span class=3D"hljs-attribute">background</span>: <span class=3D"hljs-hex=
color">#428bca</span>;
}
</code></pre>
<p>=E5=8F=98=E9=87=8F=E7=9A=84=E4=BD=9C=E7=94=A8=E5=B0=B1=E6=98=AF=E6=8A=8A=
=E5=B8=B8=E7=94=A8=E7=9A=84=E5=80=BC=E5=AE=9A=E4=B9=89=E5=9C=A8=E4=B8=80=E4=
=B8=AA=E5=9C=B0=E6=96=B9=EF=BC=8C=E4=BD=BF=E4=BB=A3=E7=A0=81=E6=9B=B4=E6=98=
=93=E7=BB=B4=E6=8A=A4=EF=BC=9A</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-comment">// =E5=8F=98=E9=
=87=8F</span>
<span class=3D"hljs-variable">@link-color:</span>        <span class=3D"hlj=
s-hexcolor">#428bca</span>; <span class=3D"hljs-comment">// =E6=B5=B7=E8=93=
=9D=E8=89=B2</span>
<span class=3D"hljs-variable">@link-color-hover:</span>  <span class=3D"hlj=
s-function">darken</span>(<span class=3D"hljs-variable">@link-color</span>,=
 <span class=3D"hljs-number">10%</span>);

<span class=3D"hljs-comment">// =E7=94=A8=E6=B3=95</span>
<span class=3D"hljs-tag">a</span>,
<span class=3D"hljs-class">.link</span> {
  <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-variable=
">@link-color</span>;
}
<span class=3D"hljs-tag">a</span><span class=3D"hljs-pseudo">:hover</span> =
{
  <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-variable=
">@link-color-hover</span>;
}
<span class=3D"hljs-class">.widget</span> {
  <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-hexcolor=
">#fff</span>;
  <span class=3D"hljs-attribute">background</span>: <span class=3D"hljs-var=
iable">@link-color</span>;
}
</code></pre>
<h2 class=3D"docs-heading">=E7=94=A8=E6=B3=95<span class=3D"anchor-target" =
id=3D"variables-feature-variable-interpolation"></span>
<a href=3D"http://lesscss.cn/features/#variables-feature-variable-interpola=
tion" name=3D"variables-feature-variable-interpolation" class=3D"anchor gly=
phicon glyphicon-link"></a></h2>

<p>=E5=8F=98=E9=87=8F=E4=B8=8D=E4=BB=85=E7=94=A8=E4=BA=8E=E5=B1=9E=E6=80=A7=
=E5=80=BC=EF=BC=8C=E8=BF=98=E5=8F=AF=E7=94=A8=E4=BA=8E=E9=80=89=E6=8B=A9=E5=
=99=A8=E3=80=81=E5=B1=9E=E6=80=A7=E5=90=8D=EF=BC=8CURL=E3=80=81=E4=BB=A5=E5=
=8F=8A <code>@import</code> =E8=A1=A8=E8=BE=BE=E5=BC=8F=E3=80=82</p>
<h3 class=3D"docs-heading">=E9=80=89=E6=8B=A9=E5=99=A8<span class=3D"anchor=
-target" id=3D"variables-feature-selectors"></span>
<a href=3D"http://lesscss.cn/features/#variables-feature-selectors" name=3D=
"variables-feature-selectors" class=3D"anchor glyphicon glyphicon-link"></a=
></h3>

<p>=E4=BE=8B=E5=AD=90=EF=BC=9A</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-comment">// =E5=8F=98=E9=
=87=8F</span>
<span class=3D"hljs-variable">@my-selector:</span> banner;

<span class=3D"hljs-comment">// =E7=94=A8=E6=B3=95</span>
<span class=3D"hljs-class">.@{my-selector}</span> {
  <span class=3D"hljs-attribute">font-weight</span>: bold;
  <span class=3D"hljs-attribute">line-height</span>: <span class=3D"hljs-nu=
mber">40px</span>;
  <span class=3D"hljs-attribute">margin</span>: <span class=3D"hljs-number"=
>0</span> auto;
}
</code></pre>
<p>=E8=BE=93=E5=87=BA=EF=BC=9A</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.banner</span> {
  <span class=3D"hljs-attribute">font-weight</span>: bold;
  <span class=3D"hljs-attribute">line-height</span>: <span class=3D"hljs-nu=
mber">40px</span>;
  <span class=3D"hljs-attribute">margin</span>: <span class=3D"hljs-number"=
>0</span> auto;
}
</code></pre>
<h3 class=3D"docs-heading">URL<span class=3D"anchor-target" id=3D"variables=
-feature-url"></span>
<a href=3D"http://lesscss.cn/features/#variables-feature-url" name=3D"varia=
bles-feature-url" class=3D"anchor glyphicon glyphicon-link"></a></h3>
<pre><code class=3D"lang-less"><span class=3D"hljs-comment">// =E5=8F=98=E9=
=87=8F</span>
<span class=3D"hljs-variable">@images:</span> <span class=3D"hljs-string">"=
../img"</span>;

<span class=3D"hljs-comment">// =E7=94=A8=E6=B3=95</span>
<span class=3D"hljs-tag">body</span> {
  <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-hexcolor=
">#444</span>;
  <span class=3D"hljs-attribute">background</span>: <span class=3D"hljs-fun=
ction">url</span>(<span class=3D"hljs-string">"@{images}/white-sand.png"</s=
pan>);
}
</code></pre>
<h3 class=3D"docs-heading">import =E8=A1=A8=E8=BE=BE=E5=BC=8F<span class=3D=
"anchor-target" id=3D"variables-feature-import-statements"></span>
<a href=3D"http://lesscss.cn/features/#variables-feature-import-statements"=
 name=3D"variables-feature-import-statements" class=3D"anchor glyphicon gly=
phicon-link"></a></h3>







<p>=E4=BE=8B=E5=AD=90=EF=BC=9A</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-comment">// =E5=8F=98=E9=
=87=8F</span>
<span class=3D"hljs-variable">@themes:</span> <span class=3D"hljs-string">"=
../../src/themes"</span>;

<span class=3D"hljs-comment">// =E7=94=A8=E6=B3=95</span>
<span class=3D"hljs-at_rule">@import</span> <span class=3D"hljs-string">"@{=
themes}/tidal-wave.less"</span>;
</code></pre>
<h3 class=3D"docs-heading">=E5=B1=9E=E6=80=A7=E5=90=8D<span class=3D"anchor=
-target" id=3D"variables-feature-properties"></span>
<a href=3D"http://lesscss.cn/features/#variables-feature-properties" name=
=3D"variables-feature-properties" class=3D"anchor glyphicon glyphicon-link"=
></a></h3>

<p>=E4=BE=8B=E5=AD=90=EF=BC=9A</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-variable">@property:</sp=
an> color;

<span class=3D"hljs-class">.widget</span> {
  <span class=3D"hljs-attribute">@{property}</span>: <span class=3D"hljs-he=
xcolor">#0ee</span>;
  <span class=3D"hljs-attribute">background-@{property}</span>: <span class=
=3D"hljs-hexcolor">#999</span>;
}
</code></pre>
<p>=E8=BE=93=E5=87=BA=EF=BC=9A</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.widget</span> {
  <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-hexcolor=
">#0ee</span>;
  <span class=3D"hljs-attribute">background-color</span>: <span class=3D"hl=
js-hexcolor">#999</span>;
}
</code></pre>
<h2 class=3D"docs-heading">=E5=8F=98=E9=87=8F=E5=90=8D<span class=3D"anchor=
-target" id=3D"variables-feature-variable-names"></span>
<a href=3D"http://lesscss.cn/features/#variables-feature-variable-names" na=
me=3D"variables-feature-variable-names" class=3D"anchor glyphicon glyphicon=
-link"></a></h2>

<p>=E4=BE=8B=E5=AD=90=EF=BC=9A</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-variable">@fnord:</span>=
  <span class=3D"hljs-string">"I am fnord."</span>;
<span class=3D"hljs-variable">@var:</span>    <span class=3D"hljs-string">"=
fnord"</span>;
<span class=3D"hljs-attribute">content</span>: <span class=3D"hljs-variable=
">@@var</span>;
</code></pre>
<p>=E8=BE=93=E5=87=BA=EF=BC=9A</p>
<pre><code>content: "I am fnord.";
</code></pre><h2 class=3D"docs-heading">=E5=BB=B6=E8=BF=9F=E5=8A=A0=E8=BD=
=BD<span class=3D"anchor-target" id=3D"variables-feature-lazy-loading"></sp=
an>
<a href=3D"http://lesscss.cn/features/#variables-feature-lazy-loading" name=
=3D"variables-feature-lazy-loading" class=3D"anchor glyphicon glyphicon-lin=
k"></a></h2>

<blockquote>
<p>=E5=8F=98=E9=87=8F=E6=98=AF=E5=BB=B6=E8=BF=9F=E5=8A=A0=E8=BD=BD=E7=9A=84=
=EF=BC=8C=E4=B8=8D=E4=B8=80=E5=AE=9A=E8=A6=81=E5=9C=A8=E4=BD=BF=E7=94=A8=E4=
=B9=8B=E5=89=8D=E5=AE=9A=E4=B9=89=E3=80=82</p>
</blockquote>
<p>=E4=BE=8B=E5=AD=90=EF=BC=9A</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.lazy-eval</span>=
 {
  <span class=3D"hljs-attribute">width</span>: <span class=3D"hljs-variable=
">@var</span>;
}

<span class=3D"hljs-variable">@var:</span> <span class=3D"hljs-variable">@a=
</span>;
<span class=3D"hljs-variable">@a:</span> <span class=3D"hljs-number">9%</sp=
an>;
</code></pre>
<p>=E6=88=96=EF=BC=9A</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.lazy-eval-scope<=
/span> {
  <span class=3D"hljs-attribute">width</span>: <span class=3D"hljs-variable=
">@var</span>;
  <span class=3D"hljs-variable">@a:</span> <span class=3D"hljs-number">9%</=
span>;
}

<span class=3D"hljs-variable">@var:</span> <span class=3D"hljs-variable">@a=
</span>;
<span class=3D"hljs-variable">@a:</span> <span class=3D"hljs-number">100%</=
span>;
</code></pre>
<p>=E8=BE=93=E5=87=BA=EF=BC=9A</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.lazy-eval-scope</=
span> {
  <span class=3D"hljs-attribute">width</span>: <span class=3D"hljs-number">=
9%</span>;
}
</code></pre>
<p>=E5=BD=93=E5=8F=98=E9=87=8F=E8=A2=AB=E5=A4=9A=E6=AC=A1=E5=AE=9A=E4=B9=89=
=E6=97=B6=EF=BC=8C=E4=BB=A5=E6=9C=80=E5=90=8E=E4=B8=80=E6=AC=A1=E5=AE=9A=E4=
=B9=89=E4=B8=BA=E5=87=86=EF=BC=8C=E4=B8=94=E4=BB=8E=E5=BD=93=E5=89=8D=E4=BD=
=9C=E7=94=A8=E5=9F=9F=E5=90=91=E4=B8=8A=E6=90=9C=E5=AF=BB=E3=80=82</p>
<p>=E4=BE=8B=E5=AD=90=EF=BC=9A</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-variable">@var:</span> <=
span class=3D"hljs-number">0</span>;
<span class=3D"hljs-class">.class</span> {
  <span class=3D"hljs-variable">@var:</span> <span class=3D"hljs-number">1<=
/span>;
  <span class=3D"hljs-class">.brass</span> {
    <span class=3D"hljs-variable">@var:</span> <span class=3D"hljs-number">=
2</span>;
    <span class=3D"hljs-attribute">three</span>: <span class=3D"hljs-variab=
le">@var</span>;
    <span class=3D"hljs-variable">@var:</span> <span class=3D"hljs-number">=
3</span>;
  }
  <span class=3D"hljs-attribute">one</span>: <span class=3D"hljs-variable">=
@var</span>;
}
</code></pre>
<p>=E8=BE=93=E5=87=BA=EF=BC=9A</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.class</span> {
  <span class=3D"hljs-attribute">one</span>: <span class=3D"hljs-number">1<=
/span>;
}
<span class=3D"hljs-class">.class</span> <span class=3D"hljs-class">.brass<=
/span> {
  <span class=3D"hljs-attribute">three</span>: <span class=3D"hljs-number">=
3</span>;
}
</code></pre>
<h2 class=3D"docs-heading">=E9=BB=98=E8=AE=A4=E5=80=BC<span class=3D"anchor=
-target" id=3D"variables-feature-default-variables"></span>
<a href=3D"http://lesscss.cn/features/#variables-feature-default-variables"=
 name=3D"variables-feature-default-variables" class=3D"anchor glyphicon gly=
phicon-link"></a></h2>

<p>=E5=8F=AF=E4=BB=A5=E5=BB=BA=E7=AB=8B=E5=8F=98=E9=87=8F=E5=BA=93=E6=9D=A5=
=E7=BB=9F=E4=B8=80=E8=AE=BE=E5=AE=9A=E9=BB=98=E8=AE=A4=E5=80=BC=EF=BC=8C=E7=
=84=B6=E5=90=8E=E9=80=9A=E8=BF=87=E9=87=8D=E6=96=B0=E5=AE=9A=E4=B9=89=E6=9D=
=A5=E8=A6=86=E7=9B=96=E5=8F=98=E9=87=8F=E3=80=82</p>
<p>=E4=BE=8B=E5=AD=90=EF=BC=9A</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-comment">// library.less=
</span>
<span class=3D"hljs-variable">@base-color:</span> green;
<span class=3D"hljs-variable">@dark-color:</span> <span class=3D"hljs-funct=
ion">darken</span>(<span class=3D"hljs-variable">@base-color</span>, <span =
class=3D"hljs-number">10%</span>);

<span class=3D"hljs-comment">// =E7=94=A8=E6=B3=95</span>
<span class=3D"hljs-at_rule">@import</span> <span class=3D"hljs-string">"li=
brary.less"</span>;
<span class=3D"hljs-variable">@base-color:</span> red;
</code></pre>


      <br>
    </div>
   =20

  </div>

  <!-- =E7=BB=A7=E6=89=BF -->
  <div class=3D"docs-section">
    <div class=3D"page-header">
      <h1 class=3D"docs-heading">=E7=BB=A7=E6=89=BF<span class=3D"anchor-ta=
rget" id=3D"extend-feature"></span>
<a href=3D"http://lesscss.cn/features/#extend-feature" name=3D"extend-featu=
re" class=3D"anchor glyphicon glyphicon-link"></a></h1>
    </div>

   =20
    <div class=3D"section-content">
     =20


      <!-- extend -->
      =20


<blockquote>
<p>Extend is a Less pseudo-class which merges the selector it is put on wit=
h ones that match what it references.</p>
</blockquote>
<p>Released <a href=3D"https://github.com/less/less.js/blob/master/CHANGELO=
G.md">v1.4.0</a></p>
<pre><code class=3D"lang-less"><span class=3D"hljs-tag">nav</span> <span cl=
ass=3D"hljs-tag">ul</span> {
  <span class=3D"hljs-keyword">&amp;</span><span class=3D"hljs-keyword">:ex=
tend</span>(<span class=3D"hljs-class">.inline</span>);
  <span class=3D"hljs-attribute">background</span>: blue;
}
</code></pre>
<p>In the rule set above, the <code>:extend</code> selector will apply the =
"extending selector" (<code>nav ul</code>) onto the <code>.inline</code> cl=
ass <em>wherever the <code>.inline</code> class appears</em>. The declarati=
on block will be kept as-is, but without any reference to the extend (becau=
se extend isn't css).</p>
<p>So the following:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-tag">nav</span> <span cl=
ass=3D"hljs-tag">ul</span> {
  <span class=3D"hljs-keyword">&amp;</span><span class=3D"hljs-keyword">:ex=
tend</span>(<span class=3D"hljs-class">.inline</span>);
  <span class=3D"hljs-attribute">background</span>: blue;
}
<span class=3D"hljs-class">.inline</span> {
  <span class=3D"hljs-attribute">color</span>: red;
}
</code></pre>
<p>Outputs</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-tag">nav</span> <span cla=
ss=3D"hljs-tag">ul</span> {
  <span class=3D"hljs-attribute">background</span>: blue;
}
<span class=3D"hljs-class">.inline</span>,
<span class=3D"hljs-tag">nav</span> <span class=3D"hljs-tag">ul</span> {
  <span class=3D"hljs-attribute">color</span>: red;
}
</code></pre>
<p>Notice how the <code>nav ul:extend(.inline)</code> selector gets output =
as <code>nav ul</code> - the extend gets removed before output and the sele=
ctor block left as-is. If no properties are put in that block then it gets =
removed from the output (but the extend still may affect other selectors).<=
/p>
<h2 class=3D"docs-heading">Extend syntax<span class=3D"anchor-target" id=3D=
"extend-feature-extend-syntax"></span>
<a href=3D"http://lesscss.cn/features/#extend-feature-extend-syntax" name=
=3D"extend-feature-extend-syntax" class=3D"anchor glyphicon glyphicon-link"=
></a></h2>
<p>The extend is either attached to a selector or placed into a ruleset. It=
 looks like a pseudo-class with selector parameter optionally followed by t=
he keyword <code>all</code>:</p>
<p>Example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.a</span><span cl=
ass=3D"hljs-keyword">:extend</span>(<span class=3D"hljs-class">.b</span>) {=
}

<span class=3D"hljs-comment">// the above block does the same thing as the =
below block</span>
<span class=3D"hljs-class">.a</span> {
  <span class=3D"hljs-keyword">&amp;</span><span class=3D"hljs-keyword">:ex=
tend</span>(<span class=3D"hljs-class">.b</span>);
}
</code></pre>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.c</span><span cl=
ass=3D"hljs-keyword">:extend</span>(<span class=3D"hljs-class">.d</span> <s=
pan class=3D"hljs-keyword">all</span>) {
  <span class=3D"hljs-comment">// extends all instances of ".d" e.g. ".x.d"=
 or ".d.x"</span>
}
<span class=3D"hljs-class">.c</span><span class=3D"hljs-keyword">:extend</s=
pan>(<span class=3D"hljs-class">.d</span>) {
  <span class=3D"hljs-comment">// extends only instances where the selector=
 will be output as just ".d"</span>
}
</code></pre>
<p>It can contain one or more classes to extend, separated by commas.</p>
<p>Example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.e</span><span cl=
ass=3D"hljs-keyword">:extend</span>(<span class=3D"hljs-class">.f</span>) {=
}
<span class=3D"hljs-class">.e</span><span class=3D"hljs-keyword">:extend</s=
pan>(<span class=3D"hljs-class">.g</span>) {}

<span class=3D"hljs-comment">// the above an the below do the same thing</s=
pan>
<span class=3D"hljs-class">.e</span><span class=3D"hljs-keyword">:extend</s=
pan>(<span class=3D"hljs-class">.f</span>, <span class=3D"hljs-class">.g</s=
pan>) {}
</code></pre>
<h3 class=3D"docs-heading">Extend attached to selector<span class=3D"anchor=
-target" id=3D"extend-feature-extend-attached-to-selector"></span>
<a href=3D"http://lesscss.cn/features/#extend-feature-extend-attached-to-se=
lector" name=3D"extend-feature-extend-attached-to-selector" class=3D"anchor=
 glyphicon glyphicon-link"></a></h3>
<p>Extend attached to a selector looks like an ordinary pseudo-class with s=
elector as a parameter. A selector can contain multiple extend clauses, but=
 all extends must be at the end of the selector.</p>
<ul>
<li>Extend after the selector: <code>pre:hover:extend(div pre)</code>.</li>
<li>Space between selector and extend is allowed: <code>pre:hover :extend(d=
iv pre)</code>.</li>
<li>Multiple extends are allowed: <code>pre:hover:extend(div pre):extend(.b=
ucket tr)</code> - Note this is the same as <code>pre:hover:extend(div pre,=
 .bucket tr)</code></li>
<li>This is NOT allowed: <code>pre:hover:extend(div pre).nth-child(odd)</co=
de>. Extend must be last.</li>
</ul>
<p>If a ruleset contains multiple selectors, any of them can have the exten=
d keyword. Multiple selectors with extend in one ruleset:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.big-division</sp=
an>,
<span class=3D"hljs-class">.big-bag</span><span class=3D"hljs-keyword">:ext=
end</span>(<span class=3D"hljs-class">.bag</span>),
<span class=3D"hljs-class">.big-bucket</span><span class=3D"hljs-keyword">:=
extend</span>(<span class=3D"hljs-class">.bucket</span>) {
  <span class=3D"hljs-comment">// body</span>
}
</code></pre>
<h3 class=3D"docs-heading">Extend inside ruleset<span class=3D"anchor-targe=
t" id=3D"extend-feature-extend-inside-ruleset"></span>
<a href=3D"http://lesscss.cn/features/#extend-feature-extend-inside-ruleset=
" name=3D"extend-feature-extend-inside-ruleset" class=3D"anchor glyphicon g=
lyphicon-link"></a></h3>
<p>Extend can be placed into a ruleset's body using <code>&amp;:extend(sele=
ctor)</code> syntax. Placing extend into a body is a shortcut for placing i=
t into every single selector of that ruleset.</p>
<p>Extend inside a body:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-tag">pre</span><span cla=
ss=3D"hljs-pseudo">:hover</span>,
<span class=3D"hljs-class">.some-class</span> {
  <span class=3D"hljs-keyword">&amp;</span><span class=3D"hljs-keyword">:ex=
tend</span>(<span class=3D"hljs-tag">div</span> <span class=3D"hljs-tag">pr=
e</span>);
}
</code></pre>
<p>is exactly the same as adding an extend after each selector:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-tag">pre</span><span cla=
ss=3D"hljs-pseudo">:hover</span><span class=3D"hljs-keyword">:extend</span>=
(<span class=3D"hljs-tag">div</span> <span class=3D"hljs-tag">pre</span>),
<span class=3D"hljs-class">.some-class</span><span class=3D"hljs-keyword">:=
extend</span>(<span class=3D"hljs-tag">div</span> <span class=3D"hljs-tag">=
pre</span>) {}
</code></pre>
<h3 class=3D"docs-heading">Extending nested Selectors<span class=3D"anchor-=
target" id=3D"extend-feature-extending-nested-selectors"></span>
<a href=3D"http://lesscss.cn/features/#extend-feature-extending-nested-sele=
ctors" name=3D"extend-feature-extending-nested-selectors" class=3D"anchor g=
lyphicon glyphicon-link"></a></h3>
<p>Extend is able to match nested selectors. Following less:</p>
<p>Example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.bucket</span> {
  <span class=3D"hljs-tag">tr</span> { <span class=3D"hljs-comment">// nest=
ed ruleset with target selector</span>
    <span class=3D"hljs-attribute">color</span>: blue;
  }
}
<span class=3D"hljs-class">.some-class</span><span class=3D"hljs-keyword">:=
extend</span>(<span class=3D"hljs-class">.bucket</span> <span class=3D"hljs=
-tag">tr</span>) {} <span class=3D"hljs-comment">// nested ruleset is recog=
nized</span>
</code></pre>
<p>Outputs</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.bucket</span> <sp=
an class=3D"hljs-tag">tr</span>,
<span class=3D"hljs-class">.some-class</span> {
  <span class=3D"hljs-attribute">color</span>: blue;
}
</code></pre>
<p>Essentially the extend looks at the compiled css, not the original less.=
</p>
<p>Example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.bucket</span> {
  <span class=3D"hljs-tag">tr</span> <span class=3D"hljs-keyword">&amp;</sp=
an> { <span class=3D"hljs-comment">// nested ruleset with target selector</=
span>
    <span class=3D"hljs-attribute">color</span>: blue;
  }
}
<span class=3D"hljs-class">.some-class</span><span class=3D"hljs-keyword">:=
extend</span>(<span class=3D"hljs-tag">tr</span> <span class=3D"hljs-class"=
>.bucket</span>) {} <span class=3D"hljs-comment">// nested ruleset is recog=
nized</span>
</code></pre>
<p>Outputs</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-tag">tr</span> <span clas=
s=3D"hljs-class">.bucket</span>,
<span class=3D"hljs-class">.some-class</span> {
  <span class=3D"hljs-attribute">color</span>: blue;
}
</code></pre>
<h3 class=3D"docs-heading">Exact Matching with Extend<span class=3D"anchor-=
target" id=3D"extend-feature-exact-matching-with-extend"></span>
<a href=3D"http://lesscss.cn/features/#extend-feature-exact-matching-with-e=
xtend" name=3D"extend-feature-exact-matching-with-extend" class=3D"anchor g=
lyphicon glyphicon-link"></a></h3>
<p>Extend by default looks for exact match between selectors. It does matte=
r whether selector uses leading star or not. It does not matter that two nt=
h-expressions have the same meaning, they need to have to same form in orde=
r to be matched. The only exception are quotes in attribute selector, less =
knows they have the same meaning and matches them.</p>
<p>Example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.a</span><span cl=
ass=3D"hljs-class">.class</span>,
<span class=3D"hljs-class">.class</span><span class=3D"hljs-class">.a</span=
>,
<span class=3D"hljs-class">.class</span> &gt; <span class=3D"hljs-class">.a=
</span> {
  <span class=3D"hljs-attribute">color</span>: blue;
}
<span class=3D"hljs-class">.test</span><span class=3D"hljs-keyword">:extend=
</span>(<span class=3D"hljs-class">.class</span>) {} <span class=3D"hljs-co=
mment">// this will NOT match the any selectors above</span>
</code></pre>
<p>Leading star does matter. Selectors <code>*.class</code> and <code>.clas=
s</code> are equivalent, but extend will not match them:</p>
<pre><code class=3D"lang-less">*<span class=3D"hljs-class">.class</span> {
  <span class=3D"hljs-attribute">color</span>: blue;
}
<span class=3D"hljs-class">.noStar</span><span class=3D"hljs-keyword">:exte=
nd</span>(<span class=3D"hljs-class">.class</span>) {} <span class=3D"hljs-=
comment">// this will NOT match the *.class selector</span>
</code></pre>
<p>Outputs</p>
<pre><code class=3D"lang-css">*<span class=3D"hljs-class">.class</span> {
  <span class=3D"hljs-attribute">color</span>: blue;
}
</code></pre>
<p>Order of pseudo-classes does matter. Selectors <code>link:hover:visited<=
/code> and <code>link:visited:hover</code> match the same set of elements, =
but extend treats them as different:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-tag">link</span><span cl=
ass=3D"hljs-pseudo">:hover</span><span class=3D"hljs-pseudo">:visited</span=
> {
  <span class=3D"hljs-attribute">color</span>: blue;
}
<span class=3D"hljs-class">.selector</span><span class=3D"hljs-keyword">:ex=
tend</span>(<span class=3D"hljs-tag">link</span><span class=3D"hljs-pseudo"=
>:visited</span><span class=3D"hljs-pseudo">:hover</span>) {}
</code></pre>
<p>Outputs</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-tag">link</span><span cla=
ss=3D"hljs-pseudo">:hover</span><span class=3D"hljs-pseudo">:visited</span>=
 {
  <span class=3D"hljs-attribute">color</span>: blue;
}
</code></pre>
<h3 class=3D"docs-heading">nth expression<span class=3D"anchor-target" id=
=3D"extend-feature-nth-expression"></span>
<a href=3D"http://lesscss.cn/features/#extend-feature-nth-expression" name=
=3D"extend-feature-nth-expression" class=3D"anchor glyphicon glyphicon-link=
"></a></h3>
<p>Nth expression form does matter. Nth-expressions <code>1n+3</code> and <=
code>n+3</code> are equivalent, but extend will not match them:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-pseudo">:nth-child</span=
>(<span class=3D"hljs-number">1</span>n+<span class=3D"hljs-number">3</span=
>) {
  <span class=3D"hljs-attribute">color</span>: blue;
}
<span class=3D"hljs-class">.child</span><span class=3D"hljs-keyword">:exten=
d</span>(<span class=3D"hljs-pseudo">:nth-child</span>(n+<span class=3D"hlj=
s-number">3</span>)) {}
</code></pre>
<p>Outputs</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-pseudo">:nth-child</span>=
(<span class=3D"hljs-number">1</span>n+<span class=3D"hljs-number">3</span>=
) {
  <span class=3D"hljs-attribute">color</span>: blue;
}
</code></pre>
<p>Quote type in attribute selector does not matter. All of the following a=
re equivalent.</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-attr_selector">[title=3D=
identifier]</span> {
  <span class=3D"hljs-attribute">color</span>: blue;
}
<span class=3D"hljs-attr_selector">[title=3D'identifier']</span> {
  <span class=3D"hljs-attribute">color</span>: blue;
}
<span class=3D"hljs-attr_selector">[title=3D"identifier"]</span> {
  <span class=3D"hljs-attribute">color</span>: blue;
}

<span class=3D"hljs-class">.noQuote</span><span class=3D"hljs-keyword">:ext=
end</span>(<span class=3D"hljs-attr_selector">[title=3Didentifier]</span>) =
{}
<span class=3D"hljs-class">.singleQuote</span><span class=3D"hljs-keyword">=
:extend</span>(<span class=3D"hljs-attr_selector">[title=3D'identifier']</s=
pan>) {}
<span class=3D"hljs-class">.doubleQuote</span><span class=3D"hljs-keyword">=
:extend</span>(<span class=3D"hljs-attr_selector">[title=3D"identifier"]</s=
pan>) {}
</code></pre>
<p>Outputs</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-attr_selector">[title=3Di=
dentifier]</span>,
<span class=3D"hljs-class">.noQuote</span>,
<span class=3D"hljs-class">.singleQuote</span>,
<span class=3D"hljs-class">.doubleQuote</span> {
  <span class=3D"hljs-attribute">color</span>: blue;
}

<span class=3D"hljs-attr_selector">[title=3D'identifier']</span>,
<span class=3D"hljs-class">.noQuote</span>,
<span class=3D"hljs-class">.singleQuote</span>,
<span class=3D"hljs-class">.doubleQuote</span> {
  <span class=3D"hljs-attribute">color</span>: blue;
}

<span class=3D"hljs-attr_selector">[title=3D"identifier"]</span>,
<span class=3D"hljs-class">.noQuote</span>,
<span class=3D"hljs-class">.singleQuote</span>,
<span class=3D"hljs-class">.doubleQuote</span> {
  <span class=3D"hljs-attribute">color</span>: blue;
}
</code></pre>
<h2 class=3D"docs-heading">Extend "all"<span class=3D"anchor-target" id=3D"=
extend-feature-extend-all-"></span>
<a href=3D"http://lesscss.cn/features/#extend-feature-extend-all-" name=3D"=
extend-feature-extend-all-" class=3D"anchor glyphicon glyphicon-link"></a><=
/h2>
<p>When you specify the all keyword last in an extend argument it tells Les=
s to match that selector as part of another selector. The selector will be =
copied and the matched part of the selector only will then be replaced with=
 the extend, making a new selector.</p>
<p>Example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.a</span><span cl=
ass=3D"hljs-class">.b</span><span class=3D"hljs-class">.test</span>,
<span class=3D"hljs-class">.test</span><span class=3D"hljs-class">.c</span>=
 {
  <span class=3D"hljs-attribute">color</span>: orange;
}
<span class=3D"hljs-class">.test</span> {
  <span class=3D"hljs-keyword">&amp;</span><span class=3D"hljs-pseudo">:hov=
er</span> {
    <span class=3D"hljs-attribute">color</span>: green;
  }
}

<span class=3D"hljs-class">.replacement</span><span class=3D"hljs-keyword">=
:extend</span>(<span class=3D"hljs-class">.test</span> <span class=3D"hljs-=
keyword">all</span>) {}
</code></pre>
<p>Outputs</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.a</span><span cla=
ss=3D"hljs-class">.b</span><span class=3D"hljs-class">.test</span>,
<span class=3D"hljs-class">.test</span><span class=3D"hljs-class">.c</span>=
,
<span class=3D"hljs-class">.a</span><span class=3D"hljs-class">.b</span><sp=
an class=3D"hljs-class">.replacement</span>,
<span class=3D"hljs-class">.replacement</span><span class=3D"hljs-class">.c=
</span> {
  <span class=3D"hljs-attribute">color</span>: orange;
}
<span class=3D"hljs-class">.test</span><span class=3D"hljs-pseudo">:hover</=
span>,
<span class=3D"hljs-class">.replacement</span><span class=3D"hljs-pseudo">:=
hover</span> {
  <span class=3D"hljs-attribute">color</span>: green;
}
</code></pre>
<p><em>You can think of this mode of operation as essentially doing a non-d=
estructive search and replace.</em></p>
<h3 class=3D"docs-heading">Selector Interpolation with Extend<span class=3D=
"anchor-target" id=3D"extend-feature-selector-interpolation-with-extend"></=
span>
<a href=3D"http://lesscss.cn/features/#extend-feature-selector-interpolatio=
n-with-extend" name=3D"extend-feature-selector-interpolation-with-extend" c=
lass=3D"anchor glyphicon glyphicon-link"></a></h3>
<blockquote>
<p>Extend is NOT able to match selectors with variables. If selector contai=
ns variable, extend will ignore it.</p>
</blockquote>
<p>There is a pending feature request for this but it is not an easy change=
.  However, extend can be attached to interpolated selector.</p>
<p>Selector with variable will not be matched:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-variable">@variable:</sp=
an> .bucket;
<span class=3D"hljs-variable">@{variable}</span> { <span class=3D"hljs-comm=
ent">// interpolated selector</span>
  <span class=3D"hljs-attribute">color</span>: blue;
}
<span class=3D"hljs-class">.some-class</span><span class=3D"hljs-keyword">:=
extend</span>(<span class=3D"hljs-class">.bucket</span>) {} <span class=3D"=
hljs-comment">// does nothing, no match is found</span>
</code></pre>
<p>and extend with variable in target selector matches nothing:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.bucket</span> {
  <span class=3D"hljs-attribute">color</span>: blue;
}
<span class=3D"hljs-class">.some-class</span><span class=3D"hljs-keyword">:=
extend</span>(<span class=3D"hljs-variable">@{variable}</span>) {} <span cl=
ass=3D"hljs-comment">// interpolated selector matches nothing</span>
<span class=3D"hljs-variable">@variable:</span> .bucket;
</code></pre>
<p>Both of the previous examples compile into:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.bucket</span> {
  <span class=3D"hljs-attribute">color</span>: blue;
}
</code></pre>
<p>However, <code>:extend</code> attached to an interpolated selector works=
:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.bucket</span> {
  <span class=3D"hljs-attribute">color</span>: blue;
}
<span class=3D"hljs-variable">@{variable}</span><span class=3D"hljs-keyword=
">:extend</span>(<span class=3D"hljs-class">.bucket</span>) {}
<span class=3D"hljs-variable">@variable:</span> .selector;
</code></pre>
<p>previous less compiles into:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.bucket</span>, <=
span class=3D"hljs-class">.selector</span> {
  <span class=3D"hljs-attribute">color</span>: blue;
}
</code></pre>
<h2 class=3D"docs-heading">Scoping / Extend Inside @media<span class=3D"anc=
hor-target" id=3D"extend-feature-scoping-extend-inside-media"></span>
<a href=3D"http://lesscss.cn/features/#extend-feature-scoping-extend-inside=
-media" name=3D"extend-feature-scoping-extend-inside-media" class=3D"anchor=
 glyphicon glyphicon-link"></a></h2>
<p>Extend written inside a media declaration should match only selectors in=
side the same media declaration:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-at_rule">@media</span> p=
rint {
  <span class=3D"hljs-class">.screenClass</span><span class=3D"hljs-keyword=
">:extend</span>(<span class=3D"hljs-class">.selector</span>) {} <span clas=
s=3D"hljs-comment">// extend inside media</span>
  <span class=3D"hljs-class">.selector</span> { <span class=3D"hljs-comment=
">// this will be matched - it is in the same media</span>
    <span class=3D"hljs-attribute">color</span>: black;
  }
}
<span class=3D"hljs-class">.selector</span> { <span class=3D"hljs-comment">=
// ruleset on top of style sheet - extend ignores it</span>
  <span class=3D"hljs-attribute">color</span>: red;
}
<span class=3D"hljs-at_rule">@media</span> screen {
  <span class=3D"hljs-class">.selector</span> {  <span class=3D"hljs-commen=
t">// ruleset inside another media - extend ignores it</span>
    <span class=3D"hljs-attribute">color</span>: blue;
  }
}
</code></pre>
<p>compiles into:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-at_rule">@media</span> pr=
int {
  <span class=3D"hljs-class">.selector</span>,
  <span class=3D"hljs-class">.screenClass</span> { <span class=3D"hljs-comm=
ent">/*  ruleset inside the same media was extended */</span>
    <span class=3D"hljs-attribute">color</span>: black;
  }
}
<span class=3D"hljs-class">.selector</span> { <span class=3D"hljs-comment">=
/* ruleset on top of style sheet was ignored */</span>
  <span class=3D"hljs-attribute">color</span>: red;
}
<span class=3D"hljs-at_rule">@media</span> screen {
  <span class=3D"hljs-class">.selector</span> { <span class=3D"hljs-comment=
">/* ruleset inside another media was ignored */</span>
    <span class=3D"hljs-attribute">color</span>: blue;
  }
}
</code></pre>
<p>Extend written inside a media declaration does not match selectors insid=
e nested declaration:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-at_rule">@media</span> s=
creen {
  <span class=3D"hljs-class">.screenClass</span><span class=3D"hljs-keyword=
">:extend</span>(<span class=3D"hljs-class">.selector</span>) {} <span clas=
s=3D"hljs-comment">// extend inside media</span>
  <span class=3D"hljs-at_rule">@media</span> (min-width: <span class=3D"hlj=
s-number">1023px</span>) {
    <span class=3D"hljs-class">.selector</span> {  <span class=3D"hljs-comm=
ent">// ruleset inside nested media - extend ignores it</span>
      <span class=3D"hljs-attribute">color</span>: blue;
    }
  }
}
</code></pre>
<p>compiles into:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-at_rule">@media</span> sc=
reen and (min-width: <span class=3D"hljs-number">1023px</span>) {
  <span class=3D"hljs-class">.selector</span> { <span class=3D"hljs-comment=
">/* ruleset inside another nested media was ignored */</span>
    <span class=3D"hljs-attribute">color</span>: blue;
  }
}
</code></pre>
<p>Top level extend matches everything including selectors inside nested me=
dia:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-at_rule">@media</span> s=
creen {
  <span class=3D"hljs-class">.selector</span> {  <span class=3D"hljs-commen=
t">/* ruleset inside nested media - top level extend works */</span>
    <span class=3D"hljs-attribute">color</span>: blue;
  }
  <span class=3D"hljs-at_rule">@media</span> (min-width: <span class=3D"hlj=
s-number">1023px</span>) {
    <span class=3D"hljs-class">.selector</span> {  <span class=3D"hljs-comm=
ent">/* ruleset inside nested media - top level extend works */</span>
      <span class=3D"hljs-attribute">color</span>: blue;
    }
  }
}

<span class=3D"hljs-class">.topLevel</span><span class=3D"hljs-keyword">:ex=
tend</span>(<span class=3D"hljs-class">.selector</span>) {} <span class=3D"=
hljs-comment">/* top level extend matches everything */</span>
</code></pre>
<p>compiles into:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-at_rule">@media</span> sc=
reen {
  <span class=3D"hljs-class">.selector</span>,
  <span class=3D"hljs-class">.topLevel</span> { <span class=3D"hljs-comment=
">/* ruleset inside media was extended */</span>
    <span class=3D"hljs-attribute">color</span>: blue;
  }
}
<span class=3D"hljs-at_rule">@media</span> screen and (min-width: <span cla=
ss=3D"hljs-number">1023px</span>) {
  <span class=3D"hljs-class">.selector</span>,
  <span class=3D"hljs-class">.topLevel</span> { <span class=3D"hljs-comment=
">/* ruleset inside nested media was extended */</span>
    <span class=3D"hljs-attribute">color</span>: blue;
  }
}
</code></pre>
<h3 class=3D"docs-heading">Duplication Detection<span class=3D"anchor-targe=
t" id=3D"extend-feature-duplication-detection"></span>
<a href=3D"http://lesscss.cn/features/#extend-feature-duplication-detection=
" name=3D"extend-feature-duplication-detection" class=3D"anchor glyphicon g=
lyphicon-link"></a></h3>
<p>Currently there is no duplication detection.</p>
<p>Example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.alert-info</span=
>,
<span class=3D"hljs-class">.widget</span> {
  <span class=3D"hljs-comment">/* declarations */</span>
}

<span class=3D"hljs-class">.alert</span><span class=3D"hljs-keyword">:exten=
d</span>(<span class=3D"hljs-class">.alert-info</span>, <span class=3D"hljs=
-class">.widget</span>) {}
</code></pre>
<p>Outputs</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.alert-info</span>=
,
<span class=3D"hljs-class">.widget</span>,
<span class=3D"hljs-class">.alert</span>,
<span class=3D"hljs-class">.alert</span> {
  <span class=3D"hljs-comment">/* declarations */</span>
}
</code></pre>
<h2 class=3D"docs-heading">Use Cases for Extend<span class=3D"anchor-target=
" id=3D"extend-feature-use-cases-for-extend"></span>
<a href=3D"http://lesscss.cn/features/#extend-feature-use-cases-for-extend"=
 name=3D"extend-feature-use-cases-for-extend" class=3D"anchor glyphicon gly=
phicon-link"></a></h2>
<h3 class=3D"docs-heading">Classic Use Case<span class=3D"anchor-target" id=
=3D"extend-feature-classic-use-case"></span>
<a href=3D"http://lesscss.cn/features/#extend-feature-classic-use-case" nam=
e=3D"extend-feature-classic-use-case" class=3D"anchor glyphicon glyphicon-l=
ink"></a></h3>
<p>The classic use case is to avoid adding a base class. For example, if yo=
u have</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.animal</span> {
  <span class=3D"hljs-attribute">background-color</span>: black;
  <span class=3D"hljs-attribute">color</span>: white;
}
</code></pre>
<p>and you want to have a subtype of animal which overrides the background =
color then you have two options, firstly change your HTML</p>
<pre><code class=3D"lang-html"><span class=3D"hljs-tag">&lt;<span class=3D"=
hljs-title">a</span> <span class=3D"hljs-attribute">class</span>=3D<span cl=
ass=3D"hljs-value">"animal bear"</span>&gt;</span>Bear<span class=3D"hljs-t=
ag">&lt;/<span class=3D"hljs-title">a</span>&gt;</span>
</code></pre>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.animal</span> {
  <span class=3D"hljs-attribute">background-color</span>: black;
  <span class=3D"hljs-attribute">color</span>: white;
}
<span class=3D"hljs-class">.bear</span> {
  <span class=3D"hljs-attribute">background-color</span>: brown;
}
</code></pre>
<p>or have simplified html and use extend in your less. e.g.</p>
<pre><code class=3D"lang-html"><span class=3D"hljs-tag">&lt;<span class=3D"=
hljs-title">a</span> <span class=3D"hljs-attribute">class</span>=3D<span cl=
ass=3D"hljs-value">"bear"</span>&gt;</span>Bear<span class=3D"hljs-tag">&lt=
;/<span class=3D"hljs-title">a</span>&gt;</span>
</code></pre>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.animal</span> {
  <span class=3D"hljs-attribute">background-color</span>: black;
  <span class=3D"hljs-attribute">color</span>: white;
}
<span class=3D"hljs-class">.bear</span> {
  <span class=3D"hljs-keyword">&amp;</span><span class=3D"hljs-keyword">:ex=
tend</span>(<span class=3D"hljs-class">.animal</span>);
  <span class=3D"hljs-attribute">background-color</span>: brown;
}
</code></pre>
<h3 class=3D"docs-heading">Reducing CSS Size<span class=3D"anchor-target" i=
d=3D"extend-feature-reducing-css-size"></span>
<a href=3D"http://lesscss.cn/features/#extend-feature-reducing-css-size" na=
me=3D"extend-feature-reducing-css-size" class=3D"anchor glyphicon glyphicon=
-link"></a></h3>
<p>Mixins copy all of the properties into a selector, which can lead to unn=
ecessary duplication. Therefore you can use extends instead of mixins to mo=
ve the selector up to the properties you wish to use, which leads to less c=
ss being generated.</p>
<p>Example - with mixin:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.my-inline-block<=
/span>() {
    <span class=3D"hljs-attribute">display</span>: inline-block;
  <span class=3D"hljs-attribute">font-size</span>: <span class=3D"hljs-numb=
er">0</span>;
}
<span class=3D"hljs-class">.thing1</span> {
  <span class=3D"hljs-class">.my-inline-block</span>;
}
<span class=3D"hljs-class">.thing2</span> {
  <span class=3D"hljs-class">.my-inline-block</span>;
}
</code></pre>
<p>Outputs</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.thing1</span> {
  <span class=3D"hljs-attribute">display</span>: inline-block;
  <span class=3D"hljs-attribute">font-size</span>: <span class=3D"hljs-numb=
er">0</span>;
}
<span class=3D"hljs-class">.thing2</span> {
  <span class=3D"hljs-attribute">display</span>: inline-block;
  <span class=3D"hljs-attribute">font-size</span>: <span class=3D"hljs-numb=
er">0</span>;
}
</code></pre>
<p>Example (with extends):</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.my-inline-block<=
/span> {
  <span class=3D"hljs-attribute">display</span>: inline-block;
  <span class=3D"hljs-attribute">font-size</span>: <span class=3D"hljs-numb=
er">0</span>;
}
<span class=3D"hljs-class">.thing1</span> {
  <span class=3D"hljs-keyword">&amp;</span><span class=3D"hljs-keyword">:ex=
tend</span>(<span class=3D"hljs-class">.my-inline-block</span>);
}
<span class=3D"hljs-class">.thing2</span> {
  <span class=3D"hljs-keyword">&amp;</span><span class=3D"hljs-keyword">:ex=
tend</span>(<span class=3D"hljs-class">.my-inline-block</span>);
}
</code></pre>
<p>Outputs</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.my-inline-block</=
span>,
<span class=3D"hljs-class">.thing1</span>,
<span class=3D"hljs-class">.thing2</span> {
  <span class=3D"hljs-attribute">display</span>: inline-block;
  <span class=3D"hljs-attribute">font-size</span>: <span class=3D"hljs-numb=
er">0</span>;
}
</code></pre>
<h3 class=3D"docs-heading">Combining Styles / a more advanced mixin<span cl=
ass=3D"anchor-target" id=3D"extend-feature-combining-styles-a-more-advanced=
-mixin"></span>
<a href=3D"http://lesscss.cn/features/#extend-feature-combining-styles-a-mo=
re-advanced-mixin" name=3D"extend-feature-combining-styles-a-more-advanced-=
mixin" class=3D"anchor glyphicon glyphicon-link"></a></h3>
<p>Another use-case is as an alternative for a mixin - because mixins can o=
nly be used with simple selectors, if you have two different blocks of html=
, but need to apply the same styles to both you can use extends to relate t=
wo areas.</p>
<p>Example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-tag">li</span><span clas=
s=3D"hljs-class">.list</span> &gt; <span class=3D"hljs-tag">a</span> {
  <span class=3D"hljs-comment">// list styles</span>
}
<span class=3D"hljs-tag">button</span><span class=3D"hljs-class">.list-styl=
e</span> {
  <span class=3D"hljs-keyword">&amp;</span><span class=3D"hljs-keyword">:ex=
tend</span>(<span class=3D"hljs-tag">li</span><span class=3D"hljs-class">.l=
ist</span> &gt; <span class=3D"hljs-tag">a</span>); <span class=3D"hljs-com=
ment">// use the same list styles</span>
}
</code></pre>


      <br>
    </div>
   =20

  </div>

  <!-- Mixin -->
  <div class=3D"docs-section">
    <div class=3D"page-header">
      <h1 class=3D"docs-heading">Mixin<span class=3D"anchor-target" id=3D"m=
ixins-feature"></span>
<a href=3D"http://lesscss.cn/features/#mixins-feature" name=3D"mixins-featu=
re" class=3D"anchor glyphicon glyphicon-link"></a></h1>
    </div>

   =20
    <div class=3D"section-content">
     =20


      <!-- mixins -->
      =20


<blockquote>
<p>"mix-in" properties from existing styles</p>
</blockquote>
<p>You can mix-in class selectors and id selectors, e.g.</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.a</span>, <span =
class=3D"hljs-id">#b</span> {
  <span class=3D"hljs-attribute">color</span>: red;
}
<span class=3D"hljs-class">.mixin-class</span> {
  <span class=3D"hljs-class">.a</span>();
}
<span class=3D"hljs-class">.mixin-id</span> {
  <span class=3D"hljs-id">#b</span>();
}
</code></pre>
<p>which results in:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.a</span>, <span c=
lass=3D"hljs-id">#b</span> {
  <span class=3D"hljs-attribute">color</span>: red;
}
<span class=3D"hljs-class">.mixin-class</span> {
  <span class=3D"hljs-attribute">color</span>: red;
}
<span class=3D"hljs-class">.mixin-id</span> {
  <span class=3D"hljs-attribute">color</span>: red;
}
</code></pre>
<p>Notice that when you call the mixin, the parentheses are optional.</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.a</span>();   <s=
pan class=3D"hljs-comment">//these lines do the same thing</span>
<span class=3D"hljs-class">.a</span>;
</code></pre>
<h2 class=3D"docs-heading">Not outputting the mixin<span class=3D"anchor-ta=
rget" id=3D"mixins-feature-not-outputting-the-mixin"></span>
<a href=3D"http://lesscss.cn/features/#mixins-feature-not-outputting-the-mi=
xin" name=3D"mixins-feature-not-outputting-the-mixin" class=3D"anchor glyph=
icon glyphicon-link"></a></h2>
<p>If you want to create a mixin but you do not want that mixin to be outpu=
t, you can put parentheses after it.</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.my-mixin</span> =
{
  <span class=3D"hljs-attribute">color</span>: black;
}
<span class=3D"hljs-class">.my-other-mixin</span>() {
  <span class=3D"hljs-attribute">background</span>: white;
}
<span class=3D"hljs-class">.class</span> {
  <span class=3D"hljs-class">.my-mixin</span>;
  <span class=3D"hljs-class">.my-other-mixin</span>;
}
</code></pre>
<p>outputs</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.my-mixin</span> {
  <span class=3D"hljs-attribute">color</span>: black;
}
<span class=3D"hljs-class">.class</span> {
  <span class=3D"hljs-attribute">color</span>: black;
  <span class=3D"hljs-attribute">background</span>: white;
}
</code></pre>
<h2 class=3D"docs-heading">Selectors in mixins<span class=3D"anchor-target"=
 id=3D"mixins-feature-selectors-in-mixins"></span>
<a href=3D"http://lesscss.cn/features/#mixins-feature-selectors-in-mixins" =
name=3D"mixins-feature-selectors-in-mixins" class=3D"anchor glyphicon glyph=
icon-link"></a></h2>
<p>Mixins can contain more than just properties, they can contain selectors=
 too.</p>
<p>For example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.my-hover-mixin</=
span>() {
  <span class=3D"hljs-keyword">&amp;</span><span class=3D"hljs-pseudo">:hov=
er</span> {
    <span class=3D"hljs-attribute">border</span>: <span class=3D"hljs-numbe=
r">1px</span> solid red;
  }
}
<span class=3D"hljs-tag">button</span> {
  <span class=3D"hljs-class">.my-hover-mixin</span>();
}
</code></pre>
<p>Outputs</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-tag">button</span><span c=
lass=3D"hljs-pseudo">:hover</span> {
  <span class=3D"hljs-attribute">border</span>: <span class=3D"hljs-number"=
>1px</span> solid red;
}
</code></pre>
<h2 class=3D"docs-heading">Namespaces<span class=3D"anchor-target" id=3D"mi=
xins-feature-namespaces"></span>
<a href=3D"http://lesscss.cn/features/#mixins-feature-namespaces" name=3D"m=
ixins-feature-namespaces" class=3D"anchor glyphicon glyphicon-link"></a></h=
2>
<p>If you want to mixin properties inside a more complicated selector, you =
can stack up multiple id's or classes.</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-id">#outer</span> {
  <span class=3D"hljs-class">.inner</span> {
    <span class=3D"hljs-attribute">color</span>: red;
  }
}

<span class=3D"hljs-class">.c</span> {
  <span class=3D"hljs-id">#outer</span> &gt; <span class=3D"hljs-class">.in=
ner</span>;
}
</code></pre>
<p>and again both <code>&gt;</code> and whitespace are optional</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-comment">// all do the s=
ame thing</span>
<span class=3D"hljs-id">#outer</span> &gt; <span class=3D"hljs-class">.inne=
r</span>;
<span class=3D"hljs-id">#outer</span> &gt; <span class=3D"hljs-class">.inne=
r</span>();
<span class=3D"hljs-id">#outer</span> <span class=3D"hljs-class">.inner</sp=
an>;
<span class=3D"hljs-id">#outer</span> <span class=3D"hljs-class">.inner</sp=
an>();
<span class=3D"hljs-id">#outer</span><span class=3D"hljs-class">.inner</spa=
n>;
<span class=3D"hljs-id">#outer</span><span class=3D"hljs-class">.inner</spa=
n>();
</code></pre>
<p>One use of this is known as namespacing. You can put your mixins under a=
 id selector and this makes sure it won't conflict with another library.</p=
>
<p>Example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-id">#my-library</span> {
  <span class=3D"hljs-class">.my-mixin</span>() {
    <span class=3D"hljs-attribute">color</span>: black;
  }
}
<span class=3D"hljs-comment">// which can be used like this</span>
<span class=3D"hljs-class">.class</span> {
  <span class=3D"hljs-id">#my-library</span> &gt; <span class=3D"hljs-class=
">.my-mixin</span>();
}
</code></pre>
<h2 class=3D"docs-heading">Guarded Namespaces<span class=3D"anchor-target" =
id=3D"mixins-feature-guarded-namespaces"></span>
<a href=3D"http://lesscss.cn/features/#mixins-feature-guarded-namespaces" n=
ame=3D"mixins-feature-guarded-namespaces" class=3D"anchor glyphicon glyphic=
on-link"></a></h2>
<p>If namespace have a guard, mixins defined by it are used only if guard c=
ondition returns true. Namespace guard is evaluated exactly the same way as=
 guard on mixin, so next two mixins work the same way:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-id">#namespace</span> <s=
pan class=3D"hljs-keyword">when</span> (<span class=3D"hljs-variable">@mode=
</span>=3Dhuge) {
  <span class=3D"hljs-class">.mixin</span>() { <span class=3D"hljs-comment"=
>/* */</span> }
}

<span class=3D"hljs-id">#namespace</span> {
  <span class=3D"hljs-class">.mixin</span>() <span class=3D"hljs-keyword">w=
hen</span> (<span class=3D"hljs-variable">@mode</span>=3Dhuge) { <span clas=
s=3D"hljs-comment">/* */</span> }
}
</code></pre>
<p>The <code>default</code> function is assumed to have the same value for =
all nested namespaces and mixin. Following mixin is never evaluated, one of=
 its guards is guaranteed to be false:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-id">#sp_1</span> <span c=
lass=3D"hljs-keyword">when</span> (<span class=3D"hljs-function">default</s=
pan>()) {
  <span class=3D"hljs-id">#sp_2</span> <span class=3D"hljs-keyword">when</s=
pan> (<span class=3D"hljs-function">default</span>()) {
    <span class=3D"hljs-class">.mixin</span>() <span class=3D"hljs-keyword"=
>when</span> <span class=3D"hljs-keyword">not</span>(<span class=3D"hljs-fu=
nction">default</span>()) { <span class=3D"hljs-comment">/* */</span> }
  }
}
</code></pre>
<h2 class=3D"docs-heading">The <code>!important</code> keyword<span class=
=3D"anchor-target" id=3D"mixins-feature-the-important-keyword"></span>
<a href=3D"http://lesscss.cn/features/#mixins-feature-the-important-keyword=
" name=3D"mixins-feature-the-important-keyword" class=3D"anchor glyphicon g=
lyphicon-link"></a></h2>
<p>Use the <code>!important</code> keyword after mixin call to mark all pro=
perties inherited by it as <code>!important</code>:</p>
<p>Example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.foo</span> (<spa=
n class=3D"hljs-variable">@bg</span>: <span class=3D"hljs-hexcolor">#f5f5f5=
</span>, <span class=3D"hljs-variable">@color</span>: <span class=3D"hljs-h=
excolor">#900</span>) {
  <span class=3D"hljs-attribute">background</span>: <span class=3D"hljs-var=
iable">@bg</span>;
  <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-variable=
">@color</span>;
}
<span class=3D"hljs-class">.unimportant</span> {
  <span class=3D"hljs-class">.foo</span>();
}
<span class=3D"hljs-class">.important</span> {
  <span class=3D"hljs-class">.foo</span>() !important;
}
</code></pre>
<p>Results in:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.unimportant</span=
> {
  <span class=3D"hljs-attribute">background</span>: <span class=3D"hljs-hex=
color">#f5f5f5</span>;
  <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-hexcolor=
">#900</span>;
}
<span class=3D"hljs-class">.important</span> {
  <span class=3D"hljs-attribute">background</span>: <span class=3D"hljs-hex=
color">#f5f5f5</span> !important;
  <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-hexcolor=
">#900</span> !important;
}
</code></pre>


      <br>
    </div>
   =20

  </div>

  <!-- Parametric Mixins -->
  <div class=3D"docs-section">
    <div class=3D"page-header">
      <h1 class=3D"docs-heading">Parametric Mixins<span class=3D"anchor-tar=
get" id=3D"mixins-parametric-feature"></span>
<a href=3D"http://lesscss.cn/features/#mixins-parametric-feature" name=3D"m=
ixins-parametric-feature" class=3D"anchor glyphicon glyphicon-link"></a></h=
1>
    </div>

   =20
    <div class=3D"section-content">
     =20


      <!-- mixins-parametric -->
      =20


<blockquote>
<p>How to pass arguments to mixins</p>
</blockquote>
<p>Mixins can also take arguments, which are variables passed to the block =
of selectors when it is mixed in.</p>
<p>For example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.border-radius</s=
pan>(<span class=3D"hljs-variable">@radius</span>) {
  <span class=3D"hljs-attribute">-webkit-border-radius</span>: <span class=
=3D"hljs-variable">@radius</span>;
     <span class=3D"hljs-attribute">-moz-border-radius</span>: <span class=
=3D"hljs-variable">@radius</span>;
          <span class=3D"hljs-attribute">border-radius</span>: <span class=
=3D"hljs-variable">@radius</span>;
}
</code></pre>
<p>And here's how we can mix it into various rulesets:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-id">#header</span> {
  <span class=3D"hljs-class">.border-radius</span>(<span class=3D"hljs-numb=
er">4px</span>);
}
<span class=3D"hljs-class">.button</span> {
  <span class=3D"hljs-class">.border-radius</span>(<span class=3D"hljs-numb=
er">6px</span>);
}
</code></pre>
<p>Parametric mixins can also have default values for their parameters:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.border-radius</s=
pan>(<span class=3D"hljs-variable">@radius</span>: <span class=3D"hljs-numb=
er">5px</span>) {
  <span class=3D"hljs-attribute">-webkit-border-radius</span>: <span class=
=3D"hljs-variable">@radius</span>;
     <span class=3D"hljs-attribute">-moz-border-radius</span>: <span class=
=3D"hljs-variable">@radius</span>;
          <span class=3D"hljs-attribute">border-radius</span>: <span class=
=3D"hljs-variable">@radius</span>;
}
</code></pre>
<p>We can invoke it like this now:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-id">#header</span> {
  <span class=3D"hljs-class">.border-radius</span>;
}
</code></pre>
<p>And it will include a 5px border-radius.</p>
<p>You can also use parametric mixins which don't take parameters. This is =
useful if you want to hide the ruleset from the CSS output, but want to inc=
lude its properties in other rulesets:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.wrap</span>() {
  <span class=3D"hljs-attribute">text-wrap</span>: wrap;
  <span class=3D"hljs-attribute">white-space</span>: -moz-pre-wrap;
  <span class=3D"hljs-attribute">white-space</span>: pre-wrap;
  <span class=3D"hljs-attribute">word-wrap</span>: break-word;
}

<span class=3D"hljs-tag">pre</span> { <span class=3D"hljs-class">.wrap</spa=
n> }
</code></pre>
<p>Which would output:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-tag">pre</span> {
  <span class=3D"hljs-attribute">text-wrap</span>: wrap;
  <span class=3D"hljs-attribute">white-space</span>: -moz-pre-wrap;
  <span class=3D"hljs-attribute">white-space</span>: pre-wrap;
  <span class=3D"hljs-attribute">word-wrap</span>: break-word;
}
</code></pre>
<h3 class=3D"docs-heading">Mixins With Multiple Parameters<span class=3D"an=
chor-target" id=3D"mixins-parametric-feature-mixins-with-multiple-parameter=
s"></span>
<a href=3D"http://lesscss.cn/features/#mixins-parametric-feature-mixins-wit=
h-multiple-parameters" name=3D"mixins-parametric-feature-mixins-with-multip=
le-parameters" class=3D"anchor glyphicon glyphicon-link"></a></h3>
<p>Parameters are either <em>semicolon</em> or <em>comma</em> separated. It=
 is recommended to use <em>semicolon</em>. The symbol comma has double mean=
ing: it can be interpreted either as a mixin parameters separator or css li=
st separator.</p>
<p>Using comma as mixin separator makes it impossible to create comma separ=
ated lists as an argument. On the other hand, if the compiler sees at least=
 one semicolon inside mixin call or declaration, it assumes that arguments =
are separated by semicolons and all commas belong to css lists:</p>
<ul>
<li>two arguments and each contains comma separated list: <code>.name(1, 2,=
 3; something, else)</code>,</li>
<li>three arguments and each contains one number: <code>.name(1, 2, 3)</cod=
e>,</li>
<li>use dummy semicolon to create mixin call with one argument containing c=
omma separated css list: <code>.name(1, 2, 3;)</code>,</li>
<li>comma separated default value: <code>.name(@param1: red, blue;)</code>.=
</li>
</ul>
<p>It is legal to define multiple mixins with the same name and number of p=
arameters. Less will use properties of all that can apply. If you used the =
mixin with one parameter e.g. <code>.mixin(green);</code>, then properties =
of all mixins with exactly one mandatory parameter will be used:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.mixin</span>(<sp=
an class=3D"hljs-variable">@color</span>) {
  <span class=3D"hljs-attribute">color-1</span>: <span class=3D"hljs-variab=
le">@color</span>;
}
<span class=3D"hljs-class">.mixin</span>(<span class=3D"hljs-variable">@col=
or</span>; <span class=3D"hljs-variable">@padding</span>: <span class=3D"hl=
js-number">2</span>) {
  <span class=3D"hljs-attribute">color-2</span>: <span class=3D"hljs-variab=
le">@color</span>;
  <span class=3D"hljs-attribute">padding-2</span>: <span class=3D"hljs-vari=
able">@padding</span>;
}
<span class=3D"hljs-class">.mixin</span>(<span class=3D"hljs-variable">@col=
or</span>; <span class=3D"hljs-variable">@padding</span>; <span class=3D"hl=
js-variable">@margin</span>: <span class=3D"hljs-number">2</span>) {
  <span class=3D"hljs-attribute">color-3</span>: <span class=3D"hljs-variab=
le">@color</span>;
  <span class=3D"hljs-attribute">padding-3</span>: <span class=3D"hljs-vari=
able">@padding</span>;
  <span class=3D"hljs-attribute">margin</span>: <span class=3D"hljs-variabl=
e">@margin</span> <span class=3D"hljs-variable">@margin</span> <span class=
=3D"hljs-variable">@margin</span> <span class=3D"hljs-variable">@margin</sp=
an>;
}
<span class=3D"hljs-class">.some</span> <span class=3D"hljs-class">.selecto=
r</span> <span class=3D"hljs-tag">div</span> {
  <span class=3D"hljs-class">.mixin</span>(<span class=3D"hljs-hexcolor">#0=
08000</span>);
}
</code></pre>
<p>compiles into:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.some</span> <span=
 class=3D"hljs-class">.selector</span> <span class=3D"hljs-tag">div</span> =
{
  <span class=3D"hljs-attribute">color-1</span>: <span class=3D"hljs-hexcol=
or">#008000</span>;
  <span class=3D"hljs-attribute">color-2</span>: <span class=3D"hljs-hexcol=
or">#008000</span>;
  <span class=3D"hljs-attribute">padding-2</span>: <span class=3D"hljs-numb=
er">2</span>;
}
</code></pre>
<h3 class=3D"docs-heading">Named Parameters<span class=3D"anchor-target" id=
=3D"mixins-parametric-feature-named-parameters"></span>
<a href=3D"http://lesscss.cn/features/#mixins-parametric-feature-named-para=
meters" name=3D"mixins-parametric-feature-named-parameters" class=3D"anchor=
 glyphicon glyphicon-link"></a></h3>
<p>A mixin reference can supply parameters values by their names instead of=
 just positions. Any parameter can be referenced by its name and they do no=
t have to be in any special order:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.mixin</span>(<sp=
an class=3D"hljs-variable">@color</span>: black; <span class=3D"hljs-variab=
le">@margin</span>: <span class=3D"hljs-number">10px</span>; <span class=3D=
"hljs-variable">@padding</span>: <span class=3D"hljs-number">20px</span>) {
  <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-variable=
">@color</span>;
  <span class=3D"hljs-attribute">margin</span>: <span class=3D"hljs-variabl=
e">@margin</span>;
  <span class=3D"hljs-attribute">padding</span>: <span class=3D"hljs-variab=
le">@padding</span>;
}
<span class=3D"hljs-class">.class1</span> {
  <span class=3D"hljs-class">.mixin</span>(<span class=3D"hljs-variable">@m=
argin</span>: <span class=3D"hljs-number">20px</span>; <span class=3D"hljs-=
variable">@color</span>: <span class=3D"hljs-hexcolor">#33acfe</span>);
}
<span class=3D"hljs-class">.class2</span> {
  <span class=3D"hljs-class">.mixin</span>(<span class=3D"hljs-hexcolor">#e=
fca44</span>; <span class=3D"hljs-variable">@padding</span>: <span class=3D=
"hljs-number">40px</span>);
}
</code></pre>
<p>compiles into:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.class1</span> {
  <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-hexcolor=
">#33acfe</span>;
  <span class=3D"hljs-attribute">margin</span>: <span class=3D"hljs-number"=
>20px</span>;
  <span class=3D"hljs-attribute">padding</span>: <span class=3D"hljs-number=
">20px</span>;
}
<span class=3D"hljs-class">.class2</span> {
  <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-hexcolor=
">#efca44</span>;
  <span class=3D"hljs-attribute">margin</span>: <span class=3D"hljs-number"=
>10px</span>;
  <span class=3D"hljs-attribute">padding</span>: <span class=3D"hljs-number=
">40px</span>;
}
</code></pre>
<h3 class=3D"docs-heading">The <code>@arguments</code> variable<span class=
=3D"anchor-target" id=3D"mixins-parametric-feature-the-arguments-variable">=
</span>
<a href=3D"http://lesscss.cn/features/#mixins-parametric-feature-the-argume=
nts-variable" name=3D"mixins-parametric-feature-the-arguments-variable" cla=
ss=3D"anchor glyphicon glyphicon-link"></a></h3>
<p><code>@arguments</code> has a special meaning inside mixins, it contains=
 all the arguments passed, when the mixin was called. This is useful if you=
 don't want to deal with individual parameters:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.box-shadow</span=
>(<span class=3D"hljs-variable">@x</span>: <span class=3D"hljs-number">0</s=
pan>; <span class=3D"hljs-variable">@y</span>: <span class=3D"hljs-number">=
0</span>; <span class=3D"hljs-variable">@blur</span>: <span class=3D"hljs-n=
umber">1px</span>; <span class=3D"hljs-variable">@color</span>: <span class=
=3D"hljs-hexcolor">#000</span>) {
  <span class=3D"hljs-attribute">-webkit-box-shadow</span>: <span class=3D"=
hljs-variable">@arguments</span>;
     <span class=3D"hljs-attribute">-moz-box-shadow</span>: <span class=3D"=
hljs-variable">@arguments</span>;
          <span class=3D"hljs-attribute">box-shadow</span>: <span class=3D"=
hljs-variable">@arguments</span>;
}
<span class=3D"hljs-class">.big-block</span> {
  <span class=3D"hljs-class">.box-shadow</span>(<span class=3D"hljs-number"=
>2px</span>; <span class=3D"hljs-number">5px</span>);
}
</code></pre>
<p>Which results in:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.big-block</span> =
{
  <span class=3D"hljs-attribute">-webkit-box-shadow</span>: <span class=3D"=
hljs-number">2px</span> <span class=3D"hljs-number">5px</span> <span class=
=3D"hljs-number">1px</span> <span class=3D"hljs-hexcolor">#000</span>;
     <span class=3D"hljs-attribute">-moz-box-shadow</span>: <span class=3D"=
hljs-number">2px</span> <span class=3D"hljs-number">5px</span> <span class=
=3D"hljs-number">1px</span> <span class=3D"hljs-hexcolor">#000</span>;
          <span class=3D"hljs-attribute">box-shadow</span>: <span class=3D"=
hljs-number">2px</span> <span class=3D"hljs-number">5px</span> <span class=
=3D"hljs-number">1px</span> <span class=3D"hljs-hexcolor">#000</span>;
}
</code></pre>
<h3 class=3D"docs-heading">Advanced arguments and the <code>@rest</code> va=
riable<span class=3D"anchor-target" id=3D"mixins-parametric-feature-advance=
d-arguments-and-the-rest-variable"></span>
<a href=3D"http://lesscss.cn/features/#mixins-parametric-feature-advanced-a=
rguments-and-the-rest-variable" name=3D"mixins-parametric-feature-advanced-=
arguments-and-the-rest-variable" class=3D"anchor glyphicon glyphicon-link">=
</a></h3>
<p>You can use <code>...</code> if you want your mixin to take a variable n=
umber of arguments. Using this after a variable name will assign those argu=
ments to the variable.</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.mixin</span>(...=
) {        <span class=3D"hljs-comment">// matches 0-N arguments</span>
<span class=3D"hljs-class">.mixin</span>() {           <span class=3D"hljs-=
comment">// matches exactly 0 arguments</span>
<span class=3D"hljs-class">.mixin</span>(<span class=3D"hljs-variable">@a</=
span>: <span class=3D"hljs-number">1</span>) {      <span class=3D"hljs-com=
ment">// matches 0-1 arguments</span>
<span class=3D"hljs-class">.mixin</span>(<span class=3D"hljs-variable">@a</=
span>: <span class=3D"hljs-number">1</span>; ...) { <span class=3D"hljs-com=
ment">// matches 0-N arguments</span>
<span class=3D"hljs-class">.mixin</span>(<span class=3D"hljs-variable">@a</=
span>; ...) {    <span class=3D"hljs-comment">// matches 1-N arguments</spa=
n>
</code></pre>
<p>Furthermore:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.mixin</span>(<sp=
an class=3D"hljs-variable">@a</span>; <span class=3D"hljs-variable">@rest</=
span>...) {
   <span class=3D"hljs-comment">// @rest is bound to arguments after @a</sp=
an>
   <span class=3D"hljs-comment">// @arguments is bound to all arguments</sp=
an>
}
</code></pre>
<h2 class=3D"docs-heading">Pattern-matching<span class=3D"anchor-target" id=
=3D"mixins-parametric-feature-pattern-matching"></span>
<a href=3D"http://lesscss.cn/features/#mixins-parametric-feature-pattern-ma=
tching" name=3D"mixins-parametric-feature-pattern-matching" class=3D"anchor=
 glyphicon glyphicon-link"></a></h2>
<p>Sometimes, you may want to change the behavior of a mixin, based on the =
parameters you pass to it. Let's start with something basic:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.mixin</span>(<sp=
an class=3D"hljs-variable">@s</span>; <span class=3D"hljs-variable">@color<=
/span>) { ... }

<span class=3D"hljs-class">.class</span> {
  <span class=3D"hljs-class">.mixin</span>(<span class=3D"hljs-variable">@s=
witch</span>; <span class=3D"hljs-hexcolor">#888</span>);
}
</code></pre>
<p>Now let's say we want <code>.mixin</code> to behave differently, based o=
n the value of <code>@switch</code>, we could define <code>.mixin</code> as=
 such:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.mixin</span>(dar=
k; <span class=3D"hljs-variable">@color</span>) {
  <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-function=
">darken</span>(<span class=3D"hljs-variable">@color</span>, <span class=3D=
"hljs-number">10%</span>);
}
<span class=3D"hljs-class">.mixin</span>(light; <span class=3D"hljs-variabl=
e">@color</span>) {
  <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-function=
">lighten</span>(<span class=3D"hljs-variable">@color</span>, <span class=
=3D"hljs-number">10%</span>);
}
<span class=3D"hljs-class">.mixin</span>(<span class=3D"hljs-variable">@_</=
span>; <span class=3D"hljs-variable">@color</span>) {
  <span class=3D"hljs-attribute">display</span>: block;
}
</code></pre>
<p>Now, if we run:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-variable">@switch:</span=
> light;

<span class=3D"hljs-class">.class</span> {
  <span class=3D"hljs-class">.mixin</span>(<span class=3D"hljs-variable">@s=
witch</span>; <span class=3D"hljs-hexcolor">#888</span>);
}
</code></pre>
<p>We will get the following CSS:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.class</span> {
  <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-hexcolor=
">#a2a2a2</span>;
  <span class=3D"hljs-attribute">display</span>: block;
}
</code></pre>
<p>Where the color passed to <code>.mixin</code> was lightened. If the valu=
e of <code>@switch</code> was <code>dark</code>,
the result would be a darker color.</p>
<p>Here's what happened:</p>
<ul>
<li>The first mixin definition didn't match because it expected <code>dark<=
/code> as the first argument.</li>
<li>The second mixin definition matched, because it expected <code>light</c=
ode>.</li>
<li>The third mixin definition matched because it expected any value.</li>
</ul>
<p>Only mixin definitions which matched were used. Variables match and bind=
 to any value.
Anything other than a variable matches only with a value equal to itself.</=
p>
<p>We can also match on arity, here's an example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.mixin</span>(<sp=
an class=3D"hljs-variable">@a</span>) {
  <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-variable=
">@a</span>;
}
<span class=3D"hljs-class">.mixin</span>(<span class=3D"hljs-variable">@a</=
span>; <span class=3D"hljs-variable">@b</span>) {
  <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-function=
">fade</span>(<span class=3D"hljs-variable">@a</span>; <span class=3D"hljs-=
variable">@b</span>);
}
</code></pre>
<p>Now if we call <code>.mixin</code> with a single argument, we will get t=
he output of the first definition,
but if we call it with <em>two</em> arguments, we will get the second defin=
ition, namely <code>@a</code> faded to <code>@b</code>.</p>


      <br>
    </div>
   =20

  </div>

  <!-- Mixins as Functions -->
  <div class=3D"docs-section">
    <div class=3D"page-header">
      <h1 class=3D"docs-heading">Mixins as Functions<span class=3D"anchor-t=
arget" id=3D"mixins-as-functions-feature"></span>
<a href=3D"http://lesscss.cn/features/#mixins-as-functions-feature" name=3D=
"mixins-as-functions-feature" class=3D"anchor glyphicon glyphicon-link"></a=
></h1>
    </div>

   =20
    <div class=3D"section-content">
     =20


      <!-- mixins-as-functions -->
      =20


<blockquote>
<p>Return variables or mixins from mixins</p>
</blockquote>
<p>Variables and mixins defined in a mixin are visible and can be used in c=
aller's scope. There is only one exception, variable is not copied if the c=
aller contains a variable with the same name (that includes variables defin=
ed by another mixin call).  Only variables present in callers local scope a=
re protected. Variables inherited from parent scopes are overridden.</p>
<p>Example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.mixin</span>() {
  <span class=3D"hljs-variable">@width:</span>  <span class=3D"hljs-number"=
>100%</span>;
  <span class=3D"hljs-variable">@height:</span> <span class=3D"hljs-number"=
>200px</span>;
}

<span class=3D"hljs-class">.caller</span> {
  <span class=3D"hljs-class">.mixin</span>();
  <span class=3D"hljs-attribute">width</span>:  <span class=3D"hljs-variabl=
e">@width</span>;
  <span class=3D"hljs-attribute">height</span>: <span class=3D"hljs-variabl=
e">@height</span>;
}
</code></pre>
<p>Results in:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.caller</span> {
  <span class=3D"hljs-attribute">width</span>:  <span class=3D"hljs-number"=
>100%</span>;
  <span class=3D"hljs-attribute">height</span>: <span class=3D"hljs-number"=
>200px</span>;
}
</code></pre>
<p>Thus variables defined in a mixin can act as its return values. This all=
ows us to create a mixin that can be used almost like a function.</p>
<p>Example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.average</span>(<=
span class=3D"hljs-variable">@x</span>, <span class=3D"hljs-variable">@y</s=
pan>) {
  <span class=3D"hljs-variable">@average:</span> ((<span class=3D"hljs-vari=
able">@x</span> + <span class=3D"hljs-variable">@y</span>) / <span class=3D=
"hljs-number">2</span>);
}

<span class=3D"hljs-tag">div</span> {
  <span class=3D"hljs-class">.average</span>(<span class=3D"hljs-number">16=
px</span>, <span class=3D"hljs-number">50px</span>); <span class=3D"hljs-co=
mment">// "call" the mixin</span>
  <span class=3D"hljs-attribute">padding</span>: <span class=3D"hljs-variab=
le">@average</span>;    <span class=3D"hljs-comment">// use its "return" va=
lue</span>
}
</code></pre>
<p>Results in:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-tag">div</span> {
  <span class=3D"hljs-attribute">padding</span>: <span class=3D"hljs-number=
">33px</span>;
}
</code></pre>
<p>Variables defined directly in callers scope cannot be overridden. Howeve=
r, variables defined in callers parent scope is not protected and will be
overridden:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.mixin</span>() {
  <span class=3D"hljs-variable">@size:</span> in-mixin;
  <span class=3D"hljs-variable">@definedOnlyInMixin:</span> in-mixin;
}

<span class=3D"hljs-class">.class</span> {
  <span class=3D"hljs-attribute">margin</span>: <span class=3D"hljs-variabl=
e">@size</span> <span class=3D"hljs-variable">@definedOnlyInMixin</span>;
  <span class=3D"hljs-class">.mixin</span>();
}

<span class=3D"hljs-variable">@size:</span> globaly-defined-value; <span cl=
ass=3D"hljs-comment">// callers parent scope - no protection</span>
</code></pre>
<p>Results in:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.class</span> {
  <span class=3D"hljs-attribute">margin</span>: in-mixin in-mixin;
}
</code></pre>
<p>Finally, mixin defined in mixin acts as return value too:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.unlock</span>(<s=
pan class=3D"hljs-variable">@value</span>) { <span class=3D"hljs-comment">/=
/ outer mixin</span>
  <span class=3D"hljs-class">.doSomething</span>() { <span class=3D"hljs-co=
mment">// nested mixin</span>
    <span class=3D"hljs-attribute">declaration</span>: <span class=3D"hljs-=
variable">@value</span>;
  }
}

<span class=3D"hljs-id">#namespace</span> {
  <span class=3D"hljs-class">.unlock</span>(<span class=3D"hljs-number">5</=
span>); <span class=3D"hljs-comment">// unlock doSomething mixin</span>
  <span class=3D"hljs-class">.doSomething</span>(); <span class=3D"hljs-com=
ment">//nested mixin was copied here and is usable</span>
}
</code></pre>
<p>Results in:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-id">#namespace</span> {
  <span class=3D"hljs-attribute">declaration</span>: <span class=3D"hljs-nu=
mber">5</span>;
}
</code></pre>


      <br>
    </div>
   =20

  </div>

  <!-- Passing Rulesets to Mixins -->
  <div class=3D"docs-section">
    <div class=3D"page-header">
      <h1 class=3D"docs-heading">Passing Rulesets to Mixins<span class=3D"a=
nchor-target" id=3D"detached-rulesets-feature"></span>
<a href=3D"http://lesscss.cn/features/#detached-rulesets-feature" name=3D"d=
etached-rulesets-feature" class=3D"anchor glyphicon glyphicon-link"></a></h=
1>
    </div>

   =20
    <div class=3D"section-content">
     =20


      <!-- detached-rulesets -->
      =20


<blockquote>
<p>Allow wrapping of a css block, defined in a mixin</p>
</blockquote>
<p>Released <a href=3D"https://github.com/less/less.js/blob/master/CHANGELO=
G.md">v1.7.0</a></p>
<p>A detached ruleset is a group of css properties, nested rulesets, media =
declarations or anything else stored in a variable. You can include it into=
 a ruleset or another structure and all its properties are going to be copi=
ed there. You can also use it as a mixin argument and pass it around as any=
 other variable.</p>
<p>Simple example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-comment">// declare deta=
ched ruleset</span>
<span class=3D"hljs-variable">@detached-ruleset:</span> { <span class=3D"hl=
js-attribute">background</span>: red; };

<span class=3D"hljs-comment">// use detached ruleset</span>
<span class=3D"hljs-class">.top</span> {
    <span class=3D"hljs-variable">@detached-ruleset</span>();=20
}
</code></pre>
<p>compiles into:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.top</span> {
  <span class=3D"hljs-attribute">background</span>: red;
}
</code></pre>
<p>Parentheses after a detached ruleset call are mandatory. The call <code>=
@detached-ruleset;</code> would NOT work.</p>
<p>It is useful when you want to define a mixin that abstracts out either w=
rapping a piece of code in a media query or a non-supported browser class n=
ame. The rulesets can be passed to mixin so that the mixin can wrap the con=
tent, e.g.</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.desktop-and-old-=
ie</span>(<span class=3D"hljs-variable">@rules</span>) {
  <span class=3D"hljs-at_rule">@media</span> screen and (min-width: <span c=
lass=3D"hljs-number">1200</span>) { <span class=3D"hljs-variable">@rules</s=
pan>(); }
  <span class=3D"hljs-tag">html</span><span class=3D"hljs-class">.lt-ie9</s=
pan> <span class=3D"hljs-keyword">&amp;</span>                       { <spa=
n class=3D"hljs-variable">@rules</span>(); }
}

<span class=3D"hljs-tag">header</span> {
  <span class=3D"hljs-attribute">background-color</span>: blue;

  <span class=3D"hljs-class">.desktop-and-old-ie</span>({
    <span class=3D"hljs-attribute">background-color</span>: red;
  });
}
</code></pre>
<p>Here the <code>desktop-and-old-ie</code> mixin defines the media query a=
nd root class so that you can use a mixin to wrap a piece of code. This wil=
l output</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-tag">header</span> {
  <span class=3D"hljs-attribute">background-color</span>: blue;
}
<span class=3D"hljs-at_rule">@media</span> screen and (min-width: <span cla=
ss=3D"hljs-number">1200</span>) {
  <span class=3D"hljs-tag">header</span> {
    <span class=3D"hljs-attribute">background-color</span>: red;
  }
}
<span class=3D"hljs-tag">html</span><span class=3D"hljs-class">.lt-ie9</spa=
n> <span class=3D"hljs-tag">header</span> {
  <span class=3D"hljs-attribute">background-color</span>: red;
}
</code></pre>
<p>A ruleset can be now assigned to a variable or passed in to a mixin and =
can contain the full set of less features, e.g.</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-variable">@my-ruleset:</=
span> {
    <span class=3D"hljs-class">.my-selector</span> {
      <span class=3D"hljs-attribute">background-color</span>: black;
    }
  };
</code></pre>
<p>You can even take advantage of <a href=3D"http://lesscss.cn/features/#fe=
atures-overview-feature-media-query-bubbling-and-nested-media-queries">medi=
a query bubbling</a>, for instance</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-variable">@my-ruleset:</=
span> {
    <span class=3D"hljs-class">.my-selector</span> {
      <span class=3D"hljs-at_rule">@media</span> tv {
        <span class=3D"hljs-attribute">background-color</span>: black;
      }
    }
  };
<span class=3D"hljs-at_rule">@media</span> (orientation:portrait) {
    <span class=3D"hljs-variable">@my-ruleset</span>();
}
</code></pre>
<p>which will output</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-at_rule">@media</span> (o=
rientation: portrait) and tv {
  <span class=3D"hljs-class">.my-selector</span> {
    <span class=3D"hljs-attribute">background-color</span>: black;
  }
}
</code></pre>
<p>A detached ruleset call unlocks (returns) all its mixins into caller the=
 same way as mixin calls do. However, it does NOT return variables.</p>
<p>Returned mixin:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-comment">// detached rul=
eset with a mixin</span>
<span class=3D"hljs-variable">@detached-ruleset:</span> {=20
    <span class=3D"hljs-class">.mixin</span>() {
        <span class=3D"hljs-attribute">color</span>:blue;
    }
};
<span class=3D"hljs-comment">// call detached ruleset</span>
<span class=3D"hljs-class">.caller</span> {
    <span class=3D"hljs-variable">@detached-ruleset</span>();=20
    <span class=3D"hljs-class">.mixin</span>();
}
</code></pre>
<p>Results in:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.caller</span> {
  <span class=3D"hljs-attribute">color</span>: blue;
}
</code></pre>
<p>Private variables:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-tag">detached-ruleset</s=
pan>: {=20
    <span class=3D"hljs-variable">@color:</span>blue; <span class=3D"hljs-c=
omment">// this variable is private</span>
};
<span class=3D"hljs-class">.caller</span> {
    <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-variab=
le">@color</span>; <span class=3D"hljs-comment">// syntax error</span>
}
</code></pre>
<h2 class=3D"docs-heading">Scoping<span class=3D"anchor-target" id=3D"detac=
hed-rulesets-feature-scoping"></span>
<a href=3D"http://lesscss.cn/features/#detached-rulesets-feature-scoping" n=
ame=3D"detached-rulesets-feature-scoping" class=3D"anchor glyphicon glyphic=
on-link"></a></h2>
<p>A detached ruleset can use all variables and mixins accessible where it =
is <em>defined</em> and where it is <em>called</em>. Otherwise said, both d=
efinition and caller scopes are available to it. If both scopes contains th=
e same variable or mixin, declaration scope value takes precedence. </p>
<p><em>Declaration scope</em> is the one where detached ruleset body is def=
ined. Copying a detached ruleset from one variable into another cannot modi=
fy its scope. The ruleset does not gain access to new scopes just by being =
referenced there.</p>
<p>Lastly, a detached ruleset can gain access to scope by being unlocked (i=
mported) into it.</p>
<h4 class=3D"docs-heading">Definition and Caller Scope Visibility<span clas=
s=3D"anchor-target" id=3D"detached-rulesets-feature-definition-and-caller-s=
cope-visibility"></span>
<a href=3D"http://lesscss.cn/features/#detached-rulesets-feature-definition=
-and-caller-scope-visibility" name=3D"detached-rulesets-feature-definition-=
and-caller-scope-visibility" class=3D"anchor glyphicon glyphicon-link"></a>=
</h4>
<p>A detached ruleset sees the caller's variables and mixins:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-variable">@detached-rule=
set:</span> {
  <span class=3D"hljs-attribute">caller-variable</span>: <span class=3D"hlj=
s-variable">@caller-variable</span>; <span class=3D"hljs-comment">// variab=
le is undefined here</span>
  <span class=3D"hljs-class">.caller-mixin</span>(); <span class=3D"hljs-co=
mment">// mixin is undefined here</span>
};

<span class=3D"hljs-tag">selector</span> {
  <span class=3D"hljs-comment">// use detached ruleset</span>
  <span class=3D"hljs-variable">@detached-ruleset</span>();=20

  <span class=3D"hljs-comment">// define variable and mixin needed inside t=
he detached ruleset</span>
  <span class=3D"hljs-variable">@caller-variable:</span> value;
  <span class=3D"hljs-class">.caller-mixin</span>() {
    <span class=3D"hljs-attribute">variable</span>: declaration;
  }
}
</code></pre>
<p>compiles into:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-tag">selector</span> {
  <span class=3D"hljs-attribute">caller-variable</span>: value;
  <span class=3D"hljs-attribute">variable</span>: declaration;
}
</code></pre>
<p>Variable and mixins accessible form definition win over those available =
in the caller:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-variable">@variable:</sp=
an> global;
<span class=3D"hljs-variable">@detached-ruleset:</span> {
  <span class=3D"hljs-comment">// will use global variable, because it is a=
ccessible</span>
  <span class=3D"hljs-comment">// from detached-ruleset definition</span>
  <span class=3D"hljs-attribute">variable</span>: <span class=3D"hljs-varia=
ble">@variable</span>;=20
};

<span class=3D"hljs-tag">selector</span> {
  <span class=3D"hljs-variable">@detached-ruleset</span>();
  <span class=3D"hljs-variable">@variable:</span> value; <span class=3D"hlj=
s-comment">// variable defined in caller - will be ignored</span>
}
</code></pre>
<p>compiles into:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-tag">selector</span> {
  <span class=3D"hljs-attribute">variable</span>: global;
}
</code></pre>
<h4 class=3D"docs-heading">Referencing <em>Won't</em> Modify Detached Rules=
et Scope<span class=3D"anchor-target" id=3D"detached-rulesets-feature-refer=
encing-won-t-modify-detached-ruleset-scope"></span>
<a href=3D"http://lesscss.cn/features/#detached-rulesets-feature-referencin=
g-won-t-modify-detached-ruleset-scope" name=3D"detached-rulesets-feature-re=
ferencing-won-t-modify-detached-ruleset-scope" class=3D"anchor glyphicon gl=
yphicon-link"></a></h4>
<p>A ruleset does not gain access to new scopes just by being referenced th=
ere:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-variable">@detached-1:</=
span> { <span class=3D"hljs-attribute">scope-detached</span>: <span class=
=3D"hljs-variable">@one</span> <span class=3D"hljs-variable">@two</span>; }=
;
<span class=3D"hljs-class">.one</span> {
  <span class=3D"hljs-variable">@one:</span> visible;
  <span class=3D"hljs-class">.two</span> {
    <span class=3D"hljs-variable">@detached-2:</span> <span class=3D"hljs-v=
ariable">@detached-1</span>; <span class=3D"hljs-comment">// copying/renami=
ng ruleset </span>
    <span class=3D"hljs-variable">@two:</span> visible; <span class=3D"hljs=
-comment">// ruleset can not see this variable</span>
  }
}

<span class=3D"hljs-class">.use-place</span> {
  <span class=3D"hljs-class">.one</span> &gt; <span class=3D"hljs-class">.t=
wo</span>();=20
  <span class=3D"hljs-variable">@detached-2</span>();
}
</code></pre>
<p>throws an error:</p>
<pre><code>ERROR 1:32 The variable "@one" was not declared.
</code></pre><h4 class=3D"docs-heading">Unlocking <em>Will</em> Modify Deta=
ched Ruleset Scope<span class=3D"anchor-target" id=3D"detached-rulesets-fea=
ture-unlocking-will-modify-detached-ruleset-scope"></span>
<a href=3D"http://lesscss.cn/features/#detached-rulesets-feature-unlocking-=
will-modify-detached-ruleset-scope" name=3D"detached-rulesets-feature-unloc=
king-will-modify-detached-ruleset-scope" class=3D"anchor glyphicon glyphico=
n-link"></a></h4>
<p>A detached ruleset gains access by being unlocked (imported) inside a sc=
ope:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-id">#space</span> {
  <span class=3D"hljs-class">.importer-1</span>() {
    <span class=3D"hljs-variable">@detached:</span> { <span class=3D"hljs-a=
ttribute">scope-detached</span>: <span class=3D"hljs-variable">@variable</s=
pan>; }; <span class=3D"hljs-comment">// define detached ruleset</span>
  }
}

<span class=3D"hljs-class">.importer-2</span>() {
  <span class=3D"hljs-variable">@variable:</span> value; <span class=3D"hlj=
s-comment">// unlocked detached ruleset CAN see this variable</span>
  <span class=3D"hljs-id">#space</span> &gt; <span class=3D"hljs-class">.im=
porter-1</span>(); <span class=3D"hljs-comment">// unlock/import detached r=
uleset</span>
}

<span class=3D"hljs-class">.use-place</span> {
  <span class=3D"hljs-class">.importer-2</span>(); <span class=3D"hljs-comm=
ent">// unlock/import detached ruleset second time</span>
   <span class=3D"hljs-variable">@detached</span>();
}
</code></pre>
<p>compiles into:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.use-place</span> =
{
  <span class=3D"hljs-attribute">scope-detached</span>: value;
}
</code></pre>


      <br>
    </div>
   =20

  </div>

  <!-- Import Directives -->
  <div class=3D"docs-section">
    <div class=3D"page-header">
      <h1 class=3D"docs-heading">Import Directives<span class=3D"anchor-tar=
get" id=3D"import-directives-feature"></span>
<a href=3D"http://lesscss.cn/features/#import-directives-feature" name=3D"i=
mport-directives-feature" class=3D"anchor glyphicon glyphicon-link"></a></h=
1>
    </div>

   =20
    <div class=3D"section-content">
     =20


      <!-- import-directives -->
      =20


<blockquote>
<p>Import styles from other style sheets</p>
</blockquote>
<p>In standard CSS, <code>@import</code> at-rules must precede all other ty=
pes of rules. But Less.js doesn't care where you put <code>@import</code> s=
tatements.</p>
<p>Example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.foo</span> {
  <span class=3D"hljs-attribute">background</span>: <span class=3D"hljs-hex=
color">#900</span>;
}
<span class=3D"hljs-at_rule">@import</span> <span class=3D"hljs-string">"th=
is-is-valid.less"</span>;
</code></pre>
<h2 class=3D"docs-heading">File extensions<span class=3D"anchor-target" id=
=3D"import-directives-feature-file-extensions"></span>
<a href=3D"http://lesscss.cn/features/#import-directives-feature-file-exten=
sions" name=3D"import-directives-feature-file-extensions" class=3D"anchor g=
lyphicon glyphicon-link"></a></h2>
<p><code>@import</code> statements may be treated differently by Less depen=
ding on the file extension:</p>
<ul>
<li>If the file has a <code>.css</code> extension it will be treated as CSS=
 and the <code>@import</code> statement left as-is (see the <a href=3D"http=
://lesscss.cn/features/#import-options-inline">inline option</a> below).</l=
i>
<li>If it has <em>any other extension</em> it will be treated as Less and i=
mported.</li>
<li>If it does not have an extension, <code>.less</code> will be appended a=
nd it will be included as a imported Less file.</li>
</ul>
<p>Examples:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-at_rule">@import</span> =
<span class=3D"hljs-string">"foo"</span>;      <span class=3D"hljs-comment"=
>// foo.less is imported</span>
<span class=3D"hljs-at_rule">@import</span> <span class=3D"hljs-string">"fo=
o.less"</span>; <span class=3D"hljs-comment">// foo.less is imported</span>
<span class=3D"hljs-at_rule">@import</span> <span class=3D"hljs-string">"fo=
o.php"</span>;  <span class=3D"hljs-comment">// foo.php imported as a less =
file</span>
<span class=3D"hljs-at_rule">@import</span> <span class=3D"hljs-string">"fo=
o.css"</span>;  <span class=3D"hljs-comment">// statement left in place, as=
-is</span>
</code></pre>
<p>The following options can be used to override this behavior.</p>
<h1 class=3D"docs-heading">Import Options<span class=3D"anchor-target" id=
=3D"import-options"></span>
<a href=3D"http://lesscss.cn/features/#import-options" name=3D"import-optio=
ns" class=3D"anchor glyphicon glyphicon-link"></a></h1>
<blockquote>
<p>Less offers several extensions to the CSS <code>@import</code> CSS at-ru=
le to provide more flexibility over what you can do with external files.</p=
>
</blockquote>
<p>Syntax: <code>@import (keyword) "filename";</code></p>
<p>The following import directives have been implemented:</p>
<ul>
<li><code>reference</code>: use a Less file but do not output it</li>
<li><code>inline</code>: include the source file in the output but do not p=
rocess it</li>
<li><code>less</code>: treat the file as a Less file, no matter what the fi=
le extension</li>
<li><code>css</code>: treat the file as a CSS file, no matter what the file=
 extension</li>
<li><code>once</code>: only include the file once (this is default behavior=
)</li>
<li><code>multiple</code>: include the file multiple times</li>
<li><code>optional</code>: continue compiling when file is not found</li>
</ul>
<blockquote>
<p>More than one keyword per <code>@import</code> is allowed, you will have=
 to use commas to separate the keywords:</p>
</blockquote>
<p>Example: <code>@import (optional, reference) "foo.less";</code></p>
<h2 class=3D"docs-heading">reference<span class=3D"anchor-target" id=3D"imp=
ort-options-reference"></span>
<a href=3D"http://lesscss.cn/features/#import-options-reference" name=3D"im=
port-options-reference" class=3D"anchor glyphicon glyphicon-link"></a></h2>
<blockquote>
<p>Use <code>@import (reference)</code> to import external files, but witho=
ut adding the imported styles to the compiled output unless referenced.</p>
</blockquote>
<p>Released <a href=3D"https://github.com/less/less.js/blob/master/CHANGELO=
G.md">v1.5.0</a></p>
<p>Example: <code>@import (reference) "foo.less";</code></p>
<p>Imagine that <code>reference</code> marks every directive and selector w=
ith a <em>reference flag</em> in the imported file, imports as normal, but =
when the CSS is generated, "reference" selectors (as well as any media quer=
ies containing only reference selectors) are not output. <code>reference</c=
ode> styles will not show up in your generated CSS unless the reference sty=
les are used as <a href=3D"http://lesscss.cn/features/#mixins-feature">mixi=
ns</a> or <a href=3D"http://lesscss.cn/features/#extend-feature">extended</=
a>.</p>
<p>Additionally, <strong><code>reference</code></strong> produces different=
 results depending on which method was used (mixin or extend):</p>
<ul>
<li><strong><a href=3D"http://lesscss.cn/features/#extend-feature">extend</=
a></strong>: When a selector is extended, only the new selector is marked a=
s <em>not referenced</em>, and it is pulled in at the position of the refer=
ence <code>@import</code> statement.</li>
<li><strong><a href=3D"http://lesscss.cn/features/#mixins-feature">mixins</=
a></strong>: When a <code>reference</code> style is used as an <a href=3D"h=
ttp://lesscss.cn/features/#mixins-feature">implicit mixin</a>, its rules ar=
e mixed-in, marked "not reference", and appear in the referenced place as n=
ormal.</li>
</ul>
<h3 class=3D"docs-heading">reference example<span class=3D"anchor-target" i=
d=3D"import-options-reference-example"></span>
<a href=3D"http://lesscss.cn/features/#import-options-reference-example" na=
me=3D"import-options-reference-example" class=3D"anchor glyphicon glyphicon=
-link"></a></h3>
<p>This allows you to pull in only specific, targeted styles from a library=
 such as <a href=3D"https://github.com/twbs/bootstrap">Bootstrap</a> by doi=
ng something like this:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.navbar</span><sp=
an class=3D"hljs-keyword">:extend</span>(<span class=3D"hljs-class">.navbar=
</span> <span class=3D"hljs-keyword">all</span>) {}
</code></pre>
<p>And you will pull in only <code>.navbar</code> related styles from Boots=
trap.</p>
<h2 class=3D"docs-heading">inline<span class=3D"anchor-target" id=3D"import=
-options-inline"></span>
<a href=3D"http://lesscss.cn/features/#import-options-inline" name=3D"impor=
t-options-inline" class=3D"anchor glyphicon glyphicon-link"></a></h2>
<blockquote>
<p>Use <code>@import (inline)</code> to include external files, but not pro=
cess them.</p>
</blockquote>
<p>Released <a href=3D"https://github.com/less/less.js/blob/master/CHANGELO=
G.md">v1.5.0</a></p>
<p>Example: <code>@import (inline) "not-less-compatible.css";</code></p>
<p>You will use this when a CSS file may not be Less compatible; this is be=
cause although Less supports most known standards CSS, it does not support =
comments in some places and does not support all known CSS hacks without mo=
difying the CSS.</p>
<p>So you can use this to include the file in the output so that all CSS wi=
ll be in one file.</p>
<h2 class=3D"docs-heading">less<span class=3D"anchor-target" id=3D"import-o=
ptions-less"></span>
<a href=3D"http://lesscss.cn/features/#import-options-less" name=3D"import-=
options-less" class=3D"anchor glyphicon glyphicon-link"></a></h2>
<blockquote>
<p>Use <code>@import (less)</code> to treat imported files as Less, regardl=
ess of file extension.</p>
</blockquote>
<p>Released <a href=3D"https://github.com/less/less.js/blob/master/CHANGELO=
G.md">v1.4.0</a></p>
<p>Example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-at_rule">@import</span> =
(less) <span class=3D"hljs-string">"foo.css"</span>;
</code></pre>
<h2 class=3D"docs-heading">css<span class=3D"anchor-target" id=3D"import-op=
tions-css"></span>
<a href=3D"http://lesscss.cn/features/#import-options-css" name=3D"import-o=
ptions-css" class=3D"anchor glyphicon glyphicon-link"></a></h2>
<blockquote>
<p>Use <code>@import (css)</code> to treat imported files as regular CSS, r=
egardless of file extension. This means the import statement will be left a=
s it is.</p>
</blockquote>
<p>Released <a href=3D"https://github.com/less/less.js/blob/master/CHANGELO=
G.md">v1.4.0</a></p>
<p>Example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-at_rule">@import</span> =
(css) <span class=3D"hljs-string">"foo.less"</span>;
</code></pre>
<p>outputs</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-at_rule">@import</span> =
<span class=3D"hljs-string">"foo.less"</span>;
</code></pre>
<h2 class=3D"docs-heading">once<span class=3D"anchor-target" id=3D"import-o=
ptions-once"></span>
<a href=3D"http://lesscss.cn/features/#import-options-once" name=3D"import-=
options-once" class=3D"anchor glyphicon glyphicon-link"></a></h2>
<blockquote>
<p>The default behavior of <code>@import</code> statements. It means the fi=
le is imported only once and subsequent import statements for that file wil=
l be ignored.</p>
</blockquote>
<p>Released <a href=3D"https://github.com/less/less.js/blob/master/CHANGELO=
G.md">v1.4.0</a></p>
<p>This is the default behavior of <code>@import</code> statements.</p>
<p>Example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-at_rule">@import</span> =
(once) <span class=3D"hljs-string">"foo.less"</span>;
<span class=3D"hljs-at_rule">@import</span> (once) <span class=3D"hljs-stri=
ng">"foo.less"</span>; <span class=3D"hljs-comment">// this statement will =
be ignored</span>
</code></pre>
<h2 class=3D"docs-heading">multiple<span class=3D"anchor-target" id=3D"impo=
rt-options-multiple"></span>
<a href=3D"http://lesscss.cn/features/#import-options-multiple" name=3D"imp=
ort-options-multiple" class=3D"anchor glyphicon glyphicon-link"></a></h2>
<blockquote>
<p>Use <code>@import (multiple)</code> to allow importing of multiple files=
 with the same name. This is the opposite behavior to once.</p>
</blockquote>
<p>Released <a href=3D"https://github.com/less/less.js/blob/master/CHANGELO=
G.md">v1.4.0</a></p>
<p>Example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-comment">// file: foo.le=
ss</span>
<span class=3D"hljs-class">.a</span> {
  <span class=3D"hljs-attribute">color</span>: green;
}
<span class=3D"hljs-comment">// file: main.less</span>
<span class=3D"hljs-at_rule">@import</span> (multiple) <span class=3D"hljs-=
string">"foo.less"</span>;
<span class=3D"hljs-at_rule">@import</span> (multiple) <span class=3D"hljs-=
string">"foo.less"</span>;
</code></pre>
<p>Outputs</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.a</span> {
  <span class=3D"hljs-attribute">color</span>: green;
}
<span class=3D"hljs-class">.a</span> {
  <span class=3D"hljs-attribute">color</span>: green;
}
</code></pre>
<h2 class=3D"docs-heading">optional<span class=3D"anchor-target" id=3D"impo=
rt-options-optional"></span>
<a href=3D"http://lesscss.cn/features/#import-options-optional" name=3D"imp=
ort-options-optional" class=3D"anchor glyphicon glyphicon-link"></a></h2>
<blockquote>
<p>Use <code>@import (optional)</code> to allow importing of a file only wh=
en it exists. Without the <code>optional</code> keyword Less throws a FileE=
rror and stops compiling when importing a file that can not be found. </p>
</blockquote>
<p>Released <a href=3D"https://github.com/less/less.js/blob/master/CHANGELO=
G.md">v2.3.0</a></p>


      <br>
    </div>
   =20

  </div>

  <!-- Mixin Guards -->
  <div class=3D"docs-section">
    <div class=3D"page-header">
      <h1 class=3D"docs-heading">Mixin Guards<span class=3D"anchor-target" =
id=3D"mixin-guards-feature"></span>
<a href=3D"http://lesscss.cn/features/#mixin-guards-feature" name=3D"mixin-=
guards-feature" class=3D"anchor glyphicon glyphicon-link"></a></h1>
    </div>

   =20
    <div class=3D"section-content">
     =20


      <!-- mixin-guards -->
      =20


<blockquote>
<p>Conditional mixins</p>
</blockquote>
<p>Guards are useful when you want to match on <em>expressions</em>, as opp=
osed to simple values or arity. If you are familiar with functional program=
ming, you have probably encountered them already.</p>
<p>In trying to stay as close as possible to the declarative nature of CSS,=
 Less has opted to implement conditional execution via <strong>guarded mixi=
ns</strong> instead of <code>if</code>/<code>else</code> statements, in the=
 vein of <code>@media</code> query feature specifications.</p>
<p>Let's start with an example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.mixin</span> (<s=
pan class=3D"hljs-variable">@a</span>) <span class=3D"hljs-keyword">when</s=
pan> (<span class=3D"hljs-function">lightness</span>(<span class=3D"hljs-va=
riable">@a</span>) &gt;=3D <span class=3D"hljs-number">50%</span>) {
  <span class=3D"hljs-attribute">background-color</span>: black;
}
<span class=3D"hljs-class">.mixin</span> (<span class=3D"hljs-variable">@a<=
/span>) <span class=3D"hljs-keyword">when</span> (<span class=3D"hljs-funct=
ion">lightness</span>(<span class=3D"hljs-variable">@a</span>) &lt; <span c=
lass=3D"hljs-number">50%</span>) {
  <span class=3D"hljs-attribute">background-color</span>: white;
}
<span class=3D"hljs-class">.mixin</span> (<span class=3D"hljs-variable">@a<=
/span>) {
  <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-variable=
">@a</span>;
}
</code></pre>
<p>The key is the <code>when</code> keyword, which introduces a guard seque=
nce (here with only one guard). Now if we run the following code:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.class1</span> { =
<span class=3D"hljs-class">.mixin</span>(<span class=3D"hljs-hexcolor">#ddd=
</span>) }
<span class=3D"hljs-class">.class2</span> { <span class=3D"hljs-class">.mix=
in</span>(<span class=3D"hljs-hexcolor">#555</span>) }
</code></pre>
<p>Here's what we'll get:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.class1</span> {
  <span class=3D"hljs-attribute">background-color</span>: black;
  <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-hexcolor=
">#ddd</span>;
}
<span class=3D"hljs-class">.class2</span> {
  <span class=3D"hljs-attribute">background-color</span>: white;
  <span class=3D"hljs-attribute">color</span>: <span class=3D"hljs-hexcolor=
">#555</span>;
}
</code></pre>
<h3 class=3D"docs-heading">Guard comparison operators<span class=3D"anchor-=
target" id=3D"mixin-guards-feature-guard-comparison-operators"></span>
<a href=3D"http://lesscss.cn/features/#mixin-guards-feature-guard-compariso=
n-operators" name=3D"mixin-guards-feature-guard-comparison-operators" class=
=3D"anchor glyphicon glyphicon-link"></a></h3>
<p>The full list of comparison operators usable in guards are: <code>&gt;</=
code>, <code>&gt;=3D</code>, <code>=3D</code>, <code>=3D&lt;</code>, <code>=
&lt;</code>. Additionally, the keyword <code>true</code> is the only truthy=
 value, making these two mixins equivalent:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.truth</span> (<s=
pan class=3D"hljs-variable">@a</span>) <span class=3D"hljs-keyword">when</s=
pan> (<span class=3D"hljs-variable">@a</span>) { ... }
<span class=3D"hljs-class">.truth</span> (<span class=3D"hljs-variable">@a<=
/span>) <span class=3D"hljs-keyword">when</span> (<span class=3D"hljs-varia=
ble">@a</span> =3D true) { ... }
</code></pre>
<p>Any value other than the keyword <code>true</code> is falsy:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.class</span> {
  <span class=3D"hljs-class">.truth</span>(<span class=3D"hljs-number">40</=
span>); <span class=3D"hljs-comment">// Will not match any of the above def=
initions.</span>
}
</code></pre>
<p>Note that you can also compare arguments with each other, or with non-ar=
guments:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-at_rule">@media</span>: =
mobile;

<span class=3D"hljs-class">.mixin</span> (<span class=3D"hljs-variable">@a<=
/span>) <span class=3D"hljs-keyword">when</span> (<span class=3D"hljs-varia=
ble">@media</span> =3D mobile) { ... }
<span class=3D"hljs-class">.mixin</span> (<span class=3D"hljs-variable">@a<=
/span>) <span class=3D"hljs-keyword">when</span> (<span class=3D"hljs-varia=
ble">@media</span> =3D desktop) { ... }

<span class=3D"hljs-class">.max</span> (<span class=3D"hljs-variable">@a</s=
pan>; <span class=3D"hljs-variable">@b</span>) <span class=3D"hljs-keyword"=
>when</span> (<span class=3D"hljs-variable">@a</span> &gt; <span class=3D"h=
ljs-variable">@b</span>) { <span class=3D"hljs-attribute">width</span>: <sp=
an class=3D"hljs-variable">@a</span> }
<span class=3D"hljs-class">.max</span> (<span class=3D"hljs-variable">@a</s=
pan>; <span class=3D"hljs-variable">@b</span>) <span class=3D"hljs-keyword"=
>when</span> (<span class=3D"hljs-variable">@a</span> &lt; <span class=3D"h=
ljs-variable">@b</span>) { <span class=3D"hljs-attribute">width</span>: <sp=
an class=3D"hljs-variable">@b</span> }
</code></pre>
<h3 class=3D"docs-heading">Guard logical operators<span class=3D"anchor-tar=
get" id=3D"mixin-guards-feature-guard-logical-operators"></span>
<a href=3D"http://lesscss.cn/features/#mixin-guards-feature-guard-logical-o=
perators" name=3D"mixin-guards-feature-guard-logical-operators" class=3D"an=
chor glyphicon glyphicon-link"></a></h3>
<p>You can use logical operators with guards. The syntax is based on CSS me=
dia queries.</p>
<p>Use the <code>and</code> keyword to combine guards:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.mixin</span> (<s=
pan class=3D"hljs-variable">@a</span>) <span class=3D"hljs-keyword">when</s=
pan> (<span class=3D"hljs-function">isnumber</span>(<span class=3D"hljs-var=
iable">@a</span>)) <span class=3D"hljs-keyword">and</span> (<span class=3D"=
hljs-variable">@a</span> &gt; <span class=3D"hljs-number">0</span>) { ... }
</code></pre>
<p>You can emulate the <em>or</em> operator by separating guards with a com=
ma <code>,</code>. If any of the guards evaluate to true, it's considered a=
 match:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.mixin</span> (<s=
pan class=3D"hljs-variable">@a</span>) <span class=3D"hljs-keyword">when</s=
pan> (<span class=3D"hljs-variable">@a</span> &gt; <span class=3D"hljs-numb=
er">10</span>), (<span class=3D"hljs-variable">@a</span> &lt; -<span class=
=3D"hljs-number">10</span>) { ... }
</code></pre>
<p>Use the <code>not</code> keyword to negate conditions:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.mixin</span> (<s=
pan class=3D"hljs-variable">@b</span>) <span class=3D"hljs-keyword">when</s=
pan> <span class=3D"hljs-keyword">not</span> (<span class=3D"hljs-variable"=
>@b</span> &gt; <span class=3D"hljs-number">0</span>) { ... }
</code></pre>
<h3 class=3D"docs-heading">Type checking functions<span class=3D"anchor-tar=
get" id=3D"mixin-guards-feature-type-checking-functions"></span>
<a href=3D"http://lesscss.cn/features/#mixin-guards-feature-type-checking-f=
unctions" name=3D"mixin-guards-feature-type-checking-functions" class=3D"an=
chor glyphicon glyphicon-link"></a></h3>
<p>Lastly, if you want to match mixins based on value type, you can use the=
 <code>is</code> functions:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.mixin</span> (<s=
pan class=3D"hljs-variable">@a</span>; <span class=3D"hljs-variable">@b</sp=
an>: <span class=3D"hljs-number">0</span>) <span class=3D"hljs-keyword">whe=
n</span> (<span class=3D"hljs-function">isnumber</span>(<span class=3D"hljs=
-variable">@b</span>)) { ... }
<span class=3D"hljs-class">.mixin</span> (<span class=3D"hljs-variable">@a<=
/span>; <span class=3D"hljs-variable">@b</span>: black) <span class=3D"hljs=
-keyword">when</span> (<span class=3D"hljs-function">iscolor</span>(<span c=
lass=3D"hljs-variable">@b</span>)) { ... }
</code></pre>
<p>Here are the basic type checking functions:</p>
<ul>
<li><code>iscolor</code></li>
<li><code>isnumber</code></li>
<li><code>isstring</code></li>
<li><code>iskeyword</code></li>
<li><code>isurl</code></li>
</ul>
<p>If you want to check if a value is in a specific unit in addition to bei=
ng a number, you may use one of:</p>
<ul>
<li><code>ispixel</code></li>
<li><code>ispercentage</code></li>
<li><code>isem</code></li>
<li><code>isunit</code></li>
</ul>
<h3 class=3D"docs-heading">Conditional mixins<span class=3D"anchor-target" =
id=3D"mixin-guards-feature-conditional-mixins"></span>
<a href=3D"http://lesscss.cn/features/#mixin-guards-feature-conditional-mix=
ins" name=3D"mixin-guards-feature-conditional-mixins" class=3D"anchor glyph=
icon glyphicon-link"></a></h3>
<p><em>(<strong>FIXME</strong>)</em> Additionally, the <code>default</code>=
 function may be used to make a mixin match depending on other mixing match=
es, and you may use it to create "conditional mixins" similar to <code>else=
</code> or <code>default</code> statements (of <code>if</code> and <code>ca=
se</code> structures respectively):</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.mixin</span> (<s=
pan class=3D"hljs-variable">@a</span>) <span class=3D"hljs-keyword">when</s=
pan> (<span class=3D"hljs-variable">@a</span> &gt; <span class=3D"hljs-numb=
er">0</span>) { ...  }
<span class=3D"hljs-class">.mixin</span> (<span class=3D"hljs-variable">@a<=
/span>) <span class=3D"hljs-keyword">when</span> (<span class=3D"hljs-funct=
ion">default</span>()) { ... } <span class=3D"hljs-comment">// matches only=
 if first mixin does not, i.e. when @a &lt;=3D 0</span>
</code></pre>


      <br>
    </div>
   =20

  </div>

  <!-- CSS Guards -->
  <div class=3D"docs-section">
    <div class=3D"page-header">
      <h1 class=3D"docs-heading">CSS Guards<span class=3D"anchor-target" id=
=3D"css-guards-feature"></span>
<a href=3D"http://lesscss.cn/features/#css-guards-feature" name=3D"css-guar=
ds-feature" class=3D"anchor glyphicon glyphicon-link"></a></h1>
    </div>

   =20
    <div class=3D"section-content">
     =20


      <!-- css-guards -->
      =20


<blockquote>
<p>"if"'s around selectors</p>
</blockquote>
<p>Released <a href=3D"https://github.com/less/less.js/blob/master/CHANGELO=
G.md">v1.5.0</a></p>
<p>Guards can also be applied to css selectors, which is syntactic sugar fo=
r declaring the mixin and then calling it immediately.</p>
<p>For instance, before 1.5.0 you would have had to do this:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.my-optional-styl=
e</span>() <span class=3D"hljs-keyword">when</span> (<span class=3D"hljs-va=
riable">@my-option</span> =3D true) {
  <span class=3D"hljs-tag">button</span> {
    <span class=3D"hljs-attribute">color</span>: white;
  }
}
<span class=3D"hljs-class">.my-optional-style</span>();
</code></pre>
<p>Now, you can apply the guard directly to a style.</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-tag">button</span> <span=
 class=3D"hljs-keyword">when</span> (<span class=3D"hljs-variable">@my-opti=
on</span> =3D true) {
  <span class=3D"hljs-attribute">color</span>: white;
}
</code></pre>
<p>You can also achieve an <code>if</code> type statement by combining this=
 with the <code>&amp;</code> feature, allowing you to group multiple guards=
. </p>
<pre><code class=3D"lang-less"><span class=3D"hljs-keyword">&amp;</span> <s=
pan class=3D"hljs-keyword">when</span> (<span class=3D"hljs-variable">@my-o=
ption</span> =3D true) {
  <span class=3D"hljs-tag">button</span> {
    <span class=3D"hljs-attribute">color</span>: white;
  }
  <span class=3D"hljs-tag">a</span> {
    <span class=3D"hljs-attribute">color</span>: blue;
  }
}
</code></pre>


      <br>
    </div>
   =20

  </div>

  <!-- Loops -->
  <div class=3D"docs-section">
    <div class=3D"page-header">
      <h1 class=3D"docs-heading">Loops<span class=3D"anchor-target" id=3D"l=
oops-feature"></span>
<a href=3D"http://lesscss.cn/features/#loops-feature" name=3D"loops-feature=
" class=3D"anchor glyphicon glyphicon-link"></a></h1>
    </div>

   =20
    <div class=3D"section-content">
     =20


      <!-- loops -->
      =20


<blockquote>
<p>Creating loops</p>
</blockquote>
<p>In Less a mixin can call itself. Such recursive mixins, when combined wi=
th <a href=3D"http://lesscss.cn/features/#mixin-guards-feature">Guard Expre=
ssions</a> and <a href=3D"http://lesscss.cn/features/#mixins-parametric-fea=
ture-pattern-matching">Pattern Matching</a>, can be used to create various =
iterative/loop structures.</p>
<p>Example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.loop</span>(<spa=
n class=3D"hljs-variable">@counter</span>) <span class=3D"hljs-keyword">whe=
n</span> (<span class=3D"hljs-variable">@counter</span> &gt; <span class=3D=
"hljs-number">0</span>) {
  <span class=3D"hljs-class">.loop</span>((<span class=3D"hljs-variable">@c=
ounter</span> - <span class=3D"hljs-number">1</span>));    <span class=3D"h=
ljs-comment">// next iteration</span>
  <span class=3D"hljs-attribute">width</span>: (<span class=3D"hljs-number"=
>10px</span> * <span class=3D"hljs-variable">@counter</span>); <span class=
=3D"hljs-comment">// code for each iteration</span>
}

<span class=3D"hljs-tag">div</span> {
  <span class=3D"hljs-class">.loop</span>(<span class=3D"hljs-number">5</sp=
an>); <span class=3D"hljs-comment">// launch the loop</span>
}
</code></pre>
<p>Output:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-tag">div</span> {
  <span class=3D"hljs-attribute">width</span>: <span class=3D"hljs-number">=
10px</span>;
  <span class=3D"hljs-attribute">width</span>: <span class=3D"hljs-number">=
20px</span>;
  <span class=3D"hljs-attribute">width</span>: <span class=3D"hljs-number">=
30px</span>;
  <span class=3D"hljs-attribute">width</span>: <span class=3D"hljs-number">=
40px</span>;
  <span class=3D"hljs-attribute">width</span>: <span class=3D"hljs-number">=
50px</span>;
}
</code></pre>
<p>A generic example of using a recursive loop to generate CSS grid classes=
:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.generate-columns=
</span>(<span class=3D"hljs-number">4</span>);

<span class=3D"hljs-class">.generate-columns</span>(<span class=3D"hljs-var=
iable">@n</span>, <span class=3D"hljs-variable">@i</span>: <span class=3D"h=
ljs-number">1</span>) <span class=3D"hljs-keyword">when</span> (<span class=
=3D"hljs-variable">@i</span> =3D&lt; <span class=3D"hljs-variable">@n</span=
>) {
  <span class=3D"hljs-class">.column-@{i}</span> {
    <span class=3D"hljs-attribute">width</span>: (<span class=3D"hljs-varia=
ble">@i</span> * <span class=3D"hljs-number">100%</span> / <span class=3D"h=
ljs-variable">@n</span>);
  }
  <span class=3D"hljs-class">.generate-columns</span>(<span class=3D"hljs-v=
ariable">@n</span>, (<span class=3D"hljs-variable">@i</span> + <span class=
=3D"hljs-number">1</span>));
}
</code></pre>
<p>Output:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.column-1</span> {
  <span class=3D"hljs-attribute">width</span>: <span class=3D"hljs-number">=
25%</span>;
}
<span class=3D"hljs-class">.column-2</span> {
  <span class=3D"hljs-attribute">width</span>: <span class=3D"hljs-number">=
50%</span>;
}
<span class=3D"hljs-class">.column-3</span> {
  <span class=3D"hljs-attribute">width</span>: <span class=3D"hljs-number">=
75%</span>;
}
<span class=3D"hljs-class">.column-4</span> {
  <span class=3D"hljs-attribute">width</span>: <span class=3D"hljs-number">=
100%</span>;
}
</code></pre>


      <br>
    </div>
   =20

  </div>

  <!-- Merge -->
  <div class=3D"docs-section">
    <div class=3D"page-header">
      <h1 class=3D"docs-heading">Merge<span class=3D"anchor-target" id=3D"m=
erge-feature"></span>
<a href=3D"http://lesscss.cn/features/#merge-feature" name=3D"merge-feature=
" class=3D"anchor glyphicon glyphicon-link"></a></h1>
    </div>

   =20
    <div class=3D"section-content">
     =20


      <!-- merge -->
      =20


<blockquote>
<p>Combine properties</p>
</blockquote>
<p>The <code>merge</code> feature allows for aggregating values from multip=
le properties into a comma or space separated list under a single property.=
 <code>merge</code> is useful for properties such as background and transfo=
rm.</p>
<h2 class=3D"docs-heading">Comma<span class=3D"anchor-target" id=3D"merge-f=
eature-comma"></span>
<a href=3D"http://lesscss.cn/features/#merge-feature-comma" name=3D"merge-f=
eature-comma" class=3D"anchor glyphicon glyphicon-link"></a></h2>
<blockquote>
<p>Append property value with comma</p>
</blockquote>
<p>Released <a href=3D"https://github.com/less/less.js/blob/master/CHANGELO=
G.md">v1.5.0</a></p>
<p>Example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.mixin</span>() {
  <span class=3D"hljs-attribute">box-shadow</span>+: inset <span class=3D"h=
ljs-number">0</span> <span class=3D"hljs-number">0</span> <span class=3D"hl=
js-number">10px</span> <span class=3D"hljs-hexcolor">#555</span>;
}
<span class=3D"hljs-class">.myclass</span> {
  <span class=3D"hljs-class">.mixin</span>();
  <span class=3D"hljs-attribute">box-shadow</span>+: <span class=3D"hljs-nu=
mber">0</span> <span class=3D"hljs-number">0</span> <span class=3D"hljs-num=
ber">20px</span> black;
}
</code></pre>
<p>Outputs</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.myclass</span> {
  <span class=3D"hljs-attribute">box-shadow</span>: inset <span class=3D"hl=
js-number">0</span> <span class=3D"hljs-number">0</span> <span class=3D"hlj=
s-number">10px</span> <span class=3D"hljs-hexcolor">#555</span>, <span clas=
s=3D"hljs-number">0</span> <span class=3D"hljs-number">0</span> <span class=
=3D"hljs-number">20px</span> black;
}
</code></pre>
<h2 class=3D"docs-heading">Space<span class=3D"anchor-target" id=3D"merge-f=
eature-space"></span>
<a href=3D"http://lesscss.cn/features/#merge-feature-space" name=3D"merge-f=
eature-space" class=3D"anchor glyphicon glyphicon-link"></a></h2>
<blockquote>
<p>Append property value with space</p>
</blockquote>
<p>Released <a href=3D"https://github.com/less/less.js/blob/master/CHANGELO=
G.md">v1.7.0</a></p>
<p>Example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.mixin</span>() {
  <span class=3D"hljs-attribute">transform</span>+_: <span class=3D"hljs-fu=
nction">scale</span>(<span class=3D"hljs-number">2</span>);
}
<span class=3D"hljs-class">.myclass</span> {
  <span class=3D"hljs-class">.mixin</span>();
  <span class=3D"hljs-attribute">transform</span>+_: <span class=3D"hljs-fu=
nction">rotate</span>(<span class=3D"hljs-number">15deg</span>);
}
</code></pre>
<p>Outputs</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.myclass</span> {
  <span class=3D"hljs-attribute">transform</span>: <span class=3D"hljs-func=
tion">scale</span>(<span class=3D"hljs-number">2</span>) <span class=3D"hlj=
s-function">rotate</span>(<span class=3D"hljs-number">15deg</span>);
}
</code></pre>
<p>To avoid any unintentional joins, <code>merge</code> requires an explici=
t <code>+</code> or <code>+_</code> flag on each join pending declaration.<=
/p>


      <br>
    </div>
   =20

  </div>

  <!-- Parent Selectors -->
  <div class=3D"docs-section">
    <div class=3D"page-header">
      <h1 class=3D"docs-heading">Parent Selectors<span class=3D"anchor-targ=
et" id=3D"parent-selectors-feature"></span>
<a href=3D"http://lesscss.cn/features/#parent-selectors-feature" name=3D"pa=
rent-selectors-feature" class=3D"anchor glyphicon glyphicon-link"></a></h1>
    </div>

   =20
    <div class=3D"section-content">
     =20


      <!-- parent-selectors -->
      =20


<blockquote>
<p>Referencing parent selectors with <code>&amp;</code></p>
</blockquote>
<p>The <code>&amp;</code> operator represents the parent selectors of a <a =
href=3D"http://lesscss.cn/features/#features-overview-feature-nested-rules"=
>nested rule</a> and is most commonly used when applying a modifying class =
or pseudo-class to an existing selector:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-tag">a</span> {
  <span class=3D"hljs-attribute">color</span>: blue;
  <span class=3D"hljs-keyword">&amp;</span><span class=3D"hljs-pseudo">:hov=
er</span> {
    <span class=3D"hljs-attribute">color</span>: green;
  }
}
</code></pre>
<p>results in:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-tag">a</span> {
  <span class=3D"hljs-attribute">color</span>: blue;
}

<span class=3D"hljs-tag">a</span><span class=3D"hljs-pseudo">:hover</span> =
{
  <span class=3D"hljs-attribute">color</span>: green;
}
</code></pre>
<p>Notice that without the <code>&amp;</code>, the above example would resu=
lt in <code>a :hover</code> rule (a descendant selector that matches hovere=
d elements inside of <code>&lt;a&gt;</code> tags) and this is not what we t=
ypically would want with the nested <code>:hover</code>.</p>
<p>The "parent selectors" operator has a variety of uses. Basically any tim=
e you need the selectors of the nested rules to be combined in other ways t=
han the default. For example another typical use of the <code>&amp;</code> =
is to produce repetitive class names:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.button</span> {
  <span class=3D"hljs-keyword">&amp;</span><span class=3D"hljs-tag">-ok</sp=
an> {
    <span class=3D"hljs-attribute">background-image</span>: <span class=3D"=
hljs-function">url</span>(<span class=3D"hljs-string">"ok.png"</span>);
  }
  <span class=3D"hljs-keyword">&amp;</span><span class=3D"hljs-tag">-cancel=
</span> {
    <span class=3D"hljs-attribute">background-image</span>: <span class=3D"=
hljs-function">url</span>(<span class=3D"hljs-string">"cancel.png"</span>);
  }

  <span class=3D"hljs-keyword">&amp;</span><span class=3D"hljs-tag">-custom=
</span> {
    <span class=3D"hljs-attribute">background-image</span>: <span class=3D"=
hljs-function">url</span>(<span class=3D"hljs-string">"custom.png"</span>);
  }
}
</code></pre>
<p>output:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.button-ok</span> =
{
  <span class=3D"hljs-attribute">background-image</span>: <span class=3D"hl=
js-function">url</span>(<span class=3D"hljs-string">"ok.png"</span>);
}
<span class=3D"hljs-class">.button-cancel</span> {
  <span class=3D"hljs-attribute">background-image</span>: <span class=3D"hl=
js-function">url</span>(<span class=3D"hljs-string">"cancel.png"</span>);
}
<span class=3D"hljs-class">.button-custom</span> {
  <span class=3D"hljs-attribute">background-image</span>: <span class=3D"hl=
js-function">url</span>(<span class=3D"hljs-string">"custom.png"</span>);
}
</code></pre>
<h3 class=3D"docs-heading">Multiple <code>&amp;</code><span class=3D"anchor=
-target" id=3D"parent-selectors-feature-multiple-"></span>
<a href=3D"http://lesscss.cn/features/#parent-selectors-feature-multiple-" =
name=3D"parent-selectors-feature-multiple-" class=3D"anchor glyphicon glyph=
icon-link"></a></h3>
<p><code>&amp;</code> may appear more than once within a selector. This mak=
es it possible to repeatedly refer to a parent selector without repeating i=
ts name.</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.link</span> {
  <span class=3D"hljs-keyword">&amp;</span> + <span class=3D"hljs-keyword">=
&amp;</span> {
    <span class=3D"hljs-attribute">color</span>: red;
  }

  <span class=3D"hljs-keyword">&amp;</span> <span class=3D"hljs-keyword">&a=
mp;</span> {
    <span class=3D"hljs-attribute">color</span>: green;
  }

  <span class=3D"hljs-keyword">&amp;</span><span class=3D"hljs-keyword">&am=
p;</span> {
    <span class=3D"hljs-attribute">color</span>: blue;
  }

  <span class=3D"hljs-keyword">&amp;</span>, <span class=3D"hljs-keyword">&=
amp;</span><span class=3D"hljs-tag">ish</span> {
    <span class=3D"hljs-attribute">color</span>: cyan;
  }
}
</code></pre>
<p>will output:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.link</span> + <sp=
an class=3D"hljs-class">.link</span> {
  <span class=3D"hljs-attribute">color</span>: red;
}
<span class=3D"hljs-class">.link</span> <span class=3D"hljs-class">.link</s=
pan> {
  <span class=3D"hljs-attribute">color</span>: green;
}
<span class=3D"hljs-class">.link</span><span class=3D"hljs-class">.link</sp=
an> {
  <span class=3D"hljs-attribute">color</span>: blue;
}
<span class=3D"hljs-class">.link</span>, <span class=3D"hljs-class">.linkis=
h</span> {
  <span class=3D"hljs-attribute">color</span>: cyan;
}
</code></pre>
<p>Note that <code>&amp;</code> represents all parent selectors (not just t=
he nearest ancestor) so the following example:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.grand</span> {
  <span class=3D"hljs-class">.parent</span> {
    <span class=3D"hljs-keyword">&amp;</span> &gt; <span class=3D"hljs-keyw=
ord">&amp;</span> {
      <span class=3D"hljs-attribute">color</span>: red;
    }

    <span class=3D"hljs-keyword">&amp;</span> <span class=3D"hljs-keyword">=
&amp;</span> {
      <span class=3D"hljs-attribute">color</span>: green;
    }

    <span class=3D"hljs-keyword">&amp;</span><span class=3D"hljs-keyword">&=
amp;</span> {
      <span class=3D"hljs-attribute">color</span>: blue;
    }

    <span class=3D"hljs-keyword">&amp;</span>, <span class=3D"hljs-keyword"=
>&amp;</span><span class=3D"hljs-tag">ish</span> {
      <span class=3D"hljs-attribute">color</span>: cyan;
    }
  }
}
</code></pre>
<p>results in:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.grand</span> <spa=
n class=3D"hljs-class">.parent</span> &gt; <span class=3D"hljs-class">.gran=
d</span> <span class=3D"hljs-class">.parent</span> {
  <span class=3D"hljs-attribute">color</span>: red;
}
<span class=3D"hljs-class">.grand</span> <span class=3D"hljs-class">.parent=
</span> <span class=3D"hljs-class">.grand</span> <span class=3D"hljs-class"=
>.parent</span> {
  <span class=3D"hljs-attribute">color</span>: green;
}
<span class=3D"hljs-class">.grand</span> <span class=3D"hljs-class">.parent=
</span><span class=3D"hljs-class">.grand</span> <span class=3D"hljs-class">=
.parent</span> {
  <span class=3D"hljs-attribute">color</span>: blue;
}
<span class=3D"hljs-class">.grand</span> <span class=3D"hljs-class">.parent=
</span>,
<span class=3D"hljs-class">.grand</span> <span class=3D"hljs-class">.parent=
ish</span> {
  <span class=3D"hljs-attribute">color</span>: cyan;
}
</code></pre>
<h3 class=3D"docs-heading">Changing selector order<span class=3D"anchor-tar=
get" id=3D"parent-selectors-feature-changing-selector-order"></span>
<a href=3D"http://lesscss.cn/features/#parent-selectors-feature-changing-se=
lector-order" name=3D"parent-selectors-feature-changing-selector-order" cla=
ss=3D"anchor glyphicon glyphicon-link"></a></h3>
<p>It can be useful to prepend a selector to the inherited (parent) selecto=
rs.  This can be done by putting the <code>&amp;</code> after current selec=
tor.
For example, when using Modernizr, you might want to specify different rule=
s based on supported features:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-class">.header</span> {
  <span class=3D"hljs-class">.menu</span> {
    <span class=3D"hljs-attribute">border-radius</span>: <span class=3D"hlj=
s-number">5px</span>;
    <span class=3D"hljs-class">.no-borderradius</span> <span class=3D"hljs-=
keyword">&amp;</span> {
      <span class=3D"hljs-attribute">background-image</span>: <span class=
=3D"hljs-function">url</span>(<span class=3D"hljs-string">'images/button-ba=
ckground.png'</span>);
    }
  }
}
</code></pre>
<p>The selector <code>.no-borderradius &amp;</code> will prepend <code>.no-=
borderradius</code> to its parent <code>.header .menu</code> to form the<co=
de>.no-borderradius .header .menu</code> on output:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-class">.header</span> <sp=
an class=3D"hljs-class">.menu</span> {
  <span class=3D"hljs-attribute">border-radius</span>: <span class=3D"hljs-=
number">5px</span>;
}
<span class=3D"hljs-class">.no-borderradius</span> <span class=3D"hljs-clas=
s">.header</span> <span class=3D"hljs-class">.menu</span> {
  <span class=3D"hljs-attribute">background-image</span>: <span class=3D"hl=
js-function">url</span>(<span class=3D"hljs-string">'images/button-backgrou=
nd.png'</span>);
}
</code></pre>
<h3 class=3D"docs-heading">Combinatorial explosion<span class=3D"anchor-tar=
get" id=3D"parent-selectors-feature-combinatorial-explosion"></span>
<a href=3D"http://lesscss.cn/features/#parent-selectors-feature-combinatori=
al-explosion" name=3D"parent-selectors-feature-combinatorial-explosion" cla=
ss=3D"anchor glyphicon glyphicon-link"></a></h3>
<p><code>&amp;</code> can also be used to generate every possible permutati=
on of selectors in a comma separated list:</p>
<pre><code class=3D"lang-less"><span class=3D"hljs-tag">p</span>, <span cla=
ss=3D"hljs-tag">a</span>, <span class=3D"hljs-tag">ul</span>, <span class=
=3D"hljs-tag">li</span> {
  <span class=3D"hljs-attribute">border-top</span>: <span class=3D"hljs-num=
ber">2px</span> dotted <span class=3D"hljs-hexcolor">#366</span>;
  <span class=3D"hljs-keyword">&amp;</span> + <span class=3D"hljs-keyword">=
&amp;</span> {
    <span class=3D"hljs-attribute">border-top</span>: <span class=3D"hljs-n=
umber">0</span>;
  }
}
</code></pre>
<p>This expands to all possible (16) combinations of the specified elements=
:</p>
<pre><code class=3D"lang-css"><span class=3D"hljs-tag">p</span>,
<span class=3D"hljs-tag">a</span>,
<span class=3D"hljs-tag">ul</span>,
<span class=3D"hljs-tag">li</span> {
  <span class=3D"hljs-attribute">border-top</span>: <span class=3D"hljs-num=
ber">2px</span> dotted <span class=3D"hljs-hexcolor">#366</span>;
}
<span class=3D"hljs-tag">p</span> + <span class=3D"hljs-tag">p</span>,
<span class=3D"hljs-tag">p</span> + <span class=3D"hljs-tag">a</span>,
<span class=3D"hljs-tag">p</span> + <span class=3D"hljs-tag">ul</span>,
<span class=3D"hljs-tag">p</span> + <span class=3D"hljs-tag">li</span>,
<span class=3D"hljs-tag">a</span> + <span class=3D"hljs-tag">p</span>,
<span class=3D"hljs-tag">a</span> + <span class=3D"hljs-tag">a</span>,
<span class=3D"hljs-tag">a</span> + <span class=3D"hljs-tag">ul</span>,
<span class=3D"hljs-tag">a</span> + <span class=3D"hljs-tag">li</span>,
<span class=3D"hljs-tag">ul</span> + <span class=3D"hljs-tag">p</span>,
<span class=3D"hljs-tag">ul</span> + <span class=3D"hljs-tag">a</span>,
<span class=3D"hljs-tag">ul</span> + <span class=3D"hljs-tag">ul</span>,
<span class=3D"hljs-tag">ul</span> + <span class=3D"hljs-tag">li</span>,
<span class=3D"hljs-tag">li</span> + <span class=3D"hljs-tag">p</span>,
<span class=3D"hljs-tag">li</span> + <span class=3D"hljs-tag">a</span>,
<span class=3D"hljs-tag">li</span> + <span class=3D"hljs-tag">ul</span>,
<span class=3D"hljs-tag">li</span> + <span class=3D"hljs-tag">li</span> {
  <span class=3D"hljs-attribute">border-top</span>: <span class=3D"hljs-num=
ber">0</span>;
}
</code></pre>


      <br>
    </div>
   =20

  </div>

</div>
        </div>
      </div>
    </div>

   =20
    <footer class=3D"footer" role=3D"contentinfo">
  <div class=3D"container">
   =20

    <p>Less.js =E5=8F=8A=E5=85=B6=E6=96=87=E6=A1=A3=E7=94=B1 <a href=3D"htt=
p://lesscss.cn/about/#team">Less =E6=A0=B8=E5=BF=83=E5=BC=80=E5=8F=91=E5=9B=
=A2=E9=98=9F</a>=E7=BB=B4=E6=8A=A4=E3=80=82</p>
    <p>=E6=96=87=E6=A1=A3=E6=BA=90=E4=BB=A3=E7=A0=81=E4=BD=BF=E7=94=A8 <a r=
el=3D"nofollow" target=3D"_blank" href=3D"https://github.com/less/less-docs=
/blob/master/LICENSE-MIT">MIT =E8=AE=B8=E5=8F=AF=E8=AF=81</a>=EF=BC=8C=E6=
=96=87=E6=A1=A3=E4=BD=BF=E7=94=A8 <a rel=3D"nofollow" target=3D"_blank" hre=
f=3D"http://creativecommons.org/licenses/by/3.0/">CC BY 3.0 =E8=AE=B8=E5=8F=
=AF=E8=AF=81</a>=E3=80=82</p>
    <ul class=3D"footer-links">
      <li>=E5=BD=93=E5=89=8D=E7=89=88=E6=9C=AC v2.5.1</li>
     =20
      <li class=3D"muted">=C2=B7</li>
      <li><a rel=3D"nofollow" target=3D"_blank" href=3D"https://github.com/=
less/less.js/issues">Less.js =E8=AE=A8=E8=AE=BA</a></li>
      <li class=3D"muted">=C2=B7</li>
      <li><a rel=3D"nofollow" target=3D"_blank" href=3D"https://github.com/=
less/less-docs/issues?&amp;state=3Dopen">Less =E6=96=87=E6=A1=A3=E8=AE=A8=
=E8=AE=BA</a></li>
      <li class=3D"muted">=C2=B7</li>
      <li><a rel=3D"nofollow" target=3D"_blank" href=3D"https://github.com/=
less/less.js/blob/master/CHANGELOG.md">=E6=9B=B4=E6=96=B0=E6=97=A5=E5=BF=97=
</a></li>
     =20
    </ul>
  </div>
</footer>


   =20
   =20




 =20
</body></html>
------=_NextPart_000_25A7_00BE17D0.638B6235
Content-Type: application/x-font-woff
Content-Transfer-Encoding: base64
Content-Location: http://cdn.staticfile.org/twitter-bootstrap/3.0.3/fonts/glyphicons-halflings-regular.woff

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
B3+Onzpj3uxpmTB35vRutztluJO7/20x+oEbt3B7bulWbu02buv23cnDLUaGW42MG8ydM2vBm9pD
Gh9uugseGniJgZcYeImBlxh4+MDDBx4+8PCBhw+60YlOdKKT0tWLXvSiF71Cr9Ar9Aq9Qq/QK/QK
vUKv0Ovp9fR6ej29nl5Pr6fX0+vp9fRKvVKv1Cv1Sr1Sr9Qr9Uq9Uq/Sq/QqvUqv0qv0Kr1Kr9Kr
9Gq9WqfWqXVqnVqn1ql1ap1Gp/FejV6j1+g1eo1eo9foNXqtXqvX6rV6rV6r1+q1eq1eq9fX6+v1
9fp6fb2+Xl+vP/Ri97H72H2GP77RrdzaXfi91h3eI/Yf+4/9x/5j/7H/2H/sP/Yf+4/9x/5j/7H/
2H/sP/Yf+4/9x/5j/7H/2H/sP/Yf+4/9x/5j/7H/2H/sP/Yf+4/9x/5j/7H72H3sPnYfu4/dx+5j
97H72H3sPnYfu0+tZ/+x/9h/7D/2H/uP/cf+Y/+x/9h/7D/2H/uP/cf+Y/+x/9h/7D/2H/uP/cf+
Y/+x/9h/7D/2H/uP/cf+Y/+x/yzsvq/THzqj/x7/AibTMyUAALgB/4WwAY0AS7AIUFixAQGOWbFG
BitYIbAQWUuwFFJYIbCAWR2wBitcWFmwFCsAAAABUjdh/QAA
------=_NextPart_000_25A7_00BE17D0.638B6235
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://s.nodejs.cn/less/index.css

article, aside, details, figcaption, figure, footer, header, hgroup, main, =
nav, section, summary { display: block; }

audio, canvas, video { display: inline-block; }

audio:not([controls]) { display: none; height: 0px; }

[hidden], template { display: none; }

html { font-family: sans-serif; }

body { margin: 0px; }

a { background: transparent; }

a:focus { outline: dotted thin; }

a:active, a:hover { outline: 0px; }

h1 { font-size: 2em; margin: 0.67em 0px; }

abbr[title] { border-bottom-width: 1px; border-bottom-style: dotted; }

b, strong { font-weight: bold; }

dfn { font-style: italic; }

hr { box-sizing: content-box; height: 0px; }

mark { color: rgb(0, 0, 0); background: rgb(255, 255, 0); }

code, kbd, pre, samp { font-family: monospace, serif; font-size: 1em; }

pre { white-space: pre-wrap; }

q { quotes: =E2=80=9C, =E2=80=9D, =E2=80=98, =E2=80=99; }

small { font-size: 80%; }

sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-ali=
gn: baseline; }

sup { top: -0.5em; }

sub { bottom: -0.25em; }

img { border: 0px; }

svg:not(:root) { overflow: hidden; }

figure { margin: 0px; }

fieldset { border: 1px solid rgb(192, 192, 192); margin: 0px 2px; padding: =
0.35em 0.625em 0.75em; }

legend { border: 0px; padding: 0px; }

button, input, select, textarea { font-family: inherit; font-size: 100%; ma=
rgin: 0px; }

button, input { line-height: normal; }

button, select { text-transform: none; }

button, html input[type=3D"button"], input[type=3D"reset"], input[type=3D"s=
ubmit"] { -webkit-appearance: button; cursor: pointer; }

button[disabled], html input[disabled] { cursor: default; }

input[type=3D"checkbox"], input[type=3D"radio"] { box-sizing: border-box; p=
adding: 0px; }

input[type=3D"search"] { -webkit-appearance: textfield; box-sizing: content=
-box; }

input[type=3D"search"]::-webkit-search-cancel-button, input[type=3D"search"=
]::-webkit-search-decoration { -webkit-appearance: none; }

textarea { overflow: auto; vertical-align: top; }

table { border-collapse: collapse; border-spacing: 0px; }

@media print {=20
  * { text-shadow: none !important; color: rgb(0, 0, 0) !important; box-sha=
dow: none !important; background: transparent !important; }
  a, a:visited { text-decoration: underline; }
  a[href]::after { content: ' (', attr(href), ')'; }
  abbr[title]::after { content: ' (', attr(title), ')'; }
  .ir a::after, a[href^=3D"javascript:"]::after, a[href^=3D"#"]::after { co=
ntent: ''; }
  pre, blockquote { border: 1px solid rgb(153, 153, 153); page-break-inside=
: avoid; }
  thead { display: table-header-group; }
  tr, img { page-break-inside: avoid; }
  img { max-width: 100% !important; }
  @page { margin: 2cm 0.5cm; }
  p, h2, h3 { orphans: 3; widows: 3; }
  h2, h3 { page-break-after: avoid; }
  .navbar { display: none; }
  .table td, .table th { background-color: rgb(255, 255, 255) !important; }
  .btn > .caret, .dropup > .btn > .caret { border-top-color: rgb(0, 0, 0) !=
important; }
  .label { border: 1px solid rgb(0, 0, 0); }
  .table { border-collapse: collapse !important; }
  .table-bordered th, .table-bordered td { border: 1px solid rgb(221, 221, =
221) !important; }
}

p { margin: 0px 0px 10px; }

small, .small { font-size: 85%; }

cite { font-style: normal; }

.text-muted { color: rgb(153, 153, 153); }

.text-primary { color: rgb(66, 139, 202); }

.text-primary:hover { color: rgb(48, 113, 169); }

.text-warning { color: rgb(192, 152, 83); }

.text-warning:hover { color: rgb(164, 126, 60); }

.text-danger { color: rgb(185, 74, 72); }

.text-danger:hover { color: rgb(149, 59, 57); }

.text-success { color: rgb(70, 136, 71); }

.text-success:hover { color: rgb(53, 102, 53); }

.text-info { color: rgb(58, 135, 173); }

.text-info:hover { color: rgb(45, 105, 135); }

.text-left { text-align: left; }

.text-right { text-align: right; }

.text-center { text-align: center; }

h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6 { font-family: 'Open S=
ans', 'Helvetica Neue', Helvetica, Arial, 'Microsoft YaHei', sans-serif, 'O=
pen Sans', 'Helvetica Neue', Helvetica, Arial, 'Microsoft YaHei', sans-seri=
f; font-weight: 500; line-height: 1.1; color: inherit; }

h1 small, h2 small, h3 small, h4 small, h5 small, h6 small, .h1 small, .h2 =
small, .h3 small, .h4 small, .h5 small, .h6 small, h1 .small, h2 .small, h3=
 .small, h4 .small, h5 .small, h6 .small, .h1 .small, .h2 .small, .h3 .smal=
l, .h4 .small, .h5 .small, .h6 .small { font-weight: normal; line-height: 1=
; color: rgb(153, 153, 153); }

h1, h2, h3 { margin-top: 20px; margin-bottom: 10px; }

h1 small, h2 small, h3 small, h1 .small, h2 .small, h3 .small { font-size: =
65%; }

h4, h5, h6 { margin-top: 10px; margin-bottom: 10px; }

h4 small, h5 small, h6 small, h4 .small, h5 .small, h6 .small { font-size: =
75%; }

h1, .h1 { font-size: 38px; }

h2, .h2 { font-size: 31px; }

h3, .h3 { font-size: 24px; }

h4, .h4 { font-size: 18px; }

h5, .h5 { font-size: 14px; }

h6, .h6 { font-size: 12px; }

.page-header { padding-bottom: 9px; margin: 40px 0px 20px; border-bottom-wi=
dth: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 23=
8); }

ul, ol { margin-top: 0px; margin-bottom: 10px; }

ul ul, ol ul, ul ol, ol ol { margin-bottom: 0px; }

.list-unstyled { padding-left: 0px; list-style: none; }

.list-inline { padding-left: 0px; list-style: none; }

.list-inline > li { display: inline-block; padding-left: 5px; padding-right=
: 5px; }

dl { margin-bottom: 20px; }

dt, dd { line-height: 1.42857143; }

dt { font-weight: bold; }

dd { margin-left: 0px; }

@media (min-width: 768px) {=20
  .dl-horizontal dt { float: left; width: 160px; clear: left; text-align: r=
ight; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; }
  .dl-horizontal dd { margin-left: 180px; }
  .dl-horizontal dd::before, .dl-horizontal dd::after { content: ' '; displ=
ay: table; }
  .dl-horizontal dd::after { clear: both; }
  .dl-horizontal dd::before, .dl-horizontal dd::after { content: ' '; displ=
ay: table; }
  .dl-horizontal dd::after { clear: both; }
}

abbr[title], abbr[data-original-title] { cursor: help; border-bottom-width:=
 1px; border-bottom-style: dotted; border-bottom-color: rgb(153, 153, 153);=
 }

abbr.initialism { font-size: 90%; text-transform: uppercase; }

blockquote { padding: 10px 20px; margin: 0px 0px 20px; border-left-width: 4=
px; border-left-style: solid; border-left-color: rgb(238, 238, 238); }

blockquote p { color: rgb(122, 122, 122); font-weight: 300; line-height: 1.=
25; }

blockquote p:last-child { margin-bottom: 0px; }

blockquote small { display: block; line-height: 1.42857143; color: rgb(153,=
 153, 153); }

blockquote small::before { content: '=E2=80=94=C2=A0'; }

blockquote.pull-right { padding-right: 15px; padding-left: 0px; border-righ=
t-width: 5px; border-right-style: solid; border-right-color: rgb(238, 238, =
238); border-left-width: 0px; }

blockquote.pull-right p, blockquote.pull-right small, blockquote.pull-right=
 .small { text-align: right; }

blockquote.pull-right small::before, blockquote.pull-right .small::before {=
 content: ''; }

blockquote.pull-right small::after, blockquote.pull-right .small::after { c=
ontent: '=C2=A0=E2=80=94'; }

blockquote::before, blockquote::after { content: ''; }

address { margin-bottom: 20px; font-style: normal; line-height: 1.42857143;=
 }

code, kbd, pre, samp { font-family: Monaco, Menlo, Consolas, 'Courier New',=
 monospace; }

code { padding: 2px 4px; font-size: 90%; color: rgb(199, 37, 78); white-spa=
ce: nowrap; border-top-left-radius: 4px; border-top-right-radius: 4px; bord=
er-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-col=
or: rgb(249, 242, 244); }

pre { display: block; padding: 9.5px; margin: 0px 0px 10px; font-size: 13px=
; line-height: 1.42857143; word-break: break-all; word-wrap: break-word; co=
lor: rgb(51, 51, 51); border: 1px solid rgb(204, 204, 204); border-top-left=
-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px=
; border-bottom-left-radius: 4px; background-color: rgb(245, 245, 245); }

pre code { padding: 0px; font-size: inherit; color: inherit; white-space: p=
re-wrap; border-top-left-radius: 0px; border-top-right-radius: 0px; border-=
bottom-right-radius: 0px; border-bottom-left-radius: 0px; background-color:=
 transparent; }

.pre-scrollable { max-height: 340px; overflow-y: scroll; }

.container { margin-right: auto; margin-left: auto; padding-left: 15px; pad=
ding-right: 15px; }

.container::before, .container::after { content: ' '; display: table; }

.container::after { clear: both; }

.container::before, .container::after { content: ' '; display: table; }

.container::after { clear: both; }

.row { margin-left: -15px; margin-right: -15px; }

.row::before, .row::after { content: ' '; display: table; }

.row::after { clear: both; }

.row::before, .row::after { content: ' '; display: table; }

.row::after { clear: both; }

.col-xs-1, .col-sm-1, .col-md-1, .col-lg-1, .col-xs-2, .col-sm-2, .col-md-2=
, .col-lg-2, .col-xs-3, .col-sm-3, .col-md-3, .col-lg-3, .col-xs-4, .col-sm=
-4, .col-md-4, .col-lg-4, .col-xs-5, .col-sm-5, .col-md-5, .col-lg-5, .col-=
xs-6, .col-sm-6, .col-md-6, .col-lg-6, .col-xs-7, .col-sm-7, .col-md-7, .co=
l-lg-7, .col-xs-8, .col-sm-8, .col-md-8, .col-lg-8, .col-xs-9, .col-sm-9, .=
col-md-9, .col-lg-9, .col-xs-10, .col-sm-10, .col-md-10, .col-lg-10, .col-x=
s-11, .col-sm-11, .col-md-11, .col-lg-11, .col-xs-12, .col-sm-12, .col-md-1=
2, .col-lg-12 { position: relative; min-height: 1px; padding-left: 15px; pa=
dding-right: 15px; }

.col-xs-1, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7=
, .col-xs-8, .col-xs-9, .col-xs-10, .col-xs-11 { float: left; }

.col-xs-12 { width: 100%; }

.col-xs-11 { width: 91.66666667%; }

.col-xs-10 { width: 83.33333333%; }

.col-xs-9 { width: 75%; }

.col-xs-8 { width: 66.66666667%; }

.col-xs-7 { width: 58.33333333%; }

.col-xs-6 { width: 50%; }

.col-xs-5 { width: 41.66666667%; }

.col-xs-4 { width: 33.33333333%; }

.col-xs-3 { width: 25%; }

.col-xs-2 { width: 16.66666667%; }

.col-xs-1 { width: 8.33333333%; }

.col-xs-pull-12 { right: 100%; }

.col-xs-pull-11 { right: 91.66666667%; }

.col-xs-pull-10 { right: 83.33333333%; }

.col-xs-pull-9 { right: 75%; }

.col-xs-pull-8 { right: 66.66666667%; }

.col-xs-pull-7 { right: 58.33333333%; }

.col-xs-pull-6 { right: 50%; }

.col-xs-pull-5 { right: 41.66666667%; }

.col-xs-pull-4 { right: 33.33333333%; }

.col-xs-pull-3 { right: 25%; }

.col-xs-pull-2 { right: 16.66666667%; }

.col-xs-pull-1 { right: 8.33333333%; }

.col-xs-push-12 { left: 100%; }

.col-xs-push-11 { left: 91.66666667%; }

.col-xs-push-10 { left: 83.33333333%; }

.col-xs-push-9 { left: 75%; }

.col-xs-push-8 { left: 66.66666667%; }

.col-xs-push-7 { left: 58.33333333%; }

.col-xs-push-6 { left: 50%; }

.col-xs-push-5 { left: 41.66666667%; }

.col-xs-push-4 { left: 33.33333333%; }

.col-xs-push-3 { left: 25%; }

.col-xs-push-2 { left: 16.66666667%; }

.col-xs-push-1 { left: 8.33333333%; }

.col-xs-offset-12 { margin-left: 100%; }

.col-xs-offset-11 { margin-left: 91.66666667%; }

.col-xs-offset-10 { margin-left: 83.33333333%; }

.col-xs-offset-9 { margin-left: 75%; }

.col-xs-offset-8 { margin-left: 66.66666667%; }

.col-xs-offset-7 { margin-left: 58.33333333%; }

.col-xs-offset-6 { margin-left: 50%; }

.col-xs-offset-5 { margin-left: 41.66666667%; }

.col-xs-offset-4 { margin-left: 33.33333333%; }

.col-xs-offset-3 { margin-left: 25%; }

.col-xs-offset-2 { margin-left: 16.66666667%; }

.col-xs-offset-1 { margin-left: 8.33333333%; }

@media (min-width: 768px) {=20
  .container { width: 750px; }
  .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm=
-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11 { float: left; }
  .col-sm-12 { width: 100%; }
  .col-sm-11 { width: 91.66666667%; }
  .col-sm-10 { width: 83.33333333%; }
  .col-sm-9 { width: 75%; }
  .col-sm-8 { width: 66.66666667%; }
  .col-sm-7 { width: 58.33333333%; }
  .col-sm-6 { width: 50%; }
  .col-sm-5 { width: 41.66666667%; }
  .col-sm-4 { width: 33.33333333%; }
  .col-sm-3 { width: 25%; }
  .col-sm-2 { width: 16.66666667%; }
  .col-sm-1 { width: 8.33333333%; }
  .col-sm-pull-12 { right: 100%; }
  .col-sm-pull-11 { right: 91.66666667%; }
  .col-sm-pull-10 { right: 83.33333333%; }
  .col-sm-pull-9 { right: 75%; }
  .col-sm-pull-8 { right: 66.66666667%; }
  .col-sm-pull-7 { right: 58.33333333%; }
  .col-sm-pull-6 { right: 50%; }
  .col-sm-pull-5 { right: 41.66666667%; }
  .col-sm-pull-4 { right: 33.33333333%; }
  .col-sm-pull-3 { right: 25%; }
  .col-sm-pull-2 { right: 16.66666667%; }
  .col-sm-pull-1 { right: 8.33333333%; }
  .col-sm-push-12 { left: 100%; }
  .col-sm-push-11 { left: 91.66666667%; }
  .col-sm-push-10 { left: 83.33333333%; }
  .col-sm-push-9 { left: 75%; }
  .col-sm-push-8 { left: 66.66666667%; }
  .col-sm-push-7 { left: 58.33333333%; }
  .col-sm-push-6 { left: 50%; }
  .col-sm-push-5 { left: 41.66666667%; }
  .col-sm-push-4 { left: 33.33333333%; }
  .col-sm-push-3 { left: 25%; }
  .col-sm-push-2 { left: 16.66666667%; }
  .col-sm-push-1 { left: 8.33333333%; }
  .col-sm-offset-12 { margin-left: 100%; }
  .col-sm-offset-11 { margin-left: 91.66666667%; }
  .col-sm-offset-10 { margin-left: 83.33333333%; }
  .col-sm-offset-9 { margin-left: 75%; }
  .col-sm-offset-8 { margin-left: 66.66666667%; }
  .col-sm-offset-7 { margin-left: 58.33333333%; }
  .col-sm-offset-6 { margin-left: 50%; }
  .col-sm-offset-5 { margin-left: 41.66666667%; }
  .col-sm-offset-4 { margin-left: 33.33333333%; }
  .col-sm-offset-3 { margin-left: 25%; }
  .col-sm-offset-2 { margin-left: 16.66666667%; }
  .col-sm-offset-1 { margin-left: 8.33333333%; }
}

@media (min-width: 992px) {=20
  .container { width: 970px; }
  .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md=
-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11 { float: left; }
  .col-md-12 { width: 100%; }
  .col-md-11 { width: 91.66666667%; }
  .col-md-10 { width: 83.33333333%; }
  .col-md-9 { width: 75%; }
  .col-md-8 { width: 66.66666667%; }
  .col-md-7 { width: 58.33333333%; }
  .col-md-6 { width: 50%; }
  .col-md-5 { width: 41.66666667%; }
  .col-md-4 { width: 33.33333333%; }
  .col-md-3 { width: 25%; }
  .col-md-2 { width: 16.66666667%; }
  .col-md-1 { width: 8.33333333%; }
  .col-md-pull-12 { right: 100%; }
  .col-md-pull-11 { right: 91.66666667%; }
  .col-md-pull-10 { right: 83.33333333%; }
  .col-md-pull-9 { right: 75%; }
  .col-md-pull-8 { right: 66.66666667%; }
  .col-md-pull-7 { right: 58.33333333%; }
  .col-md-pull-6 { right: 50%; }
  .col-md-pull-5 { right: 41.66666667%; }
  .col-md-pull-4 { right: 33.33333333%; }
  .col-md-pull-3 { right: 25%; }
  .col-md-pull-2 { right: 16.66666667%; }
  .col-md-pull-1 { right: 8.33333333%; }
  .col-md-push-12 { left: 100%; }
  .col-md-push-11 { left: 91.66666667%; }
  .col-md-push-10 { left: 83.33333333%; }
  .col-md-push-9 { left: 75%; }
  .col-md-push-8 { left: 66.66666667%; }
  .col-md-push-7 { left: 58.33333333%; }
  .col-md-push-6 { left: 50%; }
  .col-md-push-5 { left: 41.66666667%; }
  .col-md-push-4 { left: 33.33333333%; }
  .col-md-push-3 { left: 25%; }
  .col-md-push-2 { left: 16.66666667%; }
  .col-md-push-1 { left: 8.33333333%; }
  .col-md-offset-12 { margin-left: 100%; }
  .col-md-offset-11 { margin-left: 91.66666667%; }
  .col-md-offset-10 { margin-left: 83.33333333%; }
  .col-md-offset-9 { margin-left: 75%; }
  .col-md-offset-8 { margin-left: 66.66666667%; }
  .col-md-offset-7 { margin-left: 58.33333333%; }
  .col-md-offset-6 { margin-left: 50%; }
  .col-md-offset-5 { margin-left: 41.66666667%; }
  .col-md-offset-4 { margin-left: 33.33333333%; }
  .col-md-offset-3 { margin-left: 25%; }
  .col-md-offset-2 { margin-left: 16.66666667%; }
  .col-md-offset-1 { margin-left: 8.33333333%; }
}

@media (min-width: 1200px) {=20
  .container { width: 1170px; }
  .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg=
-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11 { float: left; }
  .col-lg-12 { width: 100%; }
  .col-lg-11 { width: 91.66666667%; }
  .col-lg-10 { width: 83.33333333%; }
  .col-lg-9 { width: 75%; }
  .col-lg-8 { width: 66.66666667%; }
  .col-lg-7 { width: 58.33333333%; }
  .col-lg-6 { width: 50%; }
  .col-lg-5 { width: 41.66666667%; }
  .col-lg-4 { width: 33.33333333%; }
  .col-lg-3 { width: 25%; }
  .col-lg-2 { width: 16.66666667%; }
  .col-lg-1 { width: 8.33333333%; }
  .col-lg-pull-12 { right: 100%; }
  .col-lg-pull-11 { right: 91.66666667%; }
  .col-lg-pull-10 { right: 83.33333333%; }
  .col-lg-pull-9 { right: 75%; }
  .col-lg-pull-8 { right: 66.66666667%; }
  .col-lg-pull-7 { right: 58.33333333%; }
  .col-lg-pull-6 { right: 50%; }
  .col-lg-pull-5 { right: 41.66666667%; }
  .col-lg-pull-4 { right: 33.33333333%; }
  .col-lg-pull-3 { right: 25%; }
  .col-lg-pull-2 { right: 16.66666667%; }
  .col-lg-pull-1 { right: 8.33333333%; }
  .col-lg-push-12 { left: 100%; }
  .col-lg-push-11 { left: 91.66666667%; }
  .col-lg-push-10 { left: 83.33333333%; }
  .col-lg-push-9 { left: 75%; }
  .col-lg-push-8 { left: 66.66666667%; }
  .col-lg-push-7 { left: 58.33333333%; }
  .col-lg-push-6 { left: 50%; }
  .col-lg-push-5 { left: 41.66666667%; }
  .col-lg-push-4 { left: 33.33333333%; }
  .col-lg-push-3 { left: 25%; }
  .col-lg-push-2 { left: 16.66666667%; }
  .col-lg-push-1 { left: 8.33333333%; }
  .col-lg-offset-12 { margin-left: 100%; }
  .col-lg-offset-11 { margin-left: 91.66666667%; }
  .col-lg-offset-10 { margin-left: 83.33333333%; }
  .col-lg-offset-9 { margin-left: 75%; }
  .col-lg-offset-8 { margin-left: 66.66666667%; }
  .col-lg-offset-7 { margin-left: 58.33333333%; }
  .col-lg-offset-6 { margin-left: 50%; }
  .col-lg-offset-5 { margin-left: 41.66666667%; }
  .col-lg-offset-4 { margin-left: 33.33333333%; }
  .col-lg-offset-3 { margin-left: 25%; }
  .col-lg-offset-2 { margin-left: 16.66666667%; }
  .col-lg-offset-1 { margin-left: 8.33333333%; }
}

table { max-width: 100%; background-color: transparent; }

th { text-align: left; }

.table { width: 100%; margin-bottom: 20px; }

.table > thead > tr > th, .table > tbody > tr > th, .table > tfoot > tr > t=
h, .table > thead > tr > td, .table > tbody > tr > td, .table > tfoot > tr =
> td { padding: 8px; line-height: 1.42857143; vertical-align: top; border-t=
op-width: 1px; border-top-style: solid; border-top-color: rgb(221, 221, 221=
); }

.table > thead > tr > th { vertical-align: bottom; border-bottom-width: 2px=
; border-bottom-style: solid; border-bottom-color: rgb(221, 221, 221); }

.table > caption + thead > tr:first-child > th, .table > colgroup + thead >=
 tr:first-child > th, .table > thead:first-child > tr:first-child > th, .ta=
ble > caption + thead > tr:first-child > td, .table > colgroup + thead > tr=
:first-child > td, .table > thead:first-child > tr:first-child > td { borde=
r-top-width: 0px; }

.table > tbody + tbody { border-top-width: 2px; border-top-style: solid; bo=
rder-top-color: rgb(221, 221, 221); }

.table .table { background-color: rgb(247, 247, 247); }

.table-condensed > thead > tr > th, .table-condensed > tbody > tr > th, .ta=
ble-condensed > tfoot > tr > th, .table-condensed > thead > tr > td, .table=
-condensed > tbody > tr > td, .table-condensed > tfoot > tr > td { padding:=
 5px; }

.table-bordered { border: 1px solid rgb(221, 221, 221); }

.table-bordered > thead > tr > th, .table-bordered > tbody > tr > th, .tabl=
e-bordered > tfoot > tr > th, .table-bordered > thead > tr > td, .table-bor=
dered > tbody > tr > td, .table-bordered > tfoot > tr > td { border: 1px so=
lid rgb(221, 221, 221); }

.table-bordered > thead > tr > th, .table-bordered > thead > tr > td { bord=
er-bottom-width: 2px; }

.table-striped > tbody > tr:nth-child(odd) > td, .table-striped > tbody > t=
r:nth-child(odd) > th { background-color: rgb(249, 249, 249); }

.table-hover > tbody > tr:hover > td, .table-hover > tbody > tr:hover > th =
{ background-color: rgb(245, 245, 245); }

table col[class*=3D"col-"] { float: none; display: table-column; }

table td[class*=3D"col-"], table th[class*=3D"col-"] { float: none; display=
: table-cell; }

.table > thead > tr > td.active, .table > tbody > tr > td.active, .table > =
tfoot > tr > td.active, .table > thead > tr > th.active, .table > tbody > t=
r > th.active, .table > tfoot > tr > th.active, .table > thead > tr.active =
> td, .table > tbody > tr.active > td, .table > tfoot > tr.active > td, .ta=
ble > thead > tr.active > th, .table > tbody > tr.active > th, .table > tfo=
ot > tr.active > th { background-color: rgb(245, 245, 245); }

.table > thead > tr > td.success, .table > tbody > tr > td.success, .table =
> tfoot > tr > td.success, .table > thead > tr > th.success, .table > tbody=
 > tr > th.success, .table > tfoot > tr > th.success, .table > thead > tr.s=
uccess > td, .table > tbody > tr.success > td, .table > tfoot > tr.success =
> td, .table > thead > tr.success > th, .table > tbody > tr.success > th, .=
table > tfoot > tr.success > th { border-color: rgb(214, 233, 198); backgro=
und-color: rgb(223, 240, 216); }

.table-hover > tbody > tr > td.success:hover, .table-hover > tbody > tr > t=
h.success:hover, .table-hover > tbody > tr.success:hover > td, .table-hover=
 > tbody > tr.success:hover > th { border-color: rgb(201, 226, 179); backgr=
ound-color: rgb(208, 233, 198); }

.table > thead > tr > td.danger, .table > tbody > tr > td.danger, .table > =
tfoot > tr > td.danger, .table > thead > tr > th.danger, .table > tbody > t=
r > th.danger, .table > tfoot > tr > th.danger, .table > thead > tr.danger =
> td, .table > tbody > tr.danger > td, .table > tfoot > tr.danger > td, .ta=
ble > thead > tr.danger > th, .table > tbody > tr.danger > th, .table > tfo=
ot > tr.danger > th { border-color: rgb(235, 204, 209); background-color: r=
gb(242, 222, 222); }

.table-hover > tbody > tr > td.danger:hover, .table-hover > tbody > tr > th=
.danger:hover, .table-hover > tbody > tr.danger:hover > td, .table-hover > =
tbody > tr.danger:hover > th { border-color: rgb(228, 185, 192); background=
-color: rgb(235, 204, 204); }

.table > thead > tr > td.warning, .table > tbody > tr > td.warning, .table =
> tfoot > tr > td.warning, .table > thead > tr > th.warning, .table > tbody=
 > tr > th.warning, .table > tfoot > tr > th.warning, .table > thead > tr.w=
arning > td, .table > tbody > tr.warning > td, .table > tfoot > tr.warning =
> td, .table > thead > tr.warning > th, .table > tbody > tr.warning > th, .=
table > tfoot > tr.warning > th { border-color: rgb(250, 235, 204); backgro=
und-color: rgb(252, 248, 227); }

.table-hover > tbody > tr > td.warning:hover, .table-hover > tbody > tr > t=
h.warning:hover, .table-hover > tbody > tr.warning:hover > td, .table-hover=
 > tbody > tr.warning:hover > th { border-color: rgb(247, 225, 181); backgr=
ound-color: rgb(250, 242, 204); }

@media (max-width: 767px) {=20
  .table-responsive { width: 100%; margin-bottom: 15px; overflow-y: hidden;=
 overflow-x: scroll; border: 1px solid rgb(221, 221, 221); }
  .table-responsive > .table { margin-bottom: 0px; }
  .table-responsive > .table > thead > tr > th, .table-responsive > .table =
> tbody > tr > th, .table-responsive > .table > tfoot > tr > th, .table-res=
ponsive > .table > thead > tr > td, .table-responsive > .table > tbody > tr=
 > td, .table-responsive > .table > tfoot > tr > td { white-space: nowrap; =
}
  .table-responsive > .table-bordered { border: 0px; }
  .table-responsive > .table-bordered > thead > tr > th:first-child, .table=
-responsive > .table-bordered > tbody > tr > th:first-child, .table-respons=
ive > .table-bordered > tfoot > tr > th:first-child, .table-responsive > .t=
able-bordered > thead > tr > td:first-child, .table-responsive > .table-bor=
dered > tbody > tr > td:first-child, .table-responsive > .table-bordered > =
tfoot > tr > td:first-child { border-left-width: 0px; }
  .table-responsive > .table-bordered > thead > tr > th:last-child, .table-=
responsive > .table-bordered > tbody > tr > th:last-child, .table-responsiv=
e > .table-bordered > tfoot > tr > th:last-child, .table-responsive > .tabl=
e-bordered > thead > tr > td:last-child, .table-responsive > .table-bordere=
d > tbody > tr > td:last-child, .table-responsive > .table-bordered > tfoot=
 > tr > td:last-child { border-right-width: 0px; }
  .table-responsive > .table-bordered > tbody > tr:last-child > th, .table-=
responsive > .table-bordered > tfoot > tr:last-child > th, .table-responsiv=
e > .table-bordered > tbody > tr:last-child > td, .table-responsive > .tabl=
e-bordered > tfoot > tr:last-child > td { border-bottom-width: 0px; }
}

fieldset { padding: 0px; margin: 0px; border: 0px; }

legend { display: block; width: 100%; padding: 0px; margin-bottom: 20px; fo=
nt-size: 21px; line-height: inherit; color: rgb(51, 51, 51); border-width: =
0px 0px 1px; border-bottom-style: solid; border-bottom-color: rgb(229, 229,=
 229); }

label { display: inline-block; margin-bottom: 5px; font-weight: bold; }

input[type=3D"search"] { box-sizing: border-box; }

input[type=3D"radio"], input[type=3D"checkbox"] { margin: 4px 0px 0px; line=
-height: normal; }

input[type=3D"file"] { display: block; }

select[multiple], select[size] { height: auto; }

select optgroup { font-size: inherit; font-style: inherit; font-family: inh=
erit; }

input[type=3D"file"]:focus, input[type=3D"radio"]:focus, input[type=3D"chec=
kbox"]:focus { outline: -webkit-focus-ring-color auto 5px; outline-offset: =
-2px; }

input[type=3D"number"]::-webkit-outer-spin-button, input[type=3D"number"]::=
-webkit-inner-spin-button { height: auto; }

output { display: block; padding-top: 7px; font-size: 14px; line-height: 1.=
42857143; color: rgb(85, 85, 85); vertical-align: middle; }

.form-control::-webkit-input-placeholder { color: rgb(153, 153, 153); }

.form-control { display: block; width: 100%; height: 34px; padding: 6px 12p=
x; font-size: 14px; line-height: 1.42857143; color: rgb(85, 85, 85); vertic=
al-align: middle; border: 1px solid rgb(204, 204, 204); border-top-left-rad=
ius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; bo=
rder-bottom-left-radius: 4px; -webkit-box-shadow: rgba(0, 0, 0, 0.0745098) =
0px 1px 1px inset; box-shadow: rgba(0, 0, 0, 0.0745098) 0px 1px 1px inset; =
transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out; -=
webkit-transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in=
-out; background-image: none; background-color: rgb(255, 255, 255); }

.form-control:focus { border-color: rgb(102, 175, 233); outline: 0px; -webk=
it-box-shadow: rgba(0, 0, 0, 0.0745098) 0px 1px 1px inset, rgba(102, 175, 2=
33, 0.6) 0px 0px 8px; box-shadow: rgba(0, 0, 0, 0.0745098) 0px 1px 1px inse=
t, rgba(102, 175, 233, 0.6) 0px 0px 8px; }

.form-control[disabled], .form-control[readonly], fieldset[disabled] .form-=
control { cursor: not-allowed; background-color: rgb(238, 238, 238); }

textarea.form-control { height: auto; }

.form-group { margin-bottom: 15px; }

.radio, .checkbox { display: block; min-height: 20px; margin-top: 10px; mar=
gin-bottom: 10px; padding-left: 20px; vertical-align: middle; }

.radio label, .checkbox label { display: inline; margin-bottom: 0px; font-w=
eight: normal; cursor: pointer; }

.radio input[type=3D"radio"], .radio-inline input[type=3D"radio"], .checkbo=
x input[type=3D"checkbox"], .checkbox-inline input[type=3D"checkbox"] { flo=
at: left; margin-left: -20px; }

.radio + .radio, .checkbox + .checkbox { margin-top: -5px; }

.radio-inline, .checkbox-inline { display: inline-block; padding-left: 20px=
; margin-bottom: 0px; vertical-align: middle; font-weight: normal; cursor: =
pointer; }

.radio-inline + .radio-inline, .checkbox-inline + .checkbox-inline { margin=
-top: 0px; margin-left: 10px; }

input[type=3D"radio"][disabled], input[type=3D"checkbox"][disabled], .radio=
[disabled], .radio-inline[disabled], .checkbox[disabled], .checkbox-inline[=
disabled], fieldset[disabled] input[type=3D"radio"], fieldset[disabled] inp=
ut[type=3D"checkbox"], fieldset[disabled] .radio, fieldset[disabled] .radio=
-inline, fieldset[disabled] .checkbox, fieldset[disabled] .checkbox-inline =
{ cursor: not-allowed; }

.input-sm { height: 30px; padding: 5px 10px; font-size: 12px; line-height: =
1.5; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bott=
om-right-radius: 3px; border-bottom-left-radius: 3px; }

select.input-sm { height: 30px; line-height: 30px; }

textarea.input-sm { height: auto; }

.input-lg { height: 45px; padding: 10px 16px; font-size: 18px; line-height:=
 1.33; border-top-left-radius: 6px; border-top-right-radius: 6px; border-bo=
ttom-right-radius: 6px; border-bottom-left-radius: 6px; }

select.input-lg { height: 45px; line-height: 45px; }

textarea.input-lg { height: auto; }

.has-warning .help-block, .has-warning .control-label { color: rgb(192, 152=
, 83); }

.has-warning .form-control { border-color: rgb(192, 152, 83); -webkit-box-s=
hadow: rgba(0, 0, 0, 0.0745098) 0px 1px 1px inset; box-shadow: rgba(0, 0, 0=
, 0.0745098) 0px 1px 1px inset; }

.has-warning .form-control:focus { border-color: rgb(164, 126, 60); -webkit=
-box-shadow: rgba(0, 0, 0, 0.0745098) 0px 1px 1px inset, rgb(219, 197, 158)=
 0px 0px 6px; box-shadow: rgba(0, 0, 0, 0.0745098) 0px 1px 1px inset, rgb(2=
19, 197, 158) 0px 0px 6px; }

.has-warning .input-group-addon { color: rgb(192, 152, 83); border-color: r=
gb(192, 152, 83); background-color: rgb(252, 248, 227); }

.has-error .help-block, .has-error .control-label { color: rgb(185, 74, 72)=
; }

.has-error .form-control { border-color: rgb(185, 74, 72); -webkit-box-shad=
ow: rgba(0, 0, 0, 0.0745098) 0px 1px 1px inset; box-shadow: rgba(0, 0, 0, 0=
.0745098) 0px 1px 1px inset; }

.has-error .form-control:focus { border-color: rgb(149, 59, 57); -webkit-bo=
x-shadow: rgba(0, 0, 0, 0.0745098) 0px 1px 1px inset, rgb(213, 147, 146) 0p=
x 0px 6px; box-shadow: rgba(0, 0, 0, 0.0745098) 0px 1px 1px inset, rgb(213,=
 147, 146) 0px 0px 6px; }

.has-error .input-group-addon { color: rgb(185, 74, 72); border-color: rgb(=
185, 74, 72); background-color: rgb(242, 222, 222); }

.has-success .help-block, .has-success .control-label { color: rgb(70, 136,=
 71); }

.has-success .form-control { border-color: rgb(70, 136, 71); -webkit-box-sh=
adow: rgba(0, 0, 0, 0.0745098) 0px 1px 1px inset; box-shadow: rgba(0, 0, 0,=
 0.0745098) 0px 1px 1px inset; }

.has-success .form-control:focus { border-color: rgb(53, 102, 53); -webkit-=
box-shadow: rgba(0, 0, 0, 0.0745098) 0px 1px 1px inset, rgb(122, 186, 123) =
0px 0px 6px; box-shadow: rgba(0, 0, 0, 0.0745098) 0px 1px 1px inset, rgb(12=
2, 186, 123) 0px 0px 6px; }

.has-success .input-group-addon { color: rgb(70, 136, 71); border-color: rg=
b(70, 136, 71); background-color: rgb(223, 240, 216); }

.form-control-static { margin-bottom: 0px; }

.help-block { display: block; margin-top: 5px; margin-bottom: 10px; color: =
rgb(115, 115, 115); }

@media (min-width: 768px) {=20
  .form-inline .form-group { display: inline-block; margin-bottom: 0px; ver=
tical-align: middle; }
  .form-inline .form-control { display: inline-block; }
  .form-inline .radio, .form-inline .checkbox { display: inline-block; marg=
in-top: 0px; margin-bottom: 0px; padding-left: 0px; }
  .form-inline .radio input[type=3D"radio"], .form-inline .checkbox input[t=
ype=3D"checkbox"] { float: none; margin-left: 0px; }
}

.form-horizontal .control-label, .form-horizontal .radio, .form-horizontal =
.checkbox, .form-horizontal .radio-inline, .form-horizontal .checkbox-inlin=
e { margin-top: 0px; margin-bottom: 0px; padding-top: 7px; }

.form-horizontal .form-group { margin-left: -15px; margin-right: -15px; }

.form-horizontal .form-group::before, .form-horizontal .form-group::after {=
 content: ' '; display: table; }

.form-horizontal .form-group::after { clear: both; }

.form-horizontal .form-group::before, .form-horizontal .form-group::after {=
 content: ' '; display: table; }

.form-horizontal .form-group::after { clear: both; }

.form-horizontal .form-control-static { padding-top: 7px; }

@media (min-width: 768px) {=20
  .form-horizontal .control-label { text-align: right; }
}

.btn { display: inline-block; margin-bottom: 0px; font-weight: normal; text=
-align: center; vertical-align: middle; cursor: pointer; border: 1px solid =
transparent; white-space: nowrap; padding: 6px 12px; font-size: 14px; line-=
height: 1.42857143; border-top-left-radius: 4px; border-top-right-radius: 4=
px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; -webki=
t-user-select: none; background-image: none; }

.btn:focus { outline: -webkit-focus-ring-color auto 5px; outline-offset: -2=
px; }

.btn:hover, .btn:focus { color: rgb(51, 51, 51); text-decoration: none; }

.btn:active, .btn.active { outline: 0px; -webkit-box-shadow: rgba(0, 0, 0, =
0.121569) 0px 3px 5px inset; box-shadow: rgba(0, 0, 0, 0.121569) 0px 3px 5p=
x inset; background-image: none; }

.btn.disabled, .btn[disabled], fieldset[disabled] .btn { cursor: not-allowe=
d; pointer-events: none; opacity: 0.65; -webkit-box-shadow: none; box-shado=
w: none; }

.btn-default { color: rgb(51, 51, 51); border-color: rgb(204, 204, 204); ba=
ckground-color: rgb(255, 255, 255); }

.btn-default:hover, .btn-default:focus, .btn-default:active, .btn-default.a=
ctive, .open .dropdown-toggle.btn-default { color: rgb(51, 51, 51); border-=
color: rgb(173, 173, 173); background-color: rgb(235, 235, 235); }

.btn-default:active, .btn-default.active, .open .dropdown-toggle.btn-defaul=
t { background-image: none; }

.btn-default.disabled, .btn-default[disabled], fieldset[disabled] .btn-defa=
ult, .btn-default.disabled:hover, .btn-default[disabled]:hover, fieldset[di=
sabled] .btn-default:hover, .btn-default.disabled:focus, .btn-default[disab=
led]:focus, fieldset[disabled] .btn-default:focus, .btn-default.disabled:ac=
tive, .btn-default[disabled]:active, fieldset[disabled] .btn-default:active=
, .btn-default.disabled.active, .btn-default[disabled].active, fieldset[dis=
abled] .btn-default.active { border-color: rgb(204, 204, 204); background-c=
olor: rgb(255, 255, 255); }

.btn-primary { color: rgb(255, 255, 255); border-color: rgb(53, 126, 189); =
background-color: rgb(66, 139, 202); }

.btn-primary:hover, .btn-primary:focus, .btn-primary:active, .btn-primary.a=
ctive, .open .dropdown-toggle.btn-primary { color: rgb(255, 255, 255); bord=
er-color: rgb(40, 94, 142); background-color: rgb(50, 118, 177); }

.btn-primary:active, .btn-primary.active, .open .dropdown-toggle.btn-primar=
y { background-image: none; }

.btn-primary.disabled, .btn-primary[disabled], fieldset[disabled] .btn-prim=
ary, .btn-primary.disabled:hover, .btn-primary[disabled]:hover, fieldset[di=
sabled] .btn-primary:hover, .btn-primary.disabled:focus, .btn-primary[disab=
led]:focus, fieldset[disabled] .btn-primary:focus, .btn-primary.disabled:ac=
tive, .btn-primary[disabled]:active, fieldset[disabled] .btn-primary:active=
, .btn-primary.disabled.active, .btn-primary[disabled].active, fieldset[dis=
abled] .btn-primary.active { border-color: rgb(53, 126, 189); background-co=
lor: rgb(66, 139, 202); }

.btn-warning { color: rgb(255, 255, 255); border-color: rgb(238, 162, 54); =
background-color: rgb(240, 173, 78); }

.btn-warning:hover, .btn-warning:focus, .btn-warning:active, .btn-warning.a=
ctive, .open .dropdown-toggle.btn-warning { color: rgb(255, 255, 255); bord=
er-color: rgb(213, 133, 18); background-color: rgb(237, 156, 40); }

.btn-warning:active, .btn-warning.active, .open .dropdown-toggle.btn-warnin=
g { background-image: none; }

.btn-warning.disabled, .btn-warning[disabled], fieldset[disabled] .btn-warn=
ing, .btn-warning.disabled:hover, .btn-warning[disabled]:hover, fieldset[di=
sabled] .btn-warning:hover, .btn-warning.disabled:focus, .btn-warning[disab=
led]:focus, fieldset[disabled] .btn-warning:focus, .btn-warning.disabled:ac=
tive, .btn-warning[disabled]:active, fieldset[disabled] .btn-warning:active=
, .btn-warning.disabled.active, .btn-warning[disabled].active, fieldset[dis=
abled] .btn-warning.active { border-color: rgb(238, 162, 54); background-co=
lor: rgb(240, 173, 78); }

.btn-danger { color: rgb(255, 255, 255); border-color: rgb(212, 63, 58); ba=
ckground-color: rgb(217, 83, 79); }

.btn-danger:hover, .btn-danger:focus, .btn-danger:active, .btn-danger.activ=
e, .open .dropdown-toggle.btn-danger { color: rgb(255, 255, 255); border-co=
lor: rgb(172, 41, 37); background-color: rgb(210, 50, 45); }

.btn-danger:active, .btn-danger.active, .open .dropdown-toggle.btn-danger {=
 background-image: none; }

.btn-danger.disabled, .btn-danger[disabled], fieldset[disabled] .btn-danger=
, .btn-danger.disabled:hover, .btn-danger[disabled]:hover, fieldset[disable=
d] .btn-danger:hover, .btn-danger.disabled:focus, .btn-danger[disabled]:foc=
us, fieldset[disabled] .btn-danger:focus, .btn-danger.disabled:active, .btn=
-danger[disabled]:active, fieldset[disabled] .btn-danger:active, .btn-dange=
r.disabled.active, .btn-danger[disabled].active, fieldset[disabled] .btn-da=
nger.active { border-color: rgb(212, 63, 58); background-color: rgb(217, 83=
, 79); }

.btn-success { color: rgb(255, 255, 255); border-color: rgb(76, 174, 76); b=
ackground-color: rgb(92, 184, 92); }

.btn-success:hover, .btn-success:focus, .btn-success:active, .btn-success.a=
ctive, .open .dropdown-toggle.btn-success { color: rgb(255, 255, 255); bord=
er-color: rgb(57, 132, 57); background-color: rgb(71, 164, 71); }

.btn-success:active, .btn-success.active, .open .dropdown-toggle.btn-succes=
s { background-image: none; }

.btn-success.disabled, .btn-success[disabled], fieldset[disabled] .btn-succ=
ess, .btn-success.disabled:hover, .btn-success[disabled]:hover, fieldset[di=
sabled] .btn-success:hover, .btn-success.disabled:focus, .btn-success[disab=
led]:focus, fieldset[disabled] .btn-success:focus, .btn-success.disabled:ac=
tive, .btn-success[disabled]:active, fieldset[disabled] .btn-success:active=
, .btn-success.disabled.active, .btn-success[disabled].active, fieldset[dis=
abled] .btn-success.active { border-color: rgb(76, 174, 76); background-col=
or: rgb(92, 184, 92); }

.btn-info { color: rgb(255, 255, 255); border-color: rgb(70, 184, 218); bac=
kground-color: rgb(91, 192, 222); }

.btn-info:hover, .btn-info:focus, .btn-info:active, .btn-info.active, .open=
 .dropdown-toggle.btn-info { color: rgb(255, 255, 255); border-color: rgb(3=
8, 154, 188); background-color: rgb(57, 179, 215); }

.btn-info:active, .btn-info.active, .open .dropdown-toggle.btn-info { backg=
round-image: none; }

.btn-info.disabled, .btn-info[disabled], fieldset[disabled] .btn-info, .btn=
-info.disabled:hover, .btn-info[disabled]:hover, fieldset[disabled] .btn-in=
fo:hover, .btn-info.disabled:focus, .btn-info[disabled]:focus, fieldset[dis=
abled] .btn-info:focus, .btn-info.disabled:active, .btn-info[disabled]:acti=
ve, fieldset[disabled] .btn-info:active, .btn-info.disabled.active, .btn-in=
fo[disabled].active, fieldset[disabled] .btn-info.active { border-color: rg=
b(70, 184, 218); background-color: rgb(91, 192, 222); }

.btn-link { color: rgb(67, 117, 158); font-weight: normal; cursor: pointer;=
 border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-r=
ight-radius: 0px; border-bottom-left-radius: 0px; }

.btn-link, .btn-link:active, .btn-link[disabled], fieldset[disabled] .btn-l=
ink { -webkit-box-shadow: none; box-shadow: none; background-color: transpa=
rent; }

.btn-link, .btn-link:hover, .btn-link:focus, .btn-link:active { border-colo=
r: transparent; }

.btn-link:hover, .btn-link:focus { color: rgb(44, 77, 104); text-decoration=
: underline; background-color: transparent; }

.btn-link[disabled]:hover, fieldset[disabled] .btn-link:hover, .btn-link[di=
sabled]:focus, fieldset[disabled] .btn-link:focus { color: rgb(153, 153, 15=
3); text-decoration: none; }

.btn-lg { padding: 10px 16px; font-size: 18px; line-height: 1.33; border-to=
p-left-radius: 6px; border-top-right-radius: 6px; border-bottom-right-radiu=
s: 6px; border-bottom-left-radius: 6px; }

.btn-sm, .btn-xs { padding: 5px 10px; font-size: 12px; line-height: 1.5; bo=
rder-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-righ=
t-radius: 3px; border-bottom-left-radius: 3px; }

.btn-xs { padding: 1px 5px; }

.btn-block { display: block; width: 100%; padding-left: 0px; padding-right:=
 0px; }

.btn-block + .btn-block { margin-top: 5px; }

input[type=3D"submit"].btn-block, input[type=3D"reset"].btn-block, input[ty=
pe=3D"button"].btn-block { width: 100%; }

.fade { opacity: 0; transition: opacity 0.15s linear; -webkit-transition: o=
pacity 0.15s linear; }

.fade.in { opacity: 1; }

.collapse { display: none; }

.collapse.in { display: block; }

.collapsing { position: relative; height: 0px; overflow: hidden; transition=
: height 0.35s ease; -webkit-transition: height 0.35s ease; }

@font-face { font-family: 'Glyphicons Halflings'; src: url(http://cdn.stati=
cfile.org/twitter-bootstrap/3.0.3/fonts/glyphicons-halflings-regular.eot?#i=
efix) format(embedded-opentype), url(http://cdn.staticfile.org/twitter-boot=
strap/3.0.3/fonts/glyphicons-halflings-regular.woff) format(woff), url(http=
://cdn.staticfile.org/twitter-bootstrap/3.0.3/fonts/glyphicons-halflings-re=
gular.ttf) format(truetype), url(http://cdn.staticfile.org/twitter-bootstra=
p/3.0.3/fonts/glyphicons-halflings-regular.svg#glyphicons_halflingsregular)=
 format(svg); }

.glyphicon { position: relative; top: 1px; display: inline-block; font-fami=
ly: 'Glyphicons Halflings'; font-style: normal; font-weight: normal; line-h=
eight: 1; -webkit-font-smoothing: antialiased; }

.glyphicon:empty { width: 1em; }

.glyphicon-asterisk::before { content: '*'; }

.glyphicon-plus::before { content: '+'; }

.glyphicon-euro::before { content: '=E2=82=AC'; }

.glyphicon-minus::before { content: '=E2=88=92'; }

.glyphicon-cloud::before { content: '=E2=98=81'; }

.glyphicon-envelope::before { content: '=E2=9C=89'; }

.glyphicon-pencil::before { content: '=E2=9C=8F'; }

.glyphicon-glass::before { content: '=EE=80=81'; }

.glyphicon-music::before { content: '=EE=80=82'; }

.glyphicon-search::before { content: '=EE=80=83'; }

.glyphicon-heart::before { content: '=EE=80=85'; }

.glyphicon-star::before { content: '=EE=80=86'; }

.glyphicon-star-empty::before { content: '=EE=80=87'; }

.glyphicon-user::before { content: '=EE=80=88'; }

.glyphicon-film::before { content: '=EE=80=89'; }

.glyphicon-th-large::before { content: '=EE=80=90'; }

.glyphicon-th::before { content: '=EE=80=91'; }

.glyphicon-th-list::before { content: '=EE=80=92'; }

.glyphicon-ok::before { content: '=EE=80=93'; }

.glyphicon-remove::before { content: '=EE=80=94'; }

.glyphicon-zoom-in::before { content: '=EE=80=95'; }

.glyphicon-zoom-out::before { content: '=EE=80=96'; }

.glyphicon-off::before { content: '=EE=80=97'; }

.glyphicon-signal::before { content: '=EE=80=98'; }

.glyphicon-cog::before { content: '=EE=80=99'; }

.glyphicon-trash::before { content: '=EE=80=A0'; }

.glyphicon-home::before { content: '=EE=80=A1'; }

.glyphicon-file::before { content: '=EE=80=A2'; }

.glyphicon-time::before { content: '=EE=80=A3'; }

.glyphicon-road::before { content: '=EE=80=A4'; }

.glyphicon-download-alt::before { content: '=EE=80=A5'; }

.glyphicon-download::before { content: '=EE=80=A6'; }

.glyphicon-upload::before { content: '=EE=80=A7'; }

.glyphicon-inbox::before { content: '=EE=80=A8'; }

.glyphicon-play-circle::before { content: '=EE=80=A9'; }

.glyphicon-repeat::before { content: '=EE=80=B0'; }

.glyphicon-refresh::before { content: '=EE=80=B1'; }

.glyphicon-list-alt::before { content: '=EE=80=B2'; }

.glyphicon-lock::before { content: '=EE=80=B3'; }

.glyphicon-flag::before { content: '=EE=80=B4'; }

.glyphicon-headphones::before { content: '=EE=80=B5'; }

.glyphicon-volume-off::before { content: '=EE=80=B6'; }

.glyphicon-volume-down::before { content: '=EE=80=B7'; }

.glyphicon-volume-up::before { content: '=EE=80=B8'; }

.glyphicon-qrcode::before { content: '=EE=80=B9'; }

.glyphicon-barcode::before { content: '=EE=81=80'; }

.glyphicon-tag::before { content: '=EE=81=81'; }

.glyphicon-tags::before { content: '=EE=81=82'; }

.glyphicon-book::before { content: '=EE=81=83'; }

.glyphicon-bookmark::before { content: '=EE=81=84'; }

.glyphicon-print::before { content: '=EE=81=85'; }

.glyphicon-camera::before { content: '=EE=81=86'; }

.glyphicon-font::before { content: '=EE=81=87'; }

.glyphicon-bold::before { content: '=EE=81=88'; }

.glyphicon-italic::before { content: '=EE=81=89'; }

.glyphicon-text-height::before { content: '=EE=81=90'; }

.glyphicon-text-width::before { content: '=EE=81=91'; }

.glyphicon-align-left::before { content: '=EE=81=92'; }

.glyphicon-align-center::before { content: '=EE=81=93'; }

.glyphicon-align-right::before { content: '=EE=81=94'; }

.glyphicon-align-justify::before { content: '=EE=81=95'; }

.glyphicon-list::before { content: '=EE=81=96'; }

.glyphicon-indent-left::before { content: '=EE=81=97'; }

.glyphicon-indent-right::before { content: '=EE=81=98'; }

.glyphicon-facetime-video::before { content: '=EE=81=99'; }

.glyphicon-picture::before { content: '=EE=81=A0'; }

.glyphicon-map-marker::before { content: '=EE=81=A2'; }

.glyphicon-adjust::before { content: '=EE=81=A3'; }

.glyphicon-tint::before { content: '=EE=81=A4'; }

.glyphicon-edit::before { content: '=EE=81=A5'; }

.glyphicon-share::before { content: '=EE=81=A6'; }

.glyphicon-check::before { content: '=EE=81=A7'; }

.glyphicon-move::before { content: '=EE=81=A8'; }

.glyphicon-step-backward::before { content: '=EE=81=A9'; }

.glyphicon-fast-backward::before { content: '=EE=81=B0'; }

.glyphicon-backward::before { content: '=EE=81=B1'; }

.glyphicon-play::before { content: '=EE=81=B2'; }

.glyphicon-pause::before { content: '=EE=81=B3'; }

.glyphicon-stop::before { content: '=EE=81=B4'; }

.glyphicon-forward::before { content: '=EE=81=B5'; }

.glyphicon-fast-forward::before { content: '=EE=81=B6'; }

.glyphicon-step-forward::before { content: '=EE=81=B7'; }

.glyphicon-eject::before { content: '=EE=81=B8'; }

.glyphicon-chevron-left::before { content: '=EE=81=B9'; }

.glyphicon-chevron-right::before { content: '=EE=82=80'; }

.glyphicon-plus-sign::before { content: '=EE=82=81'; }

.glyphicon-minus-sign::before { content: '=EE=82=82'; }

.glyphicon-remove-sign::before { content: '=EE=82=83'; }

.glyphicon-ok-sign::before { content: '=EE=82=84'; }

.glyphicon-question-sign::before { content: '=EE=82=85'; }

.glyphicon-info-sign::before { content: '=EE=82=86'; }

.glyphicon-screenshot::before { content: '=EE=82=87'; }

.glyphicon-remove-circle::before { content: '=EE=82=88'; }

.glyphicon-ok-circle::before { content: '=EE=82=89'; }

.glyphicon-ban-circle::before { content: '=EE=82=90'; }

.glyphicon-arrow-left::before { content: '=EE=82=91'; }

.glyphicon-arrow-right::before { content: '=EE=82=92'; }

.glyphicon-arrow-up::before { content: '=EE=82=93'; }

.glyphicon-arrow-down::before { content: '=EE=82=94'; }

.glyphicon-share-alt::before { content: '=EE=82=95'; }

.glyphicon-resize-full::before { content: '=EE=82=96'; }

.glyphicon-resize-small::before { content: '=EE=82=97'; }

.glyphicon-exclamation-sign::before { content: '=EE=84=81'; }

.glyphicon-gift::before { content: '=EE=84=82'; }

.glyphicon-leaf::before { content: '=EE=84=83'; }

.glyphicon-fire::before { content: '=EE=84=84'; }

.glyphicon-eye-open::before { content: '=EE=84=85'; }

.glyphicon-eye-close::before { content: '=EE=84=86'; }

.glyphicon-warning-sign::before { content: '=EE=84=87'; }

.glyphicon-plane::before { content: '=EE=84=88'; }

.glyphicon-calendar::before { content: '=EE=84=89'; }

.glyphicon-random::before { content: '=EE=84=90'; }

.glyphicon-comment::before { content: '=EE=84=91'; }

.glyphicon-magnet::before { content: '=EE=84=92'; }

.glyphicon-chevron-up::before { content: '=EE=84=93'; }

.glyphicon-chevron-down::before { content: '=EE=84=94'; }

.glyphicon-retweet::before { content: '=EE=84=95'; }

.glyphicon-shopping-cart::before { content: '=EE=84=96'; }

.glyphicon-folder-close::before { content: '=EE=84=97'; }

.glyphicon-folder-open::before { content: '=EE=84=98'; }

.glyphicon-resize-vertical::before { content: '=EE=84=99'; }

.glyphicon-resize-horizontal::before { content: '=EE=84=A0'; }

.glyphicon-hdd::before { content: '=EE=84=A1'; }

.glyphicon-bullhorn::before { content: '=EE=84=A2'; }

.glyphicon-bell::before { content: '=EE=84=A3'; }

.glyphicon-certificate::before { content: '=EE=84=A4'; }

.glyphicon-thumbs-up::before { content: '=EE=84=A5'; }

.glyphicon-thumbs-down::before { content: '=EE=84=A6'; }

.glyphicon-hand-right::before { content: '=EE=84=A7'; }

.glyphicon-hand-left::before { content: '=EE=84=A8'; }

.glyphicon-hand-up::before { content: '=EE=84=A9'; }

.glyphicon-hand-down::before { content: '=EE=84=B0'; }

.glyphicon-circle-arrow-right::before { content: '=EE=84=B1'; }

.glyphicon-circle-arrow-left::before { content: '=EE=84=B2'; }

.glyphicon-circle-arrow-up::before { content: '=EE=84=B3'; }

.glyphicon-circle-arrow-down::before { content: '=EE=84=B4'; }

.glyphicon-globe::before { content: '=EE=84=B5'; }

.glyphicon-wrench::before { content: '=EE=84=B6'; }

.glyphicon-tasks::before { content: '=EE=84=B7'; }

.glyphicon-filter::before { content: '=EE=84=B8'; }

.glyphicon-briefcase::before { content: '=EE=84=B9'; }

.glyphicon-fullscreen::before { content: '=EE=85=80'; }

.glyphicon-dashboard::before { content: '=EE=85=81'; }

.glyphicon-paperclip::before { content: '=EE=85=82'; }

.glyphicon-heart-empty::before { content: '=EE=85=83'; }

.glyphicon-link::before { content: '=EE=85=84'; }

.glyphicon-phone::before { content: '=EE=85=85'; }

.glyphicon-pushpin::before { content: '=EE=85=86'; }

.glyphicon-usd::before { content: '=EE=85=88'; }

.glyphicon-gbp::before { content: '=EE=85=89'; }

.glyphicon-sort::before { content: '=EE=85=90'; }

.glyphicon-sort-by-alphabet::before { content: '=EE=85=91'; }

.glyphicon-sort-by-alphabet-alt::before { content: '=EE=85=92'; }

.glyphicon-sort-by-order::before { content: '=EE=85=93'; }

.glyphicon-sort-by-order-alt::before { content: '=EE=85=94'; }

.glyphicon-sort-by-attributes::before { content: '=EE=85=95'; }

.glyphicon-sort-by-attributes-alt::before { content: '=EE=85=96'; }

.glyphicon-unchecked::before { content: '=EE=85=97'; }

.glyphicon-expand::before { content: '=EE=85=98'; }

.glyphicon-collapse-down::before { content: '=EE=85=99'; }

.glyphicon-collapse-up::before { content: '=EE=85=A0'; }

.glyphicon-log-in::before { content: '=EE=85=A1'; }

.glyphicon-flash::before { content: '=EE=85=A2'; }

.glyphicon-log-out::before { content: '=EE=85=A3'; }

.glyphicon-new-window::before { content: '=EE=85=A4'; }

.glyphicon-record::before { content: '=EE=85=A5'; }

.glyphicon-save::before { content: '=EE=85=A6'; }

.glyphicon-open::before { content: '=EE=85=A7'; }

.glyphicon-saved::before { content: '=EE=85=A8'; }

.glyphicon-import::before { content: '=EE=85=A9'; }

.glyphicon-export::before { content: '=EE=85=B0'; }

.glyphicon-send::before { content: '=EE=85=B1'; }

.glyphicon-floppy-disk::before { content: '=EE=85=B2'; }

.glyphicon-floppy-saved::before { content: '=EE=85=B3'; }

.glyphicon-floppy-remove::before { content: '=EE=85=B4'; }

.glyphicon-floppy-save::before { content: '=EE=85=B5'; }

.glyphicon-floppy-open::before { content: '=EE=85=B6'; }

.glyphicon-credit-card::before { content: '=EE=85=B7'; }

.glyphicon-transfer::before { content: '=EE=85=B8'; }

.glyphicon-cutlery::before { content: '=EE=85=B9'; }

.glyphicon-header::before { content: '=EE=86=80'; }

.glyphicon-compressed::before { content: '=EE=86=81'; }

.glyphicon-earphone::before { content: '=EE=86=82'; }

.glyphicon-phone-alt::before { content: '=EE=86=83'; }

.glyphicon-tower::before { content: '=EE=86=84'; }

.glyphicon-stats::before { content: '=EE=86=85'; }

.glyphicon-sd-video::before { content: '=EE=86=86'; }

.glyphicon-hd-video::before { content: '=EE=86=87'; }

.glyphicon-subtitles::before { content: '=EE=86=88'; }

.glyphicon-sound-stereo::before { content: '=EE=86=89'; }

.glyphicon-sound-dolby::before { content: '=EE=86=90'; }

.glyphicon-sound-5-1::before { content: '=EE=86=91'; }

.glyphicon-sound-6-1::before { content: '=EE=86=92'; }

.glyphicon-sound-7-1::before { content: '=EE=86=93'; }

.glyphicon-copyright-mark::before { content: '=EE=86=94'; }

.glyphicon-registration-mark::before { content: '=EE=86=95'; }

.glyphicon-cloud-download::before { content: '=EE=86=97'; }

.glyphicon-cloud-upload::before { content: '=EE=86=98'; }

.glyphicon-tree-conifer::before { content: '=EE=86=99'; }

.glyphicon-tree-deciduous::before { content: '=EE=88=80'; }

.caret { display: inline-block; width: 0px; height: 0px; margin-left: 2px; =
vertical-align: middle; border-width: 4px 4px 0px; border-style: solid soli=
d dotted; border-top-color: rgb(0, 0, 0); border-right-color: transparent; =
border-left-color: transparent; }

.dropdown { position: relative; }

.dropdown-toggle:focus { outline: 0px; }

.dropdown-menu { position: absolute; top: 100%; left: 0px; z-index: 1000; d=
isplay: none; float: left; min-width: 160px; padding: 5px 0px; margin: 2px =
0px 0px; list-style: none; font-size: 14px; border: 1px solid rgba(0, 0, 0,=
 0.14902); border-top-left-radius: 4px; border-top-right-radius: 4px; borde=
r-bottom-right-radius: 4px; border-bottom-left-radius: 4px; -webkit-box-sha=
dow: rgba(0, 0, 0, 0.172549) 0px 6px 12px; box-shadow: rgba(0, 0, 0, 0.1725=
49) 0px 6px 12px; background-color: rgb(255, 255, 255); background-clip: pa=
dding-box; }

.dropdown-menu.pull-right { right: 0px; left: auto; }

.dropdown-menu .divider { height: 1px; margin: 9px 0px; overflow: hidden; b=
ackground-color: rgb(229, 229, 229); }

.dropdown-menu > li > a { display: block; padding: 3px 20px; clear: both; f=
ont-weight: normal; line-height: 1.42857143; color: rgb(51, 51, 51); white-=
space: nowrap; }

.dropdown-menu > li > a:hover, .dropdown-menu > li > a:focus { text-decorat=
ion: none; color: rgb(38, 38, 38); background-color: rgb(245, 245, 245); }

.dropdown-menu > .active > a, .dropdown-menu > .active > a:hover, .dropdown=
-menu > .active > a:focus { color: rgb(255, 255, 255); text-decoration: non=
e; outline: 0px; background-color: rgb(66, 139, 202); }

.dropdown-menu > .disabled > a, .dropdown-menu > .disabled > a:hover, .drop=
down-menu > .disabled > a:focus { color: rgb(153, 153, 153); }

.dropdown-menu > .disabled > a:hover, .dropdown-menu > .disabled > a:focus =
{ text-decoration: none; cursor: not-allowed; background-image: none; backg=
round-color: transparent; }

.open > .dropdown-menu { display: block; }

.open > a { outline: 0px; }

.dropdown-header { display: block; padding: 3px 20px; font-size: 12px; line=
-height: 1.42857143; color: rgb(153, 153, 153); }

.dropdown-backdrop { position: fixed; left: 0px; right: 0px; bottom: 0px; t=
op: 0px; z-index: 990; }

.pull-right > .dropdown-menu { right: 0px; left: auto; }

.dropup .caret, .navbar-fixed-bottom .dropdown .caret { border-top-width: 0=
px; border-top-style: dotted; border-bottom-width: 4px; border-bottom-style=
: solid; border-bottom-color: rgb(0, 0, 0); content: ''; }

.dropup .dropdown-menu, .navbar-fixed-bottom .dropdown .dropdown-menu { top=
: auto; bottom: 100%; margin-bottom: 1px; }

@media (min-width: 768px) {=20
  .navbar-right .dropdown-menu { right: 0px; left: auto; }
}

.btn-default .caret { border-top-color: rgb(51, 51, 51); }

.btn-primary .caret, .btn-success .caret, .btn-warning .caret, .btn-danger =
.caret, .btn-info .caret { border-top-color: rgb(255, 255, 255); }

.dropup .btn-default .caret { border-bottom-color: rgb(51, 51, 51); }

.dropup .btn-primary .caret, .dropup .btn-success .caret, .dropup .btn-warn=
ing .caret, .dropup .btn-danger .caret, .dropup .btn-info .caret { border-b=
ottom-color: rgb(255, 255, 255); }

.btn-group, .btn-group-vertical { position: relative; display: inline-block=
; vertical-align: middle; }

.btn-group > .btn, .btn-group-vertical > .btn { position: relative; float: =
left; }

.btn-group > .btn:hover, .btn-group-vertical > .btn:hover, .btn-group > .bt=
n:focus, .btn-group-vertical > .btn:focus, .btn-group > .btn:active, .btn-g=
roup-vertical > .btn:active, .btn-group > .btn.active, .btn-group-vertical =
> .btn.active { z-index: 2; }

.btn-group > .btn:focus, .btn-group-vertical > .btn:focus { outline: none; =
}

.btn-group .btn + .btn, .btn-group .btn + .btn-group, .btn-group .btn-group=
 + .btn, .btn-group .btn-group + .btn-group { margin-left: -1px; }

.btn-toolbar::before, .btn-toolbar::after { content: ' '; display: table; }

.btn-toolbar::after { clear: both; }

.btn-toolbar::before, .btn-toolbar::after { content: ' '; display: table; }

.btn-toolbar::after { clear: both; }

.btn-toolbar .btn-group { float: left; }

.btn-toolbar > .btn + .btn, .btn-toolbar > .btn-group + .btn, .btn-toolbar =
> .btn + .btn-group, .btn-toolbar > .btn-group + .btn-group { margin-left: =
5px; }

.btn-group > .btn:not(:first-child):not(:last-child):not(.dropdown-toggle) =
{ border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-=
right-radius: 0px; border-bottom-left-radius: 0px; }

.btn-group > .btn:first-child { margin-left: 0px; }

.btn-group > .btn:first-child:not(:last-child):not(.dropdown-toggle) { bord=
er-bottom-right-radius: 0px; border-top-right-radius: 0px; }

.btn-group > .btn:last-child:not(:first-child), .btn-group > .dropdown-togg=
le:not(:first-child) { border-bottom-left-radius: 0px; border-top-left-radi=
us: 0px; }

.btn-group > .btn-group { float: left; }

.btn-group > .btn-group:not(:first-child):not(:last-child) > .btn { border-=
top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-rad=
ius: 0px; border-bottom-left-radius: 0px; }

.btn-group > .btn-group:first-child > .btn:last-child, .btn-group > .btn-gr=
oup:first-child > .dropdown-toggle { border-bottom-right-radius: 0px; borde=
r-top-right-radius: 0px; }

.btn-group > .btn-group:last-child > .btn:first-child { border-bottom-left-=
radius: 0px; border-top-left-radius: 0px; }

.btn-group .dropdown-toggle:active, .btn-group.open .dropdown-toggle { outl=
ine: 0px; }

.btn-group-xs > .btn { font-size: 12px; line-height: 1.5; border-top-left-r=
adius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; =
border-bottom-left-radius: 3px; padding: 1px 5px; }

.btn-group-sm > .btn { padding: 5px 10px; font-size: 12px; line-height: 1.5=
; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-=
right-radius: 3px; border-bottom-left-radius: 3px; }

.btn-group-lg > .btn { padding: 10px 16px; font-size: 18px; line-height: 1.=
33; border-top-left-radius: 6px; border-top-right-radius: 6px; border-botto=
m-right-radius: 6px; border-bottom-left-radius: 6px; }

.btn-group > .btn + .dropdown-toggle { padding-left: 8px; padding-right: 8p=
x; }

.btn-group > .btn-lg + .dropdown-toggle { padding-left: 12px; padding-right=
: 12px; }

.btn-group.open .dropdown-toggle { -webkit-box-shadow: rgba(0, 0, 0, 0.1215=
69) 0px 3px 5px inset; box-shadow: rgba(0, 0, 0, 0.121569) 0px 3px 5px inse=
t; }

.btn .caret { margin-left: 0px; }

.btn-lg .caret { border-width: 5px 5px 0px; }

.dropup .btn-lg .caret { border-width: 0px 5px 5px; }

.btn-group-vertical > .btn, .btn-group-vertical > .btn-group { display: blo=
ck; float: none; width: 100%; max-width: 100%; }

.btn-group-vertical > .btn-group::before, .btn-group-vertical > .btn-group:=
:after { content: ' '; display: table; }

.btn-group-vertical > .btn-group::after { clear: both; }

.btn-group-vertical > .btn-group::before, .btn-group-vertical > .btn-group:=
:after { content: ' '; display: table; }

.btn-group-vertical > .btn-group::after { clear: both; }

.btn-group-vertical > .btn-group > .btn { float: none; }

.btn-group-vertical > .btn + .btn, .btn-group-vertical > .btn + .btn-group,=
 .btn-group-vertical > .btn-group + .btn, .btn-group-vertical > .btn-group =
+ .btn-group { margin-top: -1px; margin-left: 0px; }

.btn-group-vertical > .btn:not(:first-child):not(:last-child) { border-top-=
left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius:=
 0px; border-bottom-left-radius: 0px; }

.btn-group-vertical > .btn:first-child:not(:last-child) { border-top-right-=
radius: 4px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0p=
x; }

.btn-group-vertical > .btn:last-child:not(:first-child) { border-bottom-lef=
t-radius: 4px; border-top-right-radius: 0px; border-top-left-radius: 0px; }

.btn-group-vertical > .btn-group:not(:first-child):not(:last-child) > .btn =
{ border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-=
right-radius: 0px; border-bottom-left-radius: 0px; }

.btn-group-vertical > .btn-group:first-child > .btn:last-child, .btn-group-=
vertical > .btn-group:first-child > .dropdown-toggle { border-bottom-right-=
radius: 0px; border-bottom-left-radius: 0px; }

.btn-group-vertical > .btn-group:last-child > .btn:first-child { border-top=
-right-radius: 0px; border-top-left-radius: 0px; }

.btn-group-justified { display: table; width: 100%; table-layout: fixed; bo=
rder-collapse: separate; }

.btn-group-justified .btn { float: none; display: table-cell; width: 1%; }

[data-toggle=3D"buttons"] > .btn > input[type=3D"radio"], [data-toggle=3D"b=
uttons"] > .btn > input[type=3D"checkbox"] { display: none; }

.input-group { position: relative; display: table; border-collapse: separat=
e; }

.input-group.col { float: none; padding-left: 0px; padding-right: 0px; }

.input-group .form-control { width: 100%; margin-bottom: 0px; }

.input-group-lg > .form-control, .input-group-lg > .input-group-addon, .inp=
ut-group-lg > .input-group-btn > .btn { height: 45px; padding: 10px 16px; f=
ont-size: 18px; line-height: 1.33; border-top-left-radius: 6px; border-top-=
right-radius: 6px; border-bottom-right-radius: 6px; border-bottom-left-radi=
us: 6px; }

select.input-group-lg > .form-control, select.input-group-lg > .input-group=
-addon, select.input-group-lg > .input-group-btn > .btn { height: 45px; lin=
e-height: 45px; }

textarea.input-group-lg > .form-control, textarea.input-group-lg > .input-g=
roup-addon, textarea.input-group-lg > .input-group-btn > .btn { height: aut=
o; }

.input-group-sm > .form-control, .input-group-sm > .input-group-addon, .inp=
ut-group-sm > .input-group-btn > .btn { height: 30px; padding: 5px 10px; fo=
nt-size: 12px; line-height: 1.5; border-top-left-radius: 3px; border-top-ri=
ght-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius=
: 3px; }

select.input-group-sm > .form-control, select.input-group-sm > .input-group=
-addon, select.input-group-sm > .input-group-btn > .btn { height: 30px; lin=
e-height: 30px; }

textarea.input-group-sm > .form-control, textarea.input-group-sm > .input-g=
roup-addon, textarea.input-group-sm > .input-group-btn > .btn { height: aut=
o; }

.input-group-addon, .input-group-btn, .input-group .form-control { display:=
 table-cell; }

.input-group-addon:not(:first-child):not(:last-child), .input-group-btn:not=
(:first-child):not(:last-child), .input-group .form-control:not(:first-chil=
d):not(:last-child) { border-top-left-radius: 0px; border-top-right-radius:=
 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; }

.input-group-addon, .input-group-btn { width: 1%; white-space: nowrap; vert=
ical-align: middle; }

.input-group-addon { padding: 6px 12px; font-size: 14px; font-weight: norma=
l; line-height: 1; color: rgb(85, 85, 85); text-align: center; border: 1px =
solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top-right-rad=
ius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; =
background-color: rgb(238, 238, 238); }

.input-group-addon.input-sm { padding: 5px 10px; font-size: 12px; border-to=
p-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radiu=
s: 3px; border-bottom-left-radius: 3px; }

.input-group-addon.input-lg { padding: 10px 16px; font-size: 18px; border-t=
op-left-radius: 6px; border-top-right-radius: 6px; border-bottom-right-radi=
us: 6px; border-bottom-left-radius: 6px; }

.input-group-addon input[type=3D"radio"], .input-group-addon input[type=3D"=
checkbox"] { margin-top: 0px; }

.input-group .form-control:first-child, .input-group-addon:first-child, .in=
put-group-btn:first-child > .btn, .input-group-btn:first-child > .dropdown-=
toggle, .input-group-btn:last-child > .btn:not(:last-child):not(.dropdown-t=
oggle) { border-bottom-right-radius: 0px; border-top-right-radius: 0px; }

.input-group-addon:first-child { border-right-width: 0px; }

.input-group .form-control:last-child, .input-group-addon:last-child, .inpu=
t-group-btn:last-child > .btn, .input-group-btn:last-child > .dropdown-togg=
le, .input-group-btn:first-child > .btn:not(:first-child) { border-bottom-l=
eft-radius: 0px; border-top-left-radius: 0px; }

.input-group-addon:last-child { border-left-width: 0px; }

.input-group-btn { position: relative; white-space: nowrap; }

.input-group-btn:first-child > .btn { margin-right: -1px; }

.input-group-btn:last-child > .btn { margin-left: -1px; }

.input-group-btn > .btn { position: relative; }

.input-group-btn > .btn + .btn { margin-left: -4px; }

.input-group-btn > .btn:hover, .input-group-btn > .btn:active { z-index: 2;=
 }

.nav { margin-bottom: 0px; padding-left: 0px; list-style: none; }

.nav::before, .nav::after { content: ' '; display: table; }

.nav::after { clear: both; }

.nav::before, .nav::after { content: ' '; display: table; }

.nav::after { clear: both; }

.nav > li { position: relative; display: block; }

.nav > li > a, .docs-nav .navbar-nav > li > span { position: relative; disp=
lay: block; padding: 10px 15px; }

.nav > li > a:hover, .nav > li > a:focus { text-decoration: none; backgroun=
d-color: rgb(238, 238, 238); }

.nav > li.disabled > a { color: rgb(153, 153, 153); }

.nav > li.disabled > a:hover, .nav > li.disabled > a:focus { color: rgb(153=
, 153, 153); text-decoration: none; cursor: not-allowed; background-color: =
transparent; }

.nav .open > a, .nav .open > a:hover, .nav .open > a:focus { border-color: =
rgb(67, 117, 158); background-color: rgb(238, 238, 238); }

.nav .open > a .caret, .nav .open > a:hover .caret, .nav .open > a:focus .c=
aret { border-top-color: rgb(44, 77, 104); border-bottom-color: rgb(44, 77,=
 104); }

.nav .nav-divider { height: 1px; margin: 9px 0px; overflow: hidden; backgro=
und-color: rgb(229, 229, 229); }

.nav > li > a > img { max-width: none; }

.nav-tabs { border-bottom-width: 1px; border-bottom-style: solid; border-bo=
ttom-color: rgb(221, 221, 221); }

.nav-tabs > li { float: left; margin-bottom: -1px; }

.nav-tabs > li > a { margin-right: 2px; line-height: 1.42857143; border: 1p=
x solid transparent; border-top-left-radius: 4px; border-top-right-radius: =
4px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; }

.nav-tabs > li > a:hover { border-color: rgb(238, 238, 238) rgb(238, 238, 2=
38) rgb(221, 221, 221); }

.nav-tabs > li.active > a, .nav-tabs > li.active > a:hover, .nav-tabs > li.=
active > a:focus { color: rgb(85, 85, 85); border-width: 1px; border-style:=
 solid; border-color: rgb(221, 221, 221) rgb(221, 221, 221) transparent; cu=
rsor: default; background-color: rgb(247, 247, 247); }

.nav-tabs.nav-justified { width: 100%; border-bottom-width: 0px; }

.nav-tabs.nav-justified > li { float: none; }

.nav-tabs.nav-justified > li > a { text-align: center; margin-bottom: 5px; =
}

@media (min-width: 768px) {=20
  .nav-tabs.nav-justified > li { display: table-cell; width: 1%; }
  .nav-tabs.nav-justified > li > a { margin-bottom: 0px; }
}

.nav-tabs.nav-justified > li > a { margin-right: 0px; border-top-left-radiu=
s: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; bord=
er-bottom-left-radius: 4px; }

.nav-tabs.nav-justified > .active > a, .nav-tabs.nav-justified > .active > =
a:hover, .nav-tabs.nav-justified > .active > a:focus { border: 1px solid rg=
b(221, 221, 221); }

@media (min-width: 768px) {=20
  .nav-tabs.nav-justified > li > a { border-bottom-width: 1px; border-botto=
m-style: solid; border-bottom-color: rgb(221, 221, 221); border-top-left-ra=
dius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 0px; b=
order-bottom-left-radius: 0px; }
  .nav-tabs.nav-justified > .active > a, .nav-tabs.nav-justified > .active =
> a:hover, .nav-tabs.nav-justified > .active > a:focus { border-bottom-colo=
r: rgb(247, 247, 247); }
}

.nav-pills > li { float: left; }

.nav-pills > li > a { border-top-left-radius: 4px; border-top-right-radius:=
 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; }

.nav-pills > li + li { margin-left: 2px; }

.nav-pills > li.active > a, .nav-pills > li.active > a:hover, .nav-pills > =
li.active > a:focus { color: rgb(255, 255, 255); background-color: rgb(66, =
139, 202); }

.nav-pills > li.active > a .caret, .nav-pills > li.active > a:hover .caret,=
 .nav-pills > li.active > a:focus .caret { border-top-color: rgb(255, 255, =
255); border-bottom-color: rgb(255, 255, 255); }

.nav-stacked > li { float: none; }

.nav-stacked > li + li { margin-top: 2px; margin-left: 0px; }

.nav-justified { width: 100%; }

.nav-justified > li { float: none; }

.nav-justified > li > a { text-align: center; margin-bottom: 5px; }

@media (min-width: 768px) {=20
  .nav-justified > li { display: table-cell; width: 1%; }
  .nav-justified > li > a { margin-bottom: 0px; }
}

.nav-tabs-justified { border-bottom-width: 0px; }

.nav-tabs-justified > li > a { margin-right: 0px; border-top-left-radius: 4=
px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-b=
ottom-left-radius: 4px; }

.nav-tabs-justified > .active > a, .nav-tabs-justified > .active > a:hover,=
 .nav-tabs-justified > .active > a:focus { border: 1px solid rgb(221, 221, =
221); }

@media (min-width: 768px) {=20
  .nav-tabs-justified > li > a { border-bottom-width: 1px; border-bottom-st=
yle: solid; border-bottom-color: rgb(221, 221, 221); border-top-left-radius=
: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 0px; borde=
r-bottom-left-radius: 0px; }
  .nav-tabs-justified > .active > a, .nav-tabs-justified > .active > a:hove=
r, .nav-tabs-justified > .active > a:focus { border-bottom-color: rgb(247, =
247, 247); }
}

.tab-content > .tab-pane { display: none; }

.tab-content > .active { display: block; }

.nav .caret { border-top-color: rgb(67, 117, 158); border-bottom-color: rgb=
(67, 117, 158); }

.nav a:hover .caret { border-top-color: rgb(44, 77, 104); border-bottom-col=
or: rgb(44, 77, 104); }

.nav-tabs .dropdown-menu { margin-top: -1px; border-top-right-radius: 0px; =
border-top-left-radius: 0px; }

.navbar { position: relative; z-index: 1000; min-height: 60px; margin-botto=
m: 20px; border: 1px solid transparent; }

.navbar::before, .navbar::after { content: ' '; display: table; }

.navbar::after { clear: both; }

.navbar::before, .navbar::after { content: ' '; display: table; }

.navbar::after { clear: both; }

@media (min-width: 768px) {=20
  .navbar { border-top-left-radius: 4px; border-top-right-radius: 4px; bord=
er-bottom-right-radius: 4px; border-bottom-left-radius: 4px; }
}

.navbar-header::before, .navbar-header::after { content: ' '; display: tabl=
e; }

.navbar-header::after { clear: both; }

.navbar-header::before, .navbar-header::after { content: ' '; display: tabl=
e; }

.navbar-header::after { clear: both; }

@media (min-width: 768px) {=20
  .navbar-header { float: left; }
}

.navbar-collapse { max-height: 340px; overflow-x: visible; padding-right: 1=
5px; padding-left: 15px; border-top-width: 1px; border-top-style: solid; bo=
rder-top-color: transparent; box-shadow: rgba(255, 255, 255, 0.0980392) 0px=
 1px 0px inset; }

.navbar-collapse::before, .navbar-collapse::after { content: ' '; display: =
table; }

.navbar-collapse::after { clear: both; }

.navbar-collapse::before, .navbar-collapse::after { content: ' '; display: =
table; }

.navbar-collapse::after { clear: both; }

.navbar-collapse.in { overflow-y: auto; }

@media (min-width: 768px) {=20
  .navbar-collapse { width: auto; border-top-width: 0px; box-shadow: none; =
}
  .navbar-collapse.collapse { padding-bottom: 0px; display: block !importan=
t; height: auto !important; overflow: visible !important; }
  .navbar-collapse.in { overflow-y: visible; }
  .navbar-collapse .navbar-nav.navbar-left:first-child { margin-left: -15px=
; }
  .navbar-collapse .navbar-nav.navbar-right:last-child { margin-right: -15p=
x; }
  .navbar-collapse .navbar-text:last-child { margin-right: 0px; }
}

.container > .navbar-header, .container > .navbar-collapse { margin-right: =
-15px; margin-left: -15px; }

@media (min-width: 768px) {=20
  .container > .navbar-header, .container > .navbar-collapse { margin-right=
: 0px; margin-left: 0px; }
}

.navbar-static-top { border-width: 0px 0px 1px; }

@media (min-width: 768px) {=20
  .navbar-static-top { border-top-left-radius: 0px; border-top-right-radius=
: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; }
}

.navbar-fixed-top, .navbar-fixed-bottom { position: fixed; right: 0px; left=
: 0px; border-width: 0px 0px 1px; }

@media (min-width: 768px) {=20
  .navbar-fixed-top, .navbar-fixed-bottom { border-top-left-radius: 0px; bo=
rder-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-=
left-radius: 0px; }
}

.navbar-fixed-top { z-index: 1030; top: 0px; }

.navbar-fixed-bottom { bottom: 0px; margin-bottom: 0px; }

.navbar-brand { float: left; padding: 20px 15px; font-size: 18px; line-heig=
ht: 20px; }

.navbar-brand:hover, .navbar-brand:focus { text-decoration: none; }

@media (min-width: 768px) {=20
  .navbar > .container .navbar-brand { margin-left: -15px; }
}

.navbar-toggle { position: relative; float: right; margin-right: 15px; padd=
ing: 9px 10px; margin-top: 13px; margin-bottom: 13px; border: 1px solid tra=
nsparent; border-top-left-radius: 4px; border-top-right-radius: 4px; border=
-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color=
: transparent; }

.navbar-toggle .icon-bar { display: block; width: 22px; height: 2px; border=
-top-left-radius: 1px; border-top-right-radius: 1px; border-bottom-right-ra=
dius: 1px; border-bottom-left-radius: 1px; }

.navbar-toggle .icon-bar + .icon-bar { margin-top: 4px; }

@media (min-width: 768px) {=20
  .navbar-toggle { display: none; }
}

.navbar-nav { margin: 10px -15px; }

.navbar-nav > li > a, .docs-nav .navbar-nav > li > span { padding-top: 10px=
; padding-bottom: 10px; line-height: 20px; }

@media (max-width: 767px) {=20
  .navbar-nav .open .dropdown-menu { position: static; float: none; width: =
auto; margin-top: 0px; border: 0px; box-shadow: none; background-color: tra=
nsparent; }
  .navbar-nav .open .dropdown-menu > li > a, .navbar-nav .open .dropdown-me=
nu .dropdown-header { padding: 5px 15px 5px 25px; }
  .navbar-nav .open .dropdown-menu > li > a { line-height: 20px; }
  .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-nav .open .dropd=
own-menu > li > a:focus { background-image: none; }
}

@media (min-width: 768px) {=20
  .navbar-nav { float: left; margin: 0px; }
  .navbar-nav > li { float: left; }
  .navbar-nav > li > a, .docs-nav .navbar-nav > li > span { padding-top: 20=
px; padding-bottom: 20px; }
}

@media (min-width: 768px) {=20
  .navbar-left { float: left !important; }
  .navbar-right { float: right !important; }
}

.navbar-form { margin: 13px -15px; padding: 10px 15px; border-top-width: 1p=
x; border-top-style: solid; border-top-color: transparent; border-bottom-wi=
dth: 1px; border-bottom-style: solid; border-bottom-color: transparent; -we=
bkit-box-shadow: rgba(255, 255, 255, 0.0980392) 0px 1px 0px inset, rgba(255=
, 255, 255, 0.0980392) 0px 1px 0px; box-shadow: rgba(255, 255, 255, 0.09803=
92) 0px 1px 0px inset, rgba(255, 255, 255, 0.0980392) 0px 1px 0px; }

@media (min-width: 768px) {=20
  .navbar-form .form-group { display: inline-block; margin-bottom: 0px; ver=
tical-align: middle; }
  .navbar-form .form-control { display: inline-block; }
  .navbar-form .radio, .navbar-form .checkbox { display: inline-block; marg=
in-top: 0px; margin-bottom: 0px; padding-left: 0px; }
  .navbar-form .radio input[type=3D"radio"], .navbar-form .checkbox input[t=
ype=3D"checkbox"] { float: none; margin-left: 0px; }
}

@media (max-width: 767px) {=20
  .navbar-form .form-group { margin-bottom: 5px; }
}

@media (min-width: 768px) {=20
  .navbar-form { width: auto; border: 0px; margin-left: 0px; margin-right: =
0px; padding-top: 0px; padding-bottom: 0px; -webkit-box-shadow: none; box-s=
hadow: none; }
}

.navbar-nav > li > .dropdown-menu { margin-top: 0px; border-top-right-radiu=
s: 0px; border-top-left-radius: 0px; }

.navbar-fixed-bottom .navbar-nav > li > .dropdown-menu { border-bottom-righ=
t-radius: 0px; border-bottom-left-radius: 0px; }

.navbar-nav.pull-right > li > .dropdown-menu, .navbar-nav > li > .dropdown-=
menu.pull-right { left: auto; right: 0px; }

.navbar-btn { margin-top: 13px; margin-bottom: 13px; }

.navbar-text { float: left; margin-top: 20px; margin-bottom: 20px; }

@media (min-width: 768px) {=20
  .navbar-text { margin-left: 15px; margin-right: 15px; }
}

.navbar-default { border-color: rgb(231, 231, 231); background-color: rgb(2=
48, 248, 248); }

.navbar-default .navbar-brand { color: rgb(119, 119, 119); }

.navbar-default .navbar-brand:hover, .navbar-default .navbar-brand:focus { =
color: rgb(94, 94, 94); background-color: transparent; }

.navbar-default .navbar-text { color: rgb(119, 119, 119); }

.navbar-default .navbar-nav > li > a { color: rgb(119, 119, 119); }

.navbar-default .navbar-nav > li > a:hover, .navbar-default .navbar-nav > l=
i > a:focus { color: rgb(51, 51, 51); background-color: transparent; }

.navbar-default .navbar-nav > .active > a, .navbar-default .navbar-nav > .a=
ctive > a:hover, .navbar-default .navbar-nav > .active > a:focus { color: r=
gb(85, 85, 85); background-color: rgb(231, 231, 231); }

.navbar-default .navbar-nav > .disabled > a, .navbar-default .navbar-nav > =
.disabled > a:hover, .navbar-default .navbar-nav > .disabled > a:focus { co=
lor: rgb(204, 204, 204); background-color: transparent; }

.navbar-default .navbar-toggle { border-color: rgb(221, 221, 221); }

.navbar-default .navbar-toggle:hover, .navbar-default .navbar-toggle:focus =
{ background-color: rgb(221, 221, 221); }

.navbar-default .navbar-toggle .icon-bar { background-color: rgb(204, 204, =
204); }

.navbar-default .navbar-collapse, .navbar-default .navbar-form { border-col=
or: rgb(231, 231, 231); }

.navbar-default .navbar-nav > .dropdown > a:hover .caret, .navbar-default .=
navbar-nav > .dropdown > a:focus .caret { border-top-color: rgb(51, 51, 51)=
; border-bottom-color: rgb(51, 51, 51); }

.navbar-default .navbar-nav > .open > a, .navbar-default .navbar-nav > .ope=
n > a:hover, .navbar-default .navbar-nav > .open > a:focus { color: rgb(85,=
 85, 85); background-color: rgb(231, 231, 231); }

.navbar-default .navbar-nav > .open > a .caret, .navbar-default .navbar-nav=
 > .open > a:hover .caret, .navbar-default .navbar-nav > .open > a:focus .c=
aret { border-top-color: rgb(85, 85, 85); border-bottom-color: rgb(85, 85, =
85); }

.navbar-default .navbar-nav > .dropdown > a .caret { border-top-color: rgb(=
119, 119, 119); border-bottom-color: rgb(119, 119, 119); }

@media (max-width: 767px) {=20
  .navbar-default .navbar-nav .open .dropdown-menu > li > a { color: rgb(11=
9, 119, 119); }
  .navbar-default .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-=
default .navbar-nav .open .dropdown-menu > li > a:focus { color: rgb(51, 51=
, 51); background-color: transparent; }
  .navbar-default .navbar-nav .open .dropdown-menu > .active > a, .navbar-d=
efault .navbar-nav .open .dropdown-menu > .active > a:hover, .navbar-defaul=
t .navbar-nav .open .dropdown-menu > .active > a:focus { color: rgb(85, 85,=
 85); background-color: rgb(231, 231, 231); }
  .navbar-default .navbar-nav .open .dropdown-menu > .disabled > a, .navbar=
-default .navbar-nav .open .dropdown-menu > .disabled > a:hover, .navbar-de=
fault .navbar-nav .open .dropdown-menu > .disabled > a:focus { color: rgb(2=
04, 204, 204); background-color: transparent; }
}

.navbar-default .navbar-link { color: rgb(119, 119, 119); }

.navbar-default .navbar-link:hover { color: rgb(51, 51, 51); }

.navbar-inverse { border-color: rgb(17, 31, 54); background-color: rgb(29, =
54, 93); }

.navbar-inverse .navbar-brand { color: rgb(185, 200, 224); }

.navbar-inverse .navbar-brand:hover, .navbar-inverse .navbar-brand:focus { =
color: rgb(255, 255, 255); background-color: transparent; }

.navbar-inverse .navbar-text { color: rgb(185, 200, 224); }

.navbar-inverse .navbar-nav > li > a { color: rgb(185, 200, 224); }

.navbar-inverse .navbar-nav > li > a:hover, .navbar-inverse .navbar-nav > l=
i > a:focus { color: rgb(255, 255, 255); background-color: transparent; }

.navbar-inverse .navbar-nav > .active > a, .navbar-inverse .navbar-nav > .a=
ctive > a:hover, .navbar-inverse .navbar-nav > .active > a:focus { color: r=
gb(255, 255, 255); background-color: rgb(17, 31, 54); }

.navbar-inverse .navbar-nav > .disabled > a, .navbar-inverse .navbar-nav > =
.disabled > a:hover, .navbar-inverse .navbar-nav > .disabled > a:focus { co=
lor: rgb(68, 68, 68); background-color: transparent; }

.navbar-inverse .navbar-toggle { border-color: rgb(51, 51, 51); }

.navbar-inverse .navbar-toggle:hover, .navbar-inverse .navbar-toggle:focus =
{ background-color: rgb(51, 51, 51); }

.navbar-inverse .navbar-toggle .icon-bar { background-color: rgb(255, 255, =
255); }

.navbar-inverse .navbar-collapse, .navbar-inverse .navbar-form { border-col=
or: rgb(21, 38, 66); }

.navbar-inverse .navbar-nav > .open > a, .navbar-inverse .navbar-nav > .ope=
n > a:hover, .navbar-inverse .navbar-nav > .open > a:focus { color: rgb(255=
, 255, 255); background-color: rgb(17, 31, 54); }

.navbar-inverse .navbar-nav > .dropdown > a:hover .caret { border-top-color=
: rgb(255, 255, 255); border-bottom-color: rgb(255, 255, 255); }

.navbar-inverse .navbar-nav > .dropdown > a .caret { border-top-color: rgb(=
185, 200, 224); border-bottom-color: rgb(185, 200, 224); }

.navbar-inverse .navbar-nav > .open > a .caret, .navbar-inverse .navbar-nav=
 > .open > a:hover .caret, .navbar-inverse .navbar-nav > .open > a:focus .c=
aret { border-top-color: rgb(255, 255, 255); border-bottom-color: rgb(255, =
255, 255); }

@media (max-width: 767px) {=20
  .navbar-inverse .navbar-nav .open .dropdown-menu > .dropdown-header { bor=
der-color: rgb(17, 31, 54); }
  .navbar-inverse .navbar-nav .open .dropdown-menu > li > a { color: rgb(18=
5, 200, 224); }
  .navbar-inverse .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-=
inverse .navbar-nav .open .dropdown-menu > li > a:focus { color: rgb(255, 2=
55, 255); background-color: transparent; }
  .navbar-inverse .navbar-nav .open .dropdown-menu > .active > a, .navbar-i=
nverse .navbar-nav .open .dropdown-menu > .active > a:hover, .navbar-invers=
e .navbar-nav .open .dropdown-menu > .active > a:focus { color: rgb(255, 25=
5, 255); background-color: rgb(17, 31, 54); }
  .navbar-inverse .navbar-nav .open .dropdown-menu > .disabled > a, .navbar=
-inverse .navbar-nav .open .dropdown-menu > .disabled > a:hover, .navbar-in=
verse .navbar-nav .open .dropdown-menu > .disabled > a:focus { color: rgb(6=
8, 68, 68); background-color: transparent; }
}

.navbar-inverse .navbar-link { color: rgb(185, 200, 224); }

.navbar-inverse .navbar-link:hover { color: rgb(255, 255, 255); }

.breadcrumb { padding: 8px 15px; margin-bottom: 20px; list-style: none; bor=
der-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right=
-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(245, 24=
5, 245); }

.breadcrumb > li { display: inline-block; }

.breadcrumb > li + li::before { content: '/=C2=A0'; padding: 0px 5px; color=
: rgb(204, 204, 204); }

.breadcrumb > .active { color: rgb(153, 153, 153); }

.pagination { display: inline-block; padding-left: 0px; margin: 20px 0px; b=
order-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-rig=
ht-radius: 4px; border-bottom-left-radius: 4px; }

.pagination > li { display: inline; }

.pagination > li > a, .pagination > li > span { position: relative; float: =
left; padding: 6px 12px; line-height: 1.42857143; text-decoration: none; bo=
rder: 1px solid rgb(221, 221, 221); margin-left: -1px; background-color: rg=
b(255, 255, 255); }

.pagination > li:first-child > a, .pagination > li:first-child > span { mar=
gin-left: 0px; border-bottom-left-radius: 4px; border-top-left-radius: 4px;=
 }

.pagination > li:last-child > a, .pagination > li:last-child > span { borde=
r-bottom-right-radius: 4px; border-top-right-radius: 4px; }

.pagination > li > a:hover, .pagination > li > span:hover, .pagination > li=
 > a:focus, .pagination > li > span:focus { background-color: rgb(238, 238,=
 238); }

.pagination > .active > a, .pagination > .active > span, .pagination > .act=
ive > a:hover, .pagination > .active > span:hover, .pagination > .active > =
a:focus, .pagination > .active > span:focus { z-index: 2; color: rgb(255, 2=
55, 255); border-color: rgb(66, 139, 202); cursor: default; background-colo=
r: rgb(66, 139, 202); }

.pagination > .disabled > span, .pagination > .disabled > span:hover, .pagi=
nation > .disabled > span:focus, .pagination > .disabled > a, .pagination >=
 .disabled > a:hover, .pagination > .disabled > a:focus { color: rgb(153, 1=
53, 153); border-color: rgb(221, 221, 221); cursor: not-allowed; background=
-color: rgb(255, 255, 255); }

.pagination-lg > li > a, .pagination-lg > li > span { padding: 10px 16px; f=
ont-size: 18px; }

.pagination-lg > li:first-child > a, .pagination-lg > li:first-child > span=
 { border-bottom-left-radius: 6px; border-top-left-radius: 6px; }

.pagination-lg > li:last-child > a, .pagination-lg > li:last-child > span {=
 border-bottom-right-radius: 6px; border-top-right-radius: 6px; }

.pagination-sm > li > a, .pagination-sm > li > span { padding: 5px 10px; fo=
nt-size: 12px; }

.pagination-sm > li:first-child > a, .pagination-sm > li:first-child > span=
 { border-bottom-left-radius: 3px; border-top-left-radius: 3px; }

.pagination-sm > li:last-child > a, .pagination-sm > li:last-child > span {=
 border-bottom-right-radius: 3px; border-top-right-radius: 3px; }

.pager { padding-left: 0px; margin: 20px 0px; list-style: none; text-align:=
 center; }

.pager::before, .pager::after { content: ' '; display: table; }

.pager::after { clear: both; }

.pager::before, .pager::after { content: ' '; display: table; }

.pager::after { clear: both; }

.pager li { display: inline; }

.pager li > a, .pager li > span { display: inline-block; padding: 5px 14px;=
 border: 1px solid rgb(221, 221, 221); border-top-left-radius: 15px; border=
-top-right-radius: 15px; border-bottom-right-radius: 15px; border-bottom-le=
ft-radius: 15px; background-color: rgb(255, 255, 255); }

.pager li > a:hover, .pager li > a:focus { text-decoration: none; backgroun=
d-color: rgb(238, 238, 238); }

.pager .next > a, .pager .next > span { float: right; }

.pager .previous > a, .pager .previous > span { float: left; }

.pager .disabled > a, .pager .disabled > a:hover, .pager .disabled > a:focu=
s, .pager .disabled > span { color: rgb(153, 153, 153); cursor: not-allowed=
; background-color: rgb(255, 255, 255); }

.label { display: inline; padding: 0.2em 0.6em 0.3em; font-size: 75%; font-=
weight: bold; line-height: 1; color: rgb(255, 255, 255); text-align: center=
; white-space: nowrap; vertical-align: baseline; border-top-left-radius: 0.=
25em; border-top-right-radius: 0.25em; border-bottom-right-radius: 0.25em; =
border-bottom-left-radius: 0.25em; }

.label[href]:hover, .label[href]:focus { color: rgb(255, 255, 255); text-de=
coration: none; cursor: pointer; }

.label:empty { display: none; }

.label-default { background-color: rgb(153, 153, 153); }

.label-default[href]:hover, .label-default[href]:focus { background-color: =
rgb(128, 128, 128); }

.label-primary { background-color: rgb(66, 139, 202); }

.label-primary[href]:hover, .label-primary[href]:focus { background-color: =
rgb(48, 113, 169); }

.label-success { background-color: rgb(92, 184, 92); }

.label-success[href]:hover, .label-success[href]:focus { background-color: =
rgb(68, 157, 68); }

.label-info { background-color: rgb(91, 192, 222); }

.label-info[href]:hover, .label-info[href]:focus { background-color: rgb(49=
, 176, 213); }

.label-warning { background-color: rgb(240, 173, 78); }

.label-warning[href]:hover, .label-warning[href]:focus { background-color: =
rgb(236, 151, 31); }

.label-danger { background-color: rgb(217, 83, 79); }

.label-danger[href]:hover, .label-danger[href]:focus { background-color: rg=
b(201, 48, 44); }

.badge { display: inline-block; min-width: 10px; padding: 3px 7px; font-siz=
e: 12px; font-weight: bold; color: rgb(255, 255, 255); line-height: 1; vert=
ical-align: baseline; white-space: nowrap; text-align: center; border-top-l=
eft-radius: 10px; border-top-right-radius: 10px; border-bottom-right-radius=
: 10px; border-bottom-left-radius: 10px; background-color: rgb(153, 153, 15=
3); }

.badge:empty { display: none; }

a.badge:hover, a.badge:focus { color: rgb(255, 255, 255); text-decoration: =
none; cursor: pointer; }

.btn .badge { position: relative; top: -1px; }

a.list-group-item.active > .badge, .nav-pills > .active > a > .badge { colo=
r: rgb(67, 117, 158); background-color: rgb(255, 255, 255); }

.nav-pills > li > a > .badge { margin-left: 3px; }

.jumbotron { padding: 30px; margin-bottom: 30px; font-size: 21px; font-weig=
ht: 200; line-height: 2.14285714; color: inherit; background-color: rgb(238=
, 238, 238); }

.jumbotron h1 { line-height: 1; color: inherit; }

.jumbotron p { line-height: 1.4; }

.container .jumbotron { border-top-left-radius: 6px; border-top-right-radiu=
s: 6px; border-bottom-right-radius: 6px; border-bottom-left-radius: 6px; }

@media screen and (min-width: 768px) {=20
  .jumbotron { padding-top: 48px; padding-bottom: 48px; }
  .container .jumbotron { padding-left: 60px; padding-right: 60px; }
  .jumbotron h1 { font-size: 63px; }
}

.thumbnail { padding: 4px; line-height: 1.42857143; border: 1px solid rgb(2=
21, 221, 221); border-top-left-radius: 4px; border-top-right-radius: 4px; b=
order-bottom-right-radius: 4px; border-bottom-left-radius: 4px; transition:=
 all 0.2s ease-in-out; -webkit-transition: all 0.2s ease-in-out; max-width:=
 100%; height: auto; display: block; margin-bottom: 20px; background-color:=
 rgb(247, 247, 247); }

.thumbnail > img { display: block; max-width: 100%; height: auto; }

a.thumbnail:hover, a.thumbnail:focus, a.thumbnail.active { border-color: rg=
b(67, 117, 158); }

.thumbnail > img { margin-left: auto; margin-right: auto; }

.thumbnail .caption { padding: 9px; color: rgb(51, 51, 51); }

.alert { padding: 15px; margin-bottom: 20px; border: 1px solid transparent;=
 border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-r=
ight-radius: 4px; border-bottom-left-radius: 4px; }

.alert h4 { margin-top: 0px; color: inherit; }

.alert .alert-link { font-weight: bold; }

.alert > p, .alert > ul { margin-bottom: 0px; }

.alert > p + p { margin-top: 5px; }

.alert-dismissable { padding-right: 35px; }

.alert-dismissable .close { position: relative; top: -2px; right: -21px; co=
lor: inherit; }

.alert-success { border-color: rgb(214, 233, 198); color: rgb(70, 136, 71);=
 background-color: rgb(223, 240, 216); }

.alert-success hr { border-top-color: rgb(201, 226, 179); }

.alert-success .alert-link { color: rgb(53, 102, 53); }

.alert-info { border-color: rgb(188, 232, 241); color: rgb(58, 135, 173); b=
ackground-color: rgb(217, 237, 247); }

.alert-info hr { border-top-color: rgb(166, 225, 236); }

.alert-info .alert-link { color: rgb(45, 105, 135); }

.alert-warning { border-color: rgb(250, 235, 204); color: rgb(192, 152, 83)=
; background-color: rgb(252, 248, 227); }

.alert-warning hr { border-top-color: rgb(247, 225, 181); }

.alert-warning .alert-link { color: rgb(164, 126, 60); }

.alert-danger { border-color: rgb(235, 204, 209); color: rgb(185, 74, 72); =
background-color: rgb(242, 222, 222); }

.alert-danger hr { border-top-color: rgb(228, 185, 192); }

.alert-danger .alert-link { color: rgb(149, 59, 57); }

@-webkit-keyframes progress-bar-stripes {=20
  0% { background-position: 40px 0px; }
  100% { background-position: 0px 0px; }
}

.progress { overflow: hidden; height: 20px; margin-bottom: 20px; border-top=
-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius=
: 4px; border-bottom-left-radius: 4px; -webkit-box-shadow: rgba(0, 0, 0, 0.=
0980392) 0px 1px 2px inset; box-shadow: rgba(0, 0, 0, 0.0980392) 0px 1px 2p=
x inset; background-color: rgb(245, 245, 245); }

.progress-bar { float: left; width: 0px; height: 100%; font-size: 12px; lin=
e-height: 20px; color: rgb(255, 255, 255); text-align: center; -webkit-box-=
shadow: rgba(0, 0, 0, 0.14902) 0px -1px 0px inset; box-shadow: rgba(0, 0, 0=
, 0.14902) 0px -1px 0px inset; transition: width 0.6s ease; -webkit-transit=
ion: width 0.6s ease; background-color: rgb(66, 139, 202); }

.progress-striped .progress-bar { background-image: linear-gradient(45deg, =
rgba(255, 255, 255, 0.14902) 25%, transparent 25%, transparent 50%, rgba(25=
5, 255, 255, 0.14902) 50%, rgba(255, 255, 255, 0.14902) 75%, transparent 75=
%, transparent); background-size: 40px 40px; }

.progress.active .progress-bar { -webkit-animation: progress-bar-stripes 2s=
 linear infinite; }

.progress-bar-success { background-color: rgb(92, 184, 92); }

.progress-striped .progress-bar-success { background-image: linear-gradient=
(45deg, rgba(255, 255, 255, 0.14902) 25%, transparent 25%, transparent 50%,=
 rgba(255, 255, 255, 0.14902) 50%, rgba(255, 255, 255, 0.14902) 75%, transp=
arent 75%, transparent); }

.progress-bar-info { background-color: rgb(91, 192, 222); }

.progress-striped .progress-bar-info { background-image: linear-gradient(45=
deg, rgba(255, 255, 255, 0.14902) 25%, transparent 25%, transparent 50%, rg=
ba(255, 255, 255, 0.14902) 50%, rgba(255, 255, 255, 0.14902) 75%, transpare=
nt 75%, transparent); }

.progress-bar-warning { background-color: rgb(240, 173, 78); }

.progress-striped .progress-bar-warning { background-image: linear-gradient=
(45deg, rgba(255, 255, 255, 0.14902) 25%, transparent 25%, transparent 50%,=
 rgba(255, 255, 255, 0.14902) 50%, rgba(255, 255, 255, 0.14902) 75%, transp=
arent 75%, transparent); }

.progress-bar-danger { background-color: rgb(217, 83, 79); }

.progress-striped .progress-bar-danger { background-image: linear-gradient(=
45deg, rgba(255, 255, 255, 0.14902) 25%, transparent 25%, transparent 50%, =
rgba(255, 255, 255, 0.14902) 50%, rgba(255, 255, 255, 0.14902) 75%, transpa=
rent 75%, transparent); }

.media, .media-body { overflow: hidden; zoom: 1; }

.media, .media .media { margin-top: 15px; }

.media:first-child { margin-top: 0px; }

.media-object { display: block; }

.media-heading { margin: 0px 0px 5px; }

.media > .pull-left { margin-right: 10px; }

.media > .pull-right { margin-left: 10px; }

.media-list { padding-left: 0px; list-style: none; }

.list-group { margin-bottom: 20px; padding-left: 0px; }

.list-group-item { position: relative; display: block; padding: 10px 15px; =
margin-bottom: -1px; border: 1px solid rgb(221, 221, 221); background-color=
: rgb(255, 255, 255); }

.list-group-item:first-child { border-top-right-radius: 4px; border-top-lef=
t-radius: 4px; }

.list-group-item:last-child { margin-bottom: 0px; border-bottom-right-radiu=
s: 4px; border-bottom-left-radius: 4px; }

.list-group-item > .badge { float: right; }

.list-group-item > .badge + .badge { margin-right: 5px; }

a.list-group-item { color: rgb(85, 85, 85); }

a.list-group-item .list-group-item-heading { color: rgb(51, 51, 51); }

a.list-group-item:hover, a.list-group-item:focus { text-decoration: none; b=
ackground-color: rgb(245, 245, 245); }

a.list-group-item.active, a.list-group-item.active:hover, a.list-group-item=
.active:focus { z-index: 2; color: rgb(255, 255, 255); border-color: rgb(66=
, 139, 202); background-color: rgb(66, 139, 202); }

a.list-group-item.active .list-group-item-heading, a.list-group-item.active=
:hover .list-group-item-heading, a.list-group-item.active:focus .list-group=
-item-heading { color: inherit; }

a.list-group-item.active .list-group-item-text, a.list-group-item.active:ho=
ver .list-group-item-text, a.list-group-item.active:focus .list-group-item-=
text { color: rgb(225, 237, 247); }

.list-group-item-heading { margin-top: 0px; margin-bottom: 5px; }

.list-group-item-text { margin-bottom: 0px; line-height: 1.3; }

.panel { margin-bottom: 20px; border: 1px solid transparent; border-top-lef=
t-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4p=
x; border-bottom-left-radius: 4px; -webkit-box-shadow: rgba(0, 0, 0, 0.0470=
588) 0px 1px 1px; box-shadow: rgba(0, 0, 0, 0.0470588) 0px 1px 1px; backgro=
und-color: rgb(255, 255, 255); }

.panel-body { padding: 15px; }

.panel-body::before, .panel-body::after { content: ' '; display: table; }

.panel-body::after { clear: both; }

.panel-body::before, .panel-body::after { content: ' '; display: table; }

.panel-body::after { clear: both; }

.panel > .list-group { margin-bottom: 0px; }

.panel > .list-group .list-group-item { border-width: 1px 0px; }

.panel > .list-group .list-group-item:first-child { border-top-right-radius=
: 0px; border-top-left-radius: 0px; }

.panel > .list-group .list-group-item:last-child { border-bottom-width: 0px=
; }

.panel-heading + .list-group .list-group-item:first-child { border-top-widt=
h: 0px; }

.panel > .table, .panel > .table-responsive { margin-bottom: 0px; }

.panel > .panel-body + .table, .panel > .panel-body + .table-responsive { b=
order-top-width: 1px; border-top-style: solid; border-top-color: rgb(221, 2=
21, 221); }

.panel > .table-bordered, .panel > .table-responsive > .table-bordered { bo=
rder: 0px; }

.panel > .table-bordered > thead > tr > th:first-child, .panel > .table-res=
ponsive > .table-bordered > thead > tr > th:first-child, .panel > .table-bo=
rdered > tbody > tr > th:first-child, .panel > .table-responsive > .table-b=
ordered > tbody > tr > th:first-child, .panel > .table-bordered > tfoot > t=
r > th:first-child, .panel > .table-responsive > .table-bordered > tfoot > =
tr > th:first-child, .panel > .table-bordered > thead > tr > td:first-child=
, .panel > .table-responsive > .table-bordered > thead > tr > td:first-chil=
d, .panel > .table-bordered > tbody > tr > td:first-child, .panel > .table-=
responsive > .table-bordered > tbody > tr > td:first-child, .panel > .table=
-bordered > tfoot > tr > td:first-child, .panel > .table-responsive > .tabl=
e-bordered > tfoot > tr > td:first-child { border-left-width: 0px; }

.panel > .table-bordered > thead > tr > th:last-child, .panel > .table-resp=
onsive > .table-bordered > thead > tr > th:last-child, .panel > .table-bord=
ered > tbody > tr > th:last-child, .panel > .table-responsive > .table-bord=
ered > tbody > tr > th:last-child, .panel > .table-bordered > tfoot > tr > =
th:last-child, .panel > .table-responsive > .table-bordered > tfoot > tr > =
th:last-child, .panel > .table-bordered > thead > tr > td:last-child, .pane=
l > .table-responsive > .table-bordered > thead > tr > td:last-child, .pane=
l > .table-bordered > tbody > tr > td:last-child, .panel > .table-responsiv=
e > .table-bordered > tbody > tr > td:last-child, .panel > .table-bordered =
> tfoot > tr > td:last-child, .panel > .table-responsive > .table-bordered =
> tfoot > tr > td:last-child { border-right-width: 0px; }

.panel > .table-bordered > thead > tr:last-child > th, .panel > .table-resp=
onsive > .table-bordered > thead > tr:last-child > th, .panel > .table-bord=
ered > tbody > tr:last-child > th, .panel > .table-responsive > .table-bord=
ered > tbody > tr:last-child > th, .panel > .table-bordered > tfoot > tr:la=
st-child > th, .panel > .table-responsive > .table-bordered > tfoot > tr:la=
st-child > th, .panel > .table-bordered > thead > tr:last-child > td, .pane=
l > .table-responsive > .table-bordered > thead > tr:last-child > td, .pane=
l > .table-bordered > tbody > tr:last-child > td, .panel > .table-responsiv=
e > .table-bordered > tbody > tr:last-child > td, .panel > .table-bordered =
> tfoot > tr:last-child > td, .panel > .table-responsive > .table-bordered =
> tfoot > tr:last-child > td { border-bottom-width: 0px; }

.panel-heading { padding: 10px 15px; border-bottom-width: 1px; border-botto=
m-style: solid; border-bottom-color: transparent; border-top-right-radius: =
3px; border-top-left-radius: 3px; }

.panel-title { margin-top: 0px; margin-bottom: 0px; font-size: 16px; }

.panel-title > a { color: inherit; }

.panel-footer { padding: 10px 15px; border-top-width: 1px; border-top-style=
: solid; border-top-color: rgb(221, 221, 221); border-bottom-right-radius: =
3px; border-bottom-left-radius: 3px; background-color: rgb(245, 245, 245); =
}

.panel-group .panel { margin-bottom: 0px; border-top-left-radius: 4px; bord=
er-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-le=
ft-radius: 4px; overflow: hidden; }

.panel-group .panel + .panel { margin-top: 5px; }

.panel-group .panel-heading { border-bottom-width: 0px; }

.panel-group .panel-heading + .panel-collapse .panel-body { border-top-widt=
h: 1px; border-top-style: solid; border-top-color: rgb(221, 221, 221); }

.panel-group .panel-footer { border-top-width: 0px; }

.panel-group .panel-footer + .panel-collapse .panel-body { border-bottom-wi=
dth: 1px; border-bottom-style: solid; border-bottom-color: rgb(221, 221, 22=
1); }

.panel-default { border-color: rgb(221, 221, 221); }

.panel-default > .panel-heading { color: rgb(51, 51, 51); border-color: rgb=
(221, 221, 221); background-color: rgb(245, 245, 245); }

.panel-default > .panel-heading + .panel-collapse .panel-body { border-top-=
color: rgb(221, 221, 221); }

.panel-default > .panel-footer + .panel-collapse .panel-body { border-botto=
m-color: rgb(221, 221, 221); }

.panel-primary { border-color: rgb(66, 139, 202); }

.panel-primary > .panel-heading { color: rgb(255, 255, 255); border-color: =
rgb(66, 139, 202); background-color: rgb(66, 139, 202); }

.panel-primary > .panel-heading + .panel-collapse .panel-body { border-top-=
color: rgb(66, 139, 202); }

.panel-primary > .panel-footer + .panel-collapse .panel-body { border-botto=
m-color: rgb(66, 139, 202); }

.panel-success { border-color: rgb(214, 233, 198); }

.panel-success > .panel-heading { color: rgb(70, 136, 71); border-color: rg=
b(214, 233, 198); background-color: rgb(223, 240, 216); }

.panel-success > .panel-heading + .panel-collapse .panel-body { border-top-=
color: rgb(214, 233, 198); }

.panel-success > .panel-footer + .panel-collapse .panel-body { border-botto=
m-color: rgb(214, 233, 198); }

.panel-warning { border-color: rgb(250, 235, 204); }

.panel-warning > .panel-heading { color: rgb(192, 152, 83); border-color: r=
gb(250, 235, 204); background-color: rgb(252, 248, 227); }

.panel-warning > .panel-heading + .panel-collapse .panel-body { border-top-=
color: rgb(250, 235, 204); }

.panel-warning > .panel-footer + .panel-collapse .panel-body { border-botto=
m-color: rgb(250, 235, 204); }

.panel-danger { border-color: rgb(235, 204, 209); }

.panel-danger > .panel-heading { color: rgb(185, 74, 72); border-color: rgb=
(235, 204, 209); background-color: rgb(242, 222, 222); }

.panel-danger > .panel-heading + .panel-collapse .panel-body { border-top-c=
olor: rgb(235, 204, 209); }

.panel-danger > .panel-footer + .panel-collapse .panel-body { border-bottom=
-color: rgb(235, 204, 209); }

.panel-info { border-color: rgb(188, 232, 241); }

.panel-info > .panel-heading { color: rgb(58, 135, 173); border-color: rgb(=
188, 232, 241); background-color: rgb(217, 237, 247); }

.panel-info > .panel-heading + .panel-collapse .panel-body { border-top-col=
or: rgb(188, 232, 241); }

.panel-info > .panel-footer + .panel-collapse .panel-body { border-bottom-c=
olor: rgb(188, 232, 241); }

.well { min-height: 20px; padding: 19px; margin-bottom: 20px; border: 1px s=
olid rgb(227, 227, 227); border-top-left-radius: 4px; border-top-right-radi=
us: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; -=
webkit-box-shadow: rgba(0, 0, 0, 0.0470588) 0px 1px 1px inset; box-shadow: =
rgba(0, 0, 0, 0.0470588) 0px 1px 1px inset; background-color: rgb(245, 245,=
 245); }

.well blockquote { border-color: rgba(0, 0, 0, 0.14902); }

.well-lg { padding: 24px; border-top-left-radius: 6px; border-top-right-rad=
ius: 6px; border-bottom-right-radius: 6px; border-bottom-left-radius: 6px; =
}

.well-sm { padding: 9px; border-top-left-radius: 3px; border-top-right-radi=
us: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; }

.close { float: right; font-size: 21px; font-weight: bold; line-height: 1; =
color: rgb(0, 0, 0); text-shadow: rgb(255, 255, 255) 0px 1px 0px; opacity: =
0.2; }

.close:hover, .close:focus { color: rgb(0, 0, 0); text-decoration: none; cu=
rsor: pointer; opacity: 0.5; }

button.close { padding: 0px; cursor: pointer; border: 0px; -webkit-appearan=
ce: none; background: transparent; }

.modal-open { overflow: hidden; }

.modal { display: none; overflow-x: auto; overflow-y: scroll; position: fix=
ed; top: 0px; right: 0px; bottom: 0px; left: 0px; z-index: 1040; }

.modal.fade .modal-dialog { -webkit-transform: translate(0px, -25%); transf=
orm: translate(0px, -25%); transition: transform 0.3s ease-out; -webkit-tra=
nsition: transform 0.3s ease-out; }

.modal.in .modal-dialog { -webkit-transform: translate(0px, 0px); transform=
: translate(0px, 0px); }

.modal-dialog { margin-left: auto; margin-right: auto; width: auto; padding=
: 10px; z-index: 1050; }

.modal-content { position: relative; border: 1px solid rgba(0, 0, 0, 0.2); =
border-top-left-radius: 6px; border-top-right-radius: 6px; border-bottom-ri=
ght-radius: 6px; border-bottom-left-radius: 6px; -webkit-box-shadow: rgba(0=
, 0, 0, 0.498039) 0px 3px 9px; box-shadow: rgba(0, 0, 0, 0.498039) 0px 3px =
9px; outline: none; background-color: rgb(255, 255, 255); background-clip: =
padding-box; }

.modal-backdrop { position: fixed; top: 0px; right: 0px; bottom: 0px; left:=
 0px; z-index: 1030; background-color: rgb(0, 0, 0); }

.modal-backdrop.fade { opacity: 0; }

.modal-backdrop.in { opacity: 0.5; }

.modal-header { padding: 15px; border-bottom-width: 1px; border-bottom-styl=
e: solid; border-bottom-color: rgb(229, 229, 229); min-height: 16.42857143p=
x; }

.modal-header .close { margin-top: -2px; }

.modal-title { margin: 0px; line-height: 1.42857143; }

.modal-body { position: relative; padding: 20px; }

.modal-footer { margin-top: 15px; padding: 19px 20px 20px; text-align: righ=
t; border-top-width: 1px; border-top-style: solid; border-top-color: rgb(22=
9, 229, 229); }

.modal-footer::before, .modal-footer::after { content: ' '; display: table;=
 }

.modal-footer::after { clear: both; }

.modal-footer::before, .modal-footer::after { content: ' '; display: table;=
 }

.modal-footer::after { clear: both; }

.modal-footer .btn + .btn { margin-left: 5px; margin-bottom: 0px; }

.modal-footer .btn-group .btn + .btn { margin-left: -1px; }

.modal-footer .btn-block + .btn-block { margin-left: 0px; }

@media screen and (min-width: 768px) {=20
  .modal-dialog { width: 600px; padding-top: 30px; padding-bottom: 30px; }
  .modal-content { -webkit-box-shadow: rgba(0, 0, 0, 0.498039) 0px 5px 15px=
; box-shadow: rgba(0, 0, 0, 0.498039) 0px 5px 15px; }
}

.tooltip { position: absolute; z-index: 1030; display: block; visibility: v=
isible; font-size: 12px; line-height: 1.4; opacity: 0; }

.tooltip.in { opacity: 0.9; }

.tooltip.top { margin-top: -3px; padding: 5px 0px; }

.tooltip.right { margin-left: 3px; padding: 0px 5px; }

.tooltip.bottom { margin-top: 3px; padding: 5px 0px; }

.tooltip.left { margin-left: -3px; padding: 0px 5px; }

.tooltip-inner { max-width: 200px; padding: 3px 8px; color: rgb(255, 255, 2=
55); text-align: center; text-decoration: none; border-top-left-radius: 4px=
; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bot=
tom-left-radius: 4px; background-color: rgb(0, 0, 0); }

.tooltip-arrow { position: absolute; width: 0px; height: 0px; border-color:=
 transparent; border-style: solid; }

.tooltip.top .tooltip-arrow { bottom: 0px; left: 50%; margin-left: -5px; bo=
rder-width: 5px 5px 0px; border-top-color: rgb(0, 0, 0); }

.tooltip.top-left .tooltip-arrow { bottom: 0px; left: 5px; border-width: 5p=
x 5px 0px; border-top-color: rgb(0, 0, 0); }

.tooltip.top-right .tooltip-arrow { bottom: 0px; right: 5px; border-width: =
5px 5px 0px; border-top-color: rgb(0, 0, 0); }

.tooltip.right .tooltip-arrow { top: 50%; left: 0px; margin-top: -5px; bord=
er-width: 5px 5px 5px 0px; border-right-color: rgb(0, 0, 0); }

.tooltip.left .tooltip-arrow { top: 50%; right: 0px; margin-top: -5px; bord=
er-width: 5px 0px 5px 5px; border-left-color: rgb(0, 0, 0); }

.tooltip.bottom .tooltip-arrow { top: 0px; left: 50%; margin-left: -5px; bo=
rder-width: 0px 5px 5px; border-bottom-color: rgb(0, 0, 0); }

.tooltip.bottom-left .tooltip-arrow { top: 0px; left: 5px; border-width: 0p=
x 5px 5px; border-bottom-color: rgb(0, 0, 0); }

.tooltip.bottom-right .tooltip-arrow { top: 0px; right: 5px; border-width: =
0px 5px 5px; border-bottom-color: rgb(0, 0, 0); }

.popover { position: absolute; top: 0px; left: 0px; z-index: 1010; display:=
 none; padding: 1px; text-align: left; border: 1px solid rgba(0, 0, 0, 0.2)=
; border-top-left-radius: 6px; border-top-right-radius: 6px; border-bottom-=
right-radius: 6px; border-bottom-left-radius: 6px; -webkit-box-shadow: rgba=
(0, 0, 0, 0.2) 0px 5px 10px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 10px; w=
hite-space: normal; background-color: rgb(255, 255, 255); background-clip: =
padding-box; }

.popover.top { margin-top: -10px; }

.popover.right { margin-left: 10px; }

.popover.bottom { margin-top: 10px; }

.popover.left { margin-left: -10px; }

.popover-title { margin: 0px; padding: 8px 14px; font-size: 14px; font-weig=
ht: normal; line-height: 18px; border-bottom-width: 1px; border-bottom-styl=
e: solid; border-bottom-color: rgb(235, 235, 235); border-top-left-radius: =
5px; border-top-right-radius: 5px; border-bottom-right-radius: 0px; border-=
bottom-left-radius: 0px; background-color: rgb(247, 247, 247); }

.popover-content { padding: 9px 14px; }

.popover .arrow, .popover .arrow::after { position: absolute; display: bloc=
k; width: 0px; height: 0px; border-color: transparent; border-style: solid;=
 }

.popover .arrow { border-width: 11px; }

.popover .arrow::after { border-width: 10px; content: ''; }

.popover.top .arrow { left: 50%; margin-left: -11px; border-bottom-width: 0=
px; border-top-color: rgba(0, 0, 0, 0.247059); bottom: -11px; }

.popover.top .arrow::after { content: ' '; bottom: 1px; margin-left: -10px;=
 border-bottom-width: 0px; border-top-color: rgb(255, 255, 255); }

.popover.right .arrow { top: 50%; left: -11px; margin-top: -11px; border-le=
ft-width: 0px; border-right-color: rgba(0, 0, 0, 0.247059); }

.popover.right .arrow::after { content: ' '; left: 1px; bottom: -10px; bord=
er-left-width: 0px; border-right-color: rgb(255, 255, 255); }

.popover.bottom .arrow { left: 50%; margin-left: -11px; border-top-width: 0=
px; border-bottom-color: rgba(0, 0, 0, 0.247059); top: -11px; }

.popover.bottom .arrow::after { content: ' '; top: 1px; margin-left: -10px;=
 border-top-width: 0px; border-bottom-color: rgb(255, 255, 255); }

.popover.left .arrow { top: 50%; right: -11px; margin-top: -11px; border-ri=
ght-width: 0px; border-left-color: rgba(0, 0, 0, 0.247059); }

.popover.left .arrow::after { content: ' '; right: 1px; border-right-width:=
 0px; border-left-color: rgb(255, 255, 255); bottom: -10px; }

.carousel { position: relative; }

.carousel-inner { position: relative; overflow: hidden; width: 100%; }

.carousel-inner > .item { display: none; position: relative; transition: le=
ft 0.6s ease-in-out; -webkit-transition: left 0.6s ease-in-out; }

.carousel-inner > .item > img, .carousel-inner > .item > a > img { display:=
 block; max-width: 100%; height: auto; line-height: 1; }

.carousel-inner > .active, .carousel-inner > .next, .carousel-inner > .prev=
 { display: block; }

.carousel-inner > .active { left: 0px; }

.carousel-inner > .next, .carousel-inner > .prev { position: absolute; top:=
 0px; width: 100%; }

.carousel-inner > .next { left: 100%; }

.carousel-inner > .prev { left: -100%; }

.carousel-inner > .next.left, .carousel-inner > .prev.right { left: 0px; }

.carousel-inner > .active.left { left: -100%; }

.carousel-inner > .active.right { left: 100%; }

.carousel-control { position: absolute; top: 0px; left: 0px; bottom: 0px; w=
idth: 15%; opacity: 0.5; font-size: 20px; color: rgb(255, 255, 255); text-a=
lign: center; text-shadow: rgba(0, 0, 0, 0.6) 0px 1px 2px; }

.carousel-control.left { background-image: linear-gradient(to right, rgba(0=
, 0, 0, 0.498039) 0px, rgba(0, 0, 0, 0) 100%); background-repeat: repeat-x;=
 }

.carousel-control.right { left: auto; right: 0px; background-image: linear-=
gradient(to right, rgba(0, 0, 0, 0) 0px, rgba(0, 0, 0, 0.498039) 100%); bac=
kground-repeat: repeat-x; }

.carousel-control:hover, .carousel-control:focus { color: rgb(255, 255, 255=
); text-decoration: none; opacity: 0.9; }

.carousel-control .icon-prev, .carousel-control .icon-next, .carousel-contr=
ol .glyphicon-chevron-left, .carousel-control .glyphicon-chevron-right { po=
sition: absolute; top: 50%; z-index: 5; display: inline-block; }

.carousel-control .icon-prev, .carousel-control .glyphicon-chevron-left { l=
eft: 50%; }

.carousel-control .icon-next, .carousel-control .glyphicon-chevron-right { =
right: 50%; }

.carousel-control .icon-prev, .carousel-control .icon-next { width: 20px; h=
eight: 20px; margin-top: -10px; margin-left: -10px; font-family: serif; }

.carousel-control .icon-prev::before { content: '=E2=80=B9'; }

.carousel-control .icon-next::before { content: '=E2=80=BA'; }

.carousel-indicators { position: absolute; bottom: 10px; left: 50%; z-index=
: 15; width: 60%; margin-left: -30%; padding-left: 0px; list-style: none; t=
ext-align: center; }

.carousel-indicators li { display: inline-block; width: 10px; height: 10px;=
 margin: 1px; text-indent: -999px; border: 1px solid rgb(255, 255, 255); bo=
rder-top-left-radius: 10px; border-top-right-radius: 10px; border-bottom-ri=
ght-radius: 10px; border-bottom-left-radius: 10px; cursor: pointer; }

.carousel-indicators .active { margin: 0px; width: 12px; height: 12px; back=
ground-color: rgb(255, 255, 255); }

.carousel-caption { position: absolute; left: 15%; right: 15%; bottom: 20px=
; z-index: 10; padding-top: 20px; padding-bottom: 20px; color: rgb(255, 255=
, 255); text-align: center; text-shadow: rgba(0, 0, 0, 0.6) 0px 1px 2px; }

.carousel-caption .btn { text-shadow: none; }

@media screen and (min-width: 768px) {=20
  .carousel-control .glyphicons-chevron-left, .carousel-control .glyphicons=
-chevron-right, .carousel-control .icon-prev, .carousel-control .icon-next =
{ width: 30px; height: 30px; margin-top: -15px; margin-left: -15px; font-si=
ze: 30px; }
  .carousel-caption { left: 20%; right: 20%; padding-bottom: 30px; }
  .carousel-indicators { bottom: 20px; }
}

body { position: relative; padding-top: 50px; }

.table code { font-size: 13px; font-weight: normal; }

.bs-social { margin-top: 20px; margin-bottom: 20px; text-align: center; }

.bs-social-buttons { display: inline-block; margin-bottom: 0px; padding-lef=
t: 0px; list-style: none; }

.bs-social-buttons li { display: inline-block; line-height: 1; padding: 5px=
 8px; }

.bs-social-buttons .twitter-follow-button { width: 225px !important; }

.bs-social-buttons .twitter-share-button { width: 98px !important; }

.github-btn { border: 0px; overflow: hidden; }

@media (min-width: 768px) {=20
  .bs-social { text-align: left; }
  .bs-social-buttons li:first-child { padding-left: 0px; }
}

.bs-masthead { position: relative; padding: 30px 15px; text-align: center; =
text-shadow: rgba(0, 0, 0, 0.14902) 0px 1px 0px; }

.bs-masthead h1 { font-size: 50px; line-height: 1; color: rgb(255, 255, 255=
); }

.bs-masthead .btn-outline-inverse { margin: 10px; }

.bs-masthead-links { margin-top: 20px; margin-bottom: 40px; padding: 0px 15=
px; list-style: none; text-align: center; }

.bs-masthead-links li { display: inline; }

.bs-masthead-links li + li { margin-left: 20px; }

.bs-masthead-links a { color: rgb(255, 255, 255); }

@media (min-width: 768px) {=20
  .bs-masthead { text-align: left; padding-top: 140px; padding-bottom: 140p=
x; }
  .bs-masthead h1 { font-size: 100px; }
  .bs-masthead .lead { margin-right: 25%; font-size: 30px; }
  .bs-masthead .btn-outline-inverse { width: auto; margin: 20px 5px 20px 0p=
x; padding: 18px 24px; font-size: 21px; }
  .bs-masthead-links { padding: 0px; text-align: left; }
}

.bs-old-docs { padding: 15px 20px; color: rgb(119, 119, 119); border-top-wi=
dth: 1px; border-top-style: solid; border-top-color: rgb(255, 255, 255); bo=
rder-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rg=
b(229, 229, 229); background-color: rgb(250, 250, 250); }

.bs-old-docs strong { color: rgb(85, 85, 85); }

.show-grid { margin-bottom: 15px; }

.show-grid [class^=3D"col-"] { padding-top: 10px; padding-bottom: 10px; bor=
der: 1px solid rgba(86, 61, 124, 0.2); background-color: rgba(86, 61, 124, =
0.14902); }

.bs-example { position: relative; padding: 45px 15px 15px; margin: 0px -15p=
x 15px; box-shadow: rgba(0, 0, 0, 0.0470588) 0px 3px 6px inset; border-colo=
r: rgb(229, 229, 229) rgb(238, 238, 238) rgb(238, 238, 238); border-style: =
solid; border-width: 1px 0px; background-color: rgb(250, 250, 250); }

.bs-example::after { content: 'Example'; position: absolute; top: 15px; lef=
t: 15px; font-size: 12px; font-weight: bold; color: rgb(187, 187, 187); tex=
t-transform: uppercase; letter-spacing: 1px; }

.bs-example + .highlight { margin: -15px -15px 15px; border-top-left-radius=
: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; borde=
r-bottom-left-radius: 0px; border-width: 0px 0px 1px; }

@media (min-width: 768px) {=20
  .bs-example { margin-left: 0px; margin-right: 0px; border-width: 1px; bor=
der-color: rgb(221, 221, 221); border-top-left-radius: 4px; border-top-righ=
t-radius: 4px; border-bottom-right-radius: 0px; border-bottom-left-radius: =
0px; box-shadow: none; background-color: rgb(255, 255, 255); }
  .bs-example + .highlight { margin-top: -16px; margin-left: 0px; margin-ri=
ght: 0px; border-width: 1px; border-bottom-left-radius: 4px; border-bottom-=
right-radius: 4px; }
}

.bs-example .container { width: auto; }

.bs-example > p:last-child, .bs-example > ul:last-child, .bs-example > ol:l=
ast-child, .bs-example > blockquote:last-child, .bs-example > .form-control=
:last-child, .bs-example > .table:last-child, .bs-example > .navbar:last-ch=
ild, .bs-example > .jumbotron:last-child, .bs-example > .alert:last-child, =
.bs-example > .panel:last-child, .bs-example > .list-group:last-child, .bs-=
example > .well:last-child, .bs-example > .progress:last-child, .bs-example=
 > .table-responsive:last-child > .table { margin-bottom: 0px; }

.bs-example > p > .close { float: none; }

.bs-example-type .table .info { color: rgb(153, 153, 153); vertical-align: =
middle; }

.bs-example-type .table td { padding: 15px 0px; border-color: rgb(238, 238,=
 238); }

.bs-example-type .table tr:first-child td { border-top-width: 0px; }

.bs-example-type h1, .bs-example-type h2, .bs-example-type h3, .bs-example-=
type h4, .bs-example-type h5, .bs-example-type h6 { margin: 0px; }

.bs-example > .img-circle, .bs-example > .img-rounded, .bs-example > .img-t=
humbnail { margin: 5px; }

.bs-example > .table-responsive > .table { background-color: rgb(255, 255, =
255); }

.bs-example > .btn, .bs-example > .btn-group { margin-top: 5px; margin-bott=
om: 5px; }

.bs-example > .btn-toolbar + .btn-toolbar { margin-top: 10px; }

.bs-example-control-sizing select, .bs-example-control-sizing input[type=3D=
"text"] + input[type=3D"text"] { margin-top: 10px; }

.bs-example-form .input-group { margin-bottom: 10px; }

.bs-example > textarea.form-control { resize: vertical; }

.bs-example > .list-group { max-width: 400px; }

.bs-example .navbar:last-child { margin-bottom: 0px; }

.bs-navbar-top-example, .bs-navbar-bottom-example { z-index: 1; padding: 0p=
x; overflow: hidden; }

.bs-navbar-top-example .navbar-header, .bs-navbar-bottom-example .navbar-he=
ader { margin-left: 0px; }

.bs-navbar-top-example .navbar-fixed-top, .bs-navbar-bottom-example .navbar=
-fixed-bottom { position: relative; margin-left: 0px; margin-right: 0px; }

.bs-navbar-top-example { padding-bottom: 45px; }

.bs-navbar-top-example::after { top: auto; bottom: 15px; }

.bs-navbar-top-example .navbar-fixed-top { top: -1px; }

.bs-navbar-bottom-example { padding-top: 45px; }

.bs-navbar-bottom-example .navbar-fixed-bottom { bottom: -1px; }

.bs-navbar-bottom-example .navbar { margin-bottom: 0px; }

@media (min-width: 768px) {=20
  .bs-navbar-top-example .navbar-fixed-top, .bs-navbar-bottom-example .navb=
ar-fixed-bottom { position: absolute; }
  .bs-navbar-top-example { border-top-left-radius: 0px; border-top-right-ra=
dius: 0px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px;=
 }
  .bs-navbar-bottom-example { border-top-left-radius: 4px; border-top-right=
-radius: 4px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0=
px; }
}

.bs-example .pagination { margin-top: 10px; margin-bottom: 10px; }

.bs-example > .pager { margin-top: 0px; }

.bs-example-modal { background-color: rgb(245, 245, 245); }

.bs-example-modal .modal { position: relative; top: auto; right: auto; left=
: auto; bottom: auto; z-index: 1; display: block; }

.bs-example-modal .modal-dialog { left: auto; margin-left: auto; margin-rig=
ht: auto; }

.bs-example > .dropdown > .dropdown-menu { position: static; display: block=
; margin-bottom: 5px; }

.bs-example-tabs .nav-tabs { margin-bottom: 15px; }

.bs-example-tooltips { text-align: center; }

.bs-example-tooltips > .btn { margin-top: 5px; margin-bottom: 5px; }

.bs-example-popover { padding-bottom: 24px; background-color: rgb(249, 249,=
 249); }

.bs-example-popover .popover { position: relative; display: block; float: l=
eft; width: 260px; margin: 20px; }

.scrollspy-example { position: relative; height: 200px; margin-top: 10px; o=
verflow: auto; }

.highlight { display: none; padding: 9px 14px; margin-bottom: 14px; border:=
 1px solid rgb(225, 225, 232); border-top-left-radius: 4px; border-top-righ=
t-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: =
4px; background-color: rgb(247, 247, 249); }

.highlight pre { padding: 0px; margin-top: 0px; margin-bottom: 0px; border:=
 0px; white-space: nowrap; background-color: transparent; }

.highlight pre code { font-size: inherit; color: rgb(51, 51, 51); }

.highlight pre .lineno { display: inline-block; width: 22px; padding-right:=
 5px; margin-right: 10px; text-align: right; color: rgb(190, 190, 197); }

@media (min-width: 481px) {=20
  .highlight { display: block; }
}

.table-responsive .highlight pre { white-space: normal; }

.bs-table th small, .responsive-utilities th small { display: block; font-w=
eight: normal; color: rgb(153, 153, 153); }

.responsive-utilities tbody th { font-weight: normal; }

.responsive-utilities td { text-align: center; }

.responsive-utilities td.is-visible { color: rgb(70, 136, 71); background-c=
olor: rgb(223, 240, 216) !important; }

.responsive-utilities td.is-hidden { color: rgb(204, 204, 204); background-=
color: rgb(249, 249, 249) !important; }

.responsive-utilities-test { margin-top: 5px; }

.responsive-utilities-test .col-xs-6 { margin-bottom: 10px; }

.responsive-utilities-test span { padding: 15px 10px; font-size: 14px; font=
-weight: bold; line-height: 1.1; text-align: center; border-top-left-radius=
: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; borde=
r-bottom-left-radius: 4px; }

.visible-on .col-xs-6 .hidden-xs, .visible-on .col-xs-6 .hidden-sm, .visibl=
e-on .col-xs-6 .hidden-md, .visible-on .col-xs-6 .hidden-lg, .hidden-on .co=
l-xs-6 .hidden-xs, .hidden-on .col-xs-6 .hidden-sm, .hidden-on .col-xs-6 .h=
idden-md, .hidden-on .col-xs-6 .hidden-lg { color: rgb(153, 153, 153); bord=
er: 1px solid rgb(221, 221, 221); }

.visible-on .col-xs-6 .visible-xs, .visible-on .col-xs-6 .visible-sm, .visi=
ble-on .col-xs-6 .visible-md, .visible-on .col-xs-6 .visible-lg, .hidden-on=
 .col-xs-6 .visible-xs, .hidden-on .col-xs-6 .visible-sm, .hidden-on .col-x=
s-6 .visible-md, .hidden-on .col-xs-6 .visible-lg { color: rgb(70, 136, 71)=
; border: 1px solid rgb(214, 233, 198); background-color: rgb(223, 240, 216=
); }

.bs-glyphicons { padding-left: 0px; padding-bottom: 1px; margin-bottom: 20p=
x; list-style: none; overflow: hidden; }

.bs-glyphicons li { float: left; width: 25%; height: 115px; padding: 10px; =
margin: 0px -1px -1px 0px; font-size: 12px; line-height: 1.4; text-align: c=
enter; border: 1px solid rgb(221, 221, 221); }

.bs-glyphicons .glyphicon { margin-top: 5px; margin-bottom: 10px; font-size=
: 24px; }

.bs-glyphicons .glyphicon-class { display: block; text-align: center; }

.bs-glyphicons li:hover { background-color: rgba(86, 61, 124, 0.0980392); }

@media (min-width: 768px) {=20
  .bs-glyphicons li { width: 12.5%; }
}

.bs-customizer .toggle { float: right; margin-top: 85px; }

.bs-customizer label { margin-top: 10px; font-weight: 500; color: rgb(85, 8=
5, 85); }

.bs-customizer h2 { margin-top: 0px; margin-bottom: 5px; padding-top: 30px;=
 }

.bs-customizer h3 { margin-bottom: 0px; }

.bs-customizer h4 { margin-top: 15px; margin-bottom: 0px; }

.bs-customizer .bs-callout h4 { margin-top: 0px; margin-bottom: 5px; }

.bs-customizer input[type=3D"text"] { font-family: Menlo, Monaco, Consolas,=
 'Courier New', monospace; background-color: rgb(250, 250, 250); }

.bs-customizer .help-block { font-size: 12px; margin-bottom: 5px; }

#less-section label { font-weight: normal; }

.bs-examples h4 { margin-bottom: 5px; }

.bs-examples p { margin-bottom: 20px; }

#focusedInput { border-color: rgba(82, 168, 236, 0.8); outline: 0px; box-sh=
adow: rgba(82, 168, 236, 0.6) 0px 0px 8px; }

.docs-dl-options h4 { margin-top: 15px; margin-bottom: 5px; }

pre code { display: block; padding: 0.5em; color: rgb(101, 123, 131); }

.hljs-comment { color: rgb(147, 161, 161); font-style: italic; }

.hljs-id { color: rgb(38, 139, 210); }

.hljs-class { color: rgb(40, 74, 128); }

.hljs-tag { color: rgb(75, 94, 100); }

.hljs-variable { color: rgb(75, 94, 100); }

.hljs-attribute { color: rgb(75, 94, 100); }

.hljs-keyword { color: rgb(75, 94, 100); }

.hljs-built_in { color: rgb(75, 94, 100); }

.hljs-value { color: rgb(42, 161, 152); }

.hljs-number { color: rgb(42, 161, 152); }

.hljs-hexcolor { color: rgb(42, 161, 152); }

.hljs-literal { color: rgb(42, 161, 152); }

.hljs-string { color: rgb(42, 161, 152); }

.hljs-attr_selector { color: rgb(211, 54, 130); }

.hljs-at_rule { color: rgb(203, 75, 22); }

.lang-less .hljs-built_in { color: rgb(133, 153, 0); }

h1, h2, h3 { margin-top: 30px; margin-bottom: 15px; }

*, ::before, ::after { box-sizing: border-box; }

html { font-size: 62.5%; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }

body { font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, 'Micro=
soft YaHei', sans-serif; font-size: 14px; line-height: 1.42857143; color: r=
gb(51, 51, 51); background-color: rgb(247, 247, 247); }

input, button, select, textarea { font-family: inherit; font-size: inherit;=
 line-height: inherit; }

a { color: rgb(67, 117, 158); text-decoration: none; }

a:hover, a:focus { color: rgb(44, 77, 104); text-decoration: underline; }

a:focus { outline: -webkit-focus-ring-color auto 5px; outline-offset: -2px;=
 }

img { vertical-align: middle; }

.img-responsive { display: block; max-width: 100%; height: auto; }

.img-rounded { border-top-left-radius: 6px; border-top-right-radius: 6px; b=
order-bottom-right-radius: 6px; border-bottom-left-radius: 6px; }

.img-thumbnail { padding: 4px; line-height: 1.42857143; border: 1px solid r=
gb(221, 221, 221); border-top-left-radius: 4px; border-top-right-radius: 4p=
x; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; transit=
ion: all 0.2s ease-in-out; -webkit-transition: all 0.2s ease-in-out; displa=
y: inline-block; max-width: 100%; height: auto; background-color: rgb(247, =
247, 247); }

.img-circle { border-top-left-radius: 50%; border-top-right-radius: 50%; bo=
rder-bottom-right-radius: 50%; border-bottom-left-radius: 50%; }

hr { margin-top: 20px; margin-bottom: 20px; border-width: 1px 0px 0px; bord=
er-top-style: solid; border-top-color: rgb(238, 238, 238); }

.sr-only { position: absolute; width: 1px; height: 1px; margin: -1px; paddi=
ng: 0px; overflow: hidden; clip: rect(0px 0px 0px 0px); border: 0px; }

.ad { overflow: hidden; text-align: left; box-shadow: rgba(0, 0, 0, 0.07450=
98) 0px 3px 5px inset; width: auto !important; margin: 50px -30px -40px !im=
portant; padding: 20px !important; height: auto !important; font-size: 13px=
 !important; line-height: 16px !important; border: 0px !important; backgrou=
nd: rgb(23, 43, 74) !important; }

.ad-img { margin: 0px !important; }

.ad-text, .ad-tag { float: none !important; display: block !important; widt=
h: auto !important; height: auto !important; margin-left: 145px !important;=
 font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif !important; }

.ad-text { padding-top: 0px !important; }

.ad-tag { color: rgb(185, 200, 224) !important; text-align: left !important=
; }

.ad-text a, .ad-tag a { color: rgb(255, 255, 255) !important; }

.ad #adsense > img { display: none; }

@media (min-width: 768px) {=20
  .ad { border-top-left-radius: 4px; border-top-right-radius: 4px; border-b=
ottom-right-radius: 4px; border-bottom-left-radius: 4px; box-shadow: rgba(0=
, 0, 0, 0.0745098) 0px 3px 5px inset, rgba(255, 255, 255, 0.0980392) 0px 1p=
x 0px; margin: 0px !important; }
}

@media (min-width: 992px) {=20
  .ad { position: absolute; top: 20px; right: 15px; padding: 15px !importan=
t; width: 330px !important; }
}

.docs-home .ad { margin: 0px -15px 40px !important; }

@media (min-width: 480px) {=20
  .docs-home .ad { border-top-left-radius: 4px; border-top-right-radius: 4p=
x; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; width: =
330px !important; margin: 0px auto 40px !important; }
}

@media (min-width: 768px) {=20
  .docs-home .ad { float: left; width: 330px !important; margin: 0px 0px 30=
px !important; }
  .docs-home .bs-social, .docs-home .bs-masthead-links { margin-left: 350px=
; }
  .docs-home .bs-social { margin-bottom: 10px; }
  .docs-home .bs-masthead-links { margin-top: 10px; }
}

@media (min-width: 992px) {=20
  .docs-home .ad { position: static; }
}

@media (min-width: 1170px) {=20
  .docs-home .ad { margin-top: -25px !important; }
}

.banner { padding: 15px 20px; color: rgb(119, 119, 119); border-top-width: =
1px; border-top-style: solid; border-top-color: rgb(255, 255, 255); border-=
bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(229=
, 229, 229); background-color: rgb(250, 250, 250); }

.banner strong { color: rgb(85, 85, 85); }

.callout { margin: 20px 0px; padding: 20px; border-left-width: 3px; border-=
left-style: solid; border-left-color: rgb(238, 238, 238); }

.callout h4 { margin-top: 0px; margin-bottom: 5px; }

.callout p:last-child { margin-bottom: 0px; }

.callout-info { border-color: rgb(188, 232, 241); background-color: rgb(244=
, 248, 250); }

.callout-info h4 { color: rgb(58, 135, 173); }

.callout-warning { border-color: rgb(250, 235, 204); background-color: rgb(=
250, 248, 240); }

.callout-warning h4 { color: rgb(192, 152, 83); }

.callout-danger { border-color: rgb(238, 211, 215); background-color: rgb(2=
53, 247, 247); }

.callout-danger h4 { color: rgb(185, 74, 72); }

.docs-header, .docs-home { color: rgb(185, 200, 224); background-color: rgb=
(29, 54, 93); }

.docs-header { padding: 30px 15px 50px; font-size: 16px; text-align: center=
; text-shadow: rgba(0, 0, 0, 0.14902) 0px 1px 0px; }

.docs-header h1 { color: rgb(255, 255, 255); }

.docs-header p { font-weight: 300; line-height: 1.5; }

.docs-header .container { position: relative; }

@media (min-width: 768px) {=20
  .docs-header { font-size: 21px; text-align: left; }
  .docs-header h1 { font-size: 60px; line-height: 1; }
}

@media (min-width: 992px) {=20
  .docs-header h1, .docs-header p { margin-right: 380px; }
}

.footer { padding-top: 40px; padding-bottom: 30px; margin-top: 100px; color=
: rgb(119, 119, 119); text-align: center; border-top-width: 1px; border-top=
-style: solid; border-top-color: rgb(238, 238, 238); background: rgb(255, 2=
55, 255); }

.footer-links { margin: 10px 0px; padding-left: 0px; }

.footer-links li { display: inline; padding: 0px 2px; }

.footer-links li:first-child { padding-left: 0px; }

@media (min-width: 768px) {=20
  .footer { text-align: left; }
  .footer p { margin-bottom: 0px; }
}

.less-team .team-member { color: rgb(85, 85, 85); line-height: 32px; }

.less-team .team-member:hover { color: rgb(51, 51, 51); text-decoration: no=
ne; }

.less-team .github-btn { float: right; margin-top: 6px; width: 185px; heigh=
t: 20px; }

.less-team img { float: left; width: 32px; margin-right: 10px; border-top-l=
eft-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: =
4px; border-bottom-left-radius: 4px; }

.docs-section table { margin-bottom: 20px; }

.docs-section td { padding: 0px 10px 5px 0px; }

.docs-content { position: relative; overflow: hidden; padding: 1px 60px 80p=
x; margin: 0px -15px; border: none; border-top-left-radius: 0px; border-top=
-right-radius: 0px; border-bottom-right-radius: 4px; border-bottom-left-rad=
ius: 4px; background: rgb(255, 255, 255); }

.docs-content .container-fluid { padding: 0px; }

.docs-content { -webkit-box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 4px; box-sha=
dow: rgba(0, 0, 0, 0.2) 0px 2px 4px; }

.docs-section + .docs-section { padding-top: 40px; }

.sidebar { display: none; }

.sidebar.affix { position: static; }

.sidenav { margin-top: 30px; margin-bottom: 30px; padding-top: 10px; paddin=
g-bottom: 10px; text-shadow: rgba(255, 255, 255, 0.498039) 0px 1px 0px; bor=
der-top-left-radius: 5px; border-top-right-radius: 5px; border-bottom-right=
-radius: 5px; border-bottom-left-radius: 5px; background-color: rgb(247, 24=
7, 247); }

.sidebar .nav > li > a { display: block; color: rgb(54, 85, 110); padding: =
5px 20px; }

.sidebar .nav > li > a:hover, .sidebar .nav > li > a:focus { text-decoratio=
n: none; border-right-width: 1px; border-right-style: solid; border-right-c=
olor: rgb(216, 221, 226); background-color: rgb(232, 235, 238); }

.sidebar .nav > .active > a, .sidebar .nav > .active:hover > a, .sidebar .n=
av > .active:focus > a { font-weight: bold; color: rgb(29, 54, 93); border-=
right-width: 1px; border-right-style: solid; border-right-color: rgb(29, 54=
, 93); background-color: transparent; }

.sidebar .nav .nav { display: none; margin-bottom: 8px; }

.sidebar .nav .nav > li > a { padding: 3px 30px; font-size: 90%; }

.sidebar .glyphicon { font-size: 12px; margin-left: 10px; }

@media (min-width: 992px) {=20
  .sidebar { display: block; padding-top: 15px; }
  .sidebar .nav > .active > ul { display: block; }
  .sidebar.affix, .sidebar.affix-bottom { width: 213px; }
  .sidebar.affix { position: fixed; top: 45px; }
  .sidebar.affix-bottom { position: absolute; }
  .sidebar.affix .sidenav, .sidebar.affix-bottom .sidenav { margin-top: 10p=
x; margin-bottom: 0px; }
}

@media (min-width: 1200px) {=20
  .sidebar.affix-bottom, .sidebar.affix { width: 263px; }
}

.docs-nav { text-shadow: rgba(0, 0, 0, 0.14902) 0px -1px 0px; border-color:=
 rgba(0, 0, 0, 0.2); box-shadow: rgba(255, 255, 255, 0.0666667) 0px 1px 0px=
; background-color: rgb(29, 54, 93); }

.docs-nav .navbar-collapse { border-color: rgb(17, 31, 54); }

.docs-nav .container .navbar-brand { margin: 12px 0px 0px; width: 100px; pa=
dding: 0px; }

.docs-nav .container .navbar-brand img { display: block; max-width: 100%; h=
eight: auto; }

.docs-nav .navbar-nav > li > a, .docs-nav .navbar-nav > li > span { color: =
rgb(185, 200, 224); }

.docs-nav .navbar-nav > li > a:hover, .docs-nav .navbar-nav > li > span:hov=
er { color: rgb(255, 255, 255); }

.docs-nav .navbar-nav > .active > a, .docs-nav .navbar-nav > .active > span=
, .docs-nav .navbar-nav > .active > a:hover, .docs-nav .navbar-nav > .activ=
e > span:hover { color: rgb(255, 255, 255); background-color: rgba(0, 0, 0,=
 0.2); }

.docs-nav .navbar-toggle { border-color: rgb(29, 54, 93); }

.docs-nav .navbar-toggle:hover { border-color: rgb(17, 31, 54); background-=
color: rgb(17, 31, 54); }

.btn-outline { color: rgb(29, 54, 93); border-color: rgb(229, 229, 229); ba=
ckground-color: rgb(255, 255, 255); }

.btn-outline:hover, .btn-outline:focus, .btn-outline:active { color: rgb(25=
5, 255, 255); border-color: rgb(29, 54, 93); background-color: rgb(29, 54, =
93); }

.btn-outline-inverse { color: rgb(255, 255, 255); border-color: rgb(185, 20=
0, 224); background-color: transparent; }

.btn-outline-inverse:hover, .btn-outline-inverse:focus, .btn-outline-invers=
e:active { color: rgb(29, 54, 93); text-shadow: none; border-color: rgb(255=
, 255, 255); background-color: rgb(255, 255, 255); }

.anchor, .anchor:empty { position: absolute; top: auto; bottom: 0px; left: =
0px; color: transparent; font-size: 18px; padding: 10px 10px 10px 25px; wid=
th: 60px; }

h2 .anchor { margin-bottom: -3px; }

h3 .anchor { margin-bottom: -7px; }

h4 .anchor { margin-bottom: -11px; }

h1, h2, h3 { position: relative; padding-left: 60px; margin-left: -60px; }

h1 .anchor:hover, h2 .anchor:hover, h3 .anchor:hover { color: rgb(19, 19, 1=
9); visibility: visible; text-decoration: none; }

.anchor-target { position: absolute; margin-top: -80px; padding-top: 80px; =
}

.anchor-target-small { margin-top: -40px; padding-top: 40px; }

.section-content .source-link { top: -5px; width: 100px; padding: 15px; col=
or: rgb(153, 153, 153); font-size: 18px; text-align: right; }

.section-content .source-link.active, .section-content .source-link:hover {=
 color: rgb(67, 117, 158); text-decoration: none; }

.section-content .source-link.right { float: right; }

.popover-source { }

.popover-source .glyphicon-new-window { font-size: 12px; padding-left: 6px;=
 }

.popover-source, .popover-source .glyphicon-new-window, .popover-source:hov=
er, .popover-source .glyphicon-new-window:hover { color: rgb(67, 117, 158);=
 }

.popover-source.left { margin-top: 2px; margin-left: 60px; }

.clearfix::before, .clearfix::after { content: ' '; display: table; }

.clearfix::after { clear: both; }

.center-block { display: block; margin-left: auto; margin-right: auto; }

.pull-right { float: right !important; }

.pull-left { float: left !important; }

.hide { display: none !important; }

.show { display: block !important; }

.invisible { visibility: hidden; }

.text-hide { font-style: normal; font-variant: normal; font-weight: normal;=
 font-stretch: normal; font-size: 0px; line-height: 0; font-family: a; colo=
r: transparent; text-shadow: none; border: 0px; background-color: transpare=
nt; }

.hidden { display: none !important; visibility: hidden !important; }

.affix { position: fixed; }

.visible-xs, tr.visible-xs, th.visible-xs, td.visible-xs { display: none !i=
mportant; }

@media (max-width: 767px) {=20
  .visible-xs { display: block !important; }
  tr.visible-xs { display: table-row !important; }
  th.visible-xs, td.visible-xs { display: table-cell !important; }
}

@media (max-width: 991px) and (min-width: 768px) {=20
  .visible-xs.visible-sm { display: block !important; }
  tr.visible-xs.visible-sm { display: table-row !important; }
  th.visible-xs.visible-sm, td.visible-xs.visible-sm { display: table-cell =
!important; }
}

@media (max-width: 1199px) and (min-width: 992px) {=20
  .visible-xs.visible-md { display: block !important; }
  tr.visible-xs.visible-md { display: table-row !important; }
  th.visible-xs.visible-md, td.visible-xs.visible-md { display: table-cell =
!important; }
}

@media (min-width: 1200px) {=20
  .visible-xs.visible-lg { display: block !important; }
  tr.visible-xs.visible-lg { display: table-row !important; }
  th.visible-xs.visible-lg, td.visible-xs.visible-lg { display: table-cell =
!important; }
}

.visible-sm, tr.visible-sm, th.visible-sm, td.visible-sm { display: none !i=
mportant; }

@media (max-width: 767px) {=20
  .visible-sm.visible-xs { display: block !important; }
  tr.visible-sm.visible-xs { display: table-row !important; }
  th.visible-sm.visible-xs, td.visible-sm.visible-xs { display: table-cell =
!important; }
}

@media (max-width: 991px) and (min-width: 768px) {=20
  .visible-sm { display: block !important; }
  tr.visible-sm { display: table-row !important; }
  th.visible-sm, td.visible-sm { display: table-cell !important; }
}

@media (max-width: 1199px) and (min-width: 992px) {=20
  .visible-sm.visible-md { display: block !important; }
  tr.visible-sm.visible-md { display: table-row !important; }
  th.visible-sm.visible-md, td.visible-sm.visible-md { display: table-cell =
!important; }
}

@media (min-width: 1200px) {=20
  .visible-sm.visible-lg { display: block !important; }
  tr.visible-sm.visible-lg { display: table-row !important; }
  th.visible-sm.visible-lg, td.visible-sm.visible-lg { display: table-cell =
!important; }
}

.visible-md, tr.visible-md, th.visible-md, td.visible-md { display: none !i=
mportant; }

@media (max-width: 767px) {=20
  .visible-md.visible-xs { display: block !important; }
  tr.visible-md.visible-xs { display: table-row !important; }
  th.visible-md.visible-xs, td.visible-md.visible-xs { display: table-cell =
!important; }
}

@media (max-width: 991px) and (min-width: 768px) {=20
  .visible-md.visible-sm { display: block !important; }
  tr.visible-md.visible-sm { display: table-row !important; }
  th.visible-md.visible-sm, td.visible-md.visible-sm { display: table-cell =
!important; }
}

@media (max-width: 1199px) and (min-width: 992px) {=20
  .visible-md { display: block !important; }
  tr.visible-md { display: table-row !important; }
  th.visible-md, td.visible-md { display: table-cell !important; }
}

@media (min-width: 1200px) {=20
  .visible-md.visible-lg { display: block !important; }
  tr.visible-md.visible-lg { display: table-row !important; }
  th.visible-md.visible-lg, td.visible-md.visible-lg { display: table-cell =
!important; }
}

.visible-lg, tr.visible-lg, th.visible-lg, td.visible-lg { display: none !i=
mportant; }

@media (max-width: 767px) {=20
  .visible-lg.visible-xs { display: block !important; }
  tr.visible-lg.visible-xs { display: table-row !important; }
  th.visible-lg.visible-xs, td.visible-lg.visible-xs { display: table-cell =
!important; }
}

@media (max-width: 991px) and (min-width: 768px) {=20
  .visible-lg.visible-sm { display: block !important; }
  tr.visible-lg.visible-sm { display: table-row !important; }
  th.visible-lg.visible-sm, td.visible-lg.visible-sm { display: table-cell =
!important; }
}

@media (max-width: 1199px) and (min-width: 992px) {=20
  .visible-lg.visible-md { display: block !important; }
  tr.visible-lg.visible-md { display: table-row !important; }
  th.visible-lg.visible-md, td.visible-lg.visible-md { display: table-cell =
!important; }
}

@media (min-width: 1200px) {=20
  .visible-lg { display: block !important; }
  tr.visible-lg { display: table-row !important; }
  th.visible-lg, td.visible-lg { display: table-cell !important; }
}

.hidden-xs { display: block !important; }

tr.hidden-xs { display: table-row !important; }

th.hidden-xs, td.hidden-xs { display: table-cell !important; }

@media (max-width: 767px) {=20
  .hidden-xs, tr.hidden-xs, th.hidden-xs, td.hidden-xs { display: none !imp=
ortant; }
}

@media (max-width: 991px) and (min-width: 768px) {=20
  .hidden-xs.hidden-sm, tr.hidden-xs.hidden-sm, th.hidden-xs.hidden-sm, td.=
hidden-xs.hidden-sm { display: none !important; }
}

@media (max-width: 1199px) and (min-width: 992px) {=20
  .hidden-xs.hidden-md, tr.hidden-xs.hidden-md, th.hidden-xs.hidden-md, td.=
hidden-xs.hidden-md { display: none !important; }
}

@media (min-width: 1200px) {=20
  .hidden-xs.hidden-lg, tr.hidden-xs.hidden-lg, th.hidden-xs.hidden-lg, td.=
hidden-xs.hidden-lg { display: none !important; }
}

.hidden-sm { display: block !important; }

tr.hidden-sm { display: table-row !important; }

th.hidden-sm, td.hidden-sm { display: table-cell !important; }

@media (max-width: 767px) {=20
  .hidden-sm.hidden-xs, tr.hidden-sm.hidden-xs, th.hidden-sm.hidden-xs, td.=
hidden-sm.hidden-xs { display: none !important; }
}

@media (max-width: 991px) and (min-width: 768px) {=20
  .hidden-sm, tr.hidden-sm, th.hidden-sm, td.hidden-sm { display: none !imp=
ortant; }
}

@media (max-width: 1199px) and (min-width: 992px) {=20
  .hidden-sm.hidden-md, tr.hidden-sm.hidden-md, th.hidden-sm.hidden-md, td.=
hidden-sm.hidden-md { display: none !important; }
}

@media (min-width: 1200px) {=20
  .hidden-sm.hidden-lg, tr.hidden-sm.hidden-lg, th.hidden-sm.hidden-lg, td.=
hidden-sm.hidden-lg { display: none !important; }
}

.hidden-md { display: block !important; }

tr.hidden-md { display: table-row !important; }

th.hidden-md, td.hidden-md { display: table-cell !important; }

@media (max-width: 767px) {=20
  .hidden-md.hidden-xs, tr.hidden-md.hidden-xs, th.hidden-md.hidden-xs, td.=
hidden-md.hidden-xs { display: none !important; }
}

@media (max-width: 991px) and (min-width: 768px) {=20
  .hidden-md.hidden-sm, tr.hidden-md.hidden-sm, th.hidden-md.hidden-sm, td.=
hidden-md.hidden-sm { display: none !important; }
}

@media (max-width: 1199px) and (min-width: 992px) {=20
  .hidden-md, tr.hidden-md, th.hidden-md, td.hidden-md { display: none !imp=
ortant; }
}

@media (min-width: 1200px) {=20
  .hidden-md.hidden-lg, tr.hidden-md.hidden-lg, th.hidden-md.hidden-lg, td.=
hidden-md.hidden-lg { display: none !important; }
}

.hidden-lg { display: block !important; }

tr.hidden-lg { display: table-row !important; }

th.hidden-lg, td.hidden-lg { display: table-cell !important; }

@media (max-width: 767px) {=20
  .hidden-lg.hidden-xs, tr.hidden-lg.hidden-xs, th.hidden-lg.hidden-xs, td.=
hidden-lg.hidden-xs { display: none !important; }
}

@media (max-width: 991px) and (min-width: 768px) {=20
  .hidden-lg.hidden-sm, tr.hidden-lg.hidden-sm, th.hidden-lg.hidden-sm, td.=
hidden-lg.hidden-sm { display: none !important; }
}

@media (max-width: 1199px) and (min-width: 992px) {=20
  .hidden-lg.hidden-md, tr.hidden-lg.hidden-md, th.hidden-lg.hidden-md, td.=
hidden-lg.hidden-md { display: none !important; }
}

@media (min-width: 1200px) {=20
  .hidden-lg, tr.hidden-lg, th.hidden-lg, td.hidden-lg { display: none !imp=
ortant; }
}

.visible-print, tr.visible-print, th.visible-print, td.visible-print { disp=
lay: none !important; }

@media print {=20
  .visible-print { display: block !important; }
  tr.visible-print { display: table-row !important; }
  th.visible-print, td.visible-print { display: table-cell !important; }
  .hidden-print, tr.hidden-print, th.hidden-print, td.hidden-print { displa=
y: none !important; }
}
------=_NextPart_000_25A7_00BE17D0.638B6235
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://s.nodejs.cn/less/img/logo.png

iVBORw0KGgoAAAANSUhEUgAAAMcAAABRCAYAAABmOrKYAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAANalJREFUeNrsfQeAFNX9/2e23O71fke5ox3SmxRRRCNiQ42xYcT8raD+
IhprjBhLmppmjQELQYwkIlhiV0QxKCgISBWkH+3gDo674+re7rz/+76Z2Z2ZnbJXQIzM8dg25c2b
7+fb3/dJjDG09xYOh8Wrz+cT7+kafr8fsiwP5u+H89ch/LXE4/F04C3DfLxdnyRJMnzmx+L5WW9j
ymOvluDY9r3bpv1+0pbx552CSCRCz7ypubm5IhAIlL7wwgtrqqqqVpWXl3/59NNPH2psbCTaafV1
WkvjviMwBkmciMfzm7uRt6G8pWqETjdsddOJgiMpKQnBgA+ZmWno1W+wQxek2Ivk8LvpG48kWXwr
OV/Dwxu/Jckj2e/a1o0pTRsnGhflPXM9UFaPV99ZnNjhmsrDcdnB+BWL/ibFOs63b79ZDyb5SxiT
0dTUJO6BmB0HCCZOnCj22bVr15bzzjtvzuTJk6evXbt265EG7+EGx1B+w49zznCqJk1oANw2SZIS
/r0p1Izq6lps2rTJvJNKstq+njgcKOdRmxR/DY92tKHLHt1JjMfG9TvaB/rP5b4lZ7DqOAdvchw9
MuMH9bMeMCxG2zL9i5jOETueCYalP6OsO41sDQjZzNTkeEangpK+qa6tQ6g5xIfIEx03jVE2NDSI
1w4dOpQUFRVNWbJkyQ1Tp059+Je//OUT0RN/z8ExgYPiOQ6KtLaIRLeNuLvXQ68m4tIRqkeSjNLD
ggglPUAkhbA95n0kjwXh6j4zo4QS++sBQoRiAAmzBJM9U2bqPjqgCwkiR5mAxqmluJuVBLnT4czD
4NV+kzUYSDHweSTTZb3qteTomeMfhHo9WTvKK04uSzpQqz8rUtmdCZIUCYVCpCHk3nXXXY8OGjTo
RC5Jruc0VX0kwOE5HCflN/0T/vIiv7F2AQYNotYsJU+cRsFUDov4JsP6e/15iMhlGBsUIoxXH+T4
E7DY/kyOqFyYxTivdh5majRWVk07hu/DWETlvrLynoWjnRSqEpNtb4wAJIld5eh9MXMfGNTruI2R
xbjKiJMcyn2x6OnF2DLTsLk8ewIJSZOzzjpr/IIFC17mX6cfdeAg1SiB1pUP+DR+Q/6ERJfXK2wH
c7NSbTVOowEl+p063raDrekStqhihj/9d2YqYEyGK+okIzCZyiA0waIRdtvsDiN1McN/zHCPAqRM
uabMIrr7lZW+WqJAxxmkKJLi+2EARexYJgDG4uSjpNsz4FcUlyR/QqQiADJ69OhxDz/88O+POrUq
EaufE+sfODA6JsIRyIN18OBBLF62GouXrsX6zTtR3xTC6BGDcN/t1wiR6iZ69SxN655yjO5BR1UZ
GRZGhM5gtDq7wnEFAbiyEqY7DYvpV0Qosnpt6gszmMeQEuRRzIbdGoHhNvBm7LC4oWQ2an280W91
PdmwHzMDGApokoNJmPPe52hqqMaIIb1xXI8uiERkLiXCrqrWnXfe+X/PPvvs66WlpQu/T+AYyPe5
jPZzImqhGvF9np7+Mv7x8vvYsqsSXn8yvEkBhJsY8gqqW2Sgu1GDQtcqsYoXC0pnLE7nZ2bwqLsw
JlsLYI3wJDPYYioLk1icNcAQsbFjmOm9NTOwB4YcI1DtFszPULJQSRN1Ysnmg2XD+ZkDLgNJfixe
sRnzP/8aOekBXDB2OO684WJ0KsxHY6jZUXtJTk4O3H333ddPnjx5Ef8qclSAg/zRjjqax3M5tzGS
3M5DEuPBP/4dj059DWmFXZDfsbtCdHz46uub6OZbBgq9wcrMniem0qqkZ40qQPRShEWJUU8/khQ7
vcQkI3FJmhmsgs2ACWYtlTRVQ1UHo8JGsqNGFucbNTiYbBmWbPQkgRn2Z2ZjjZmPYxb2HEsAMXG+
M1tGS+pzIJCHZk7wM99cghXflOLFx25HUYc8hFwkyGl84y9deNv2fbA56PGe6SZdkjjHWPb1Wkx7
6T1kF5UgLS1D5TiaTmsU3W4AEfYeHR9hqqHKovouUw1LoRbzN0qDqcmx3+R4erPoko0vwMmm0Vv2
UUMkenKtz4jre/y9MO18DnENxVBXj5GZDZBYvN2gjYneHxAdJ/XKMlPjU5pbQP8XtWR09htifQGL
k1zUV69XQlZWJlZv2ofnZ8+Hx+txdPlTXKRfv36devXqdcJRY5DrvUYWrZjv0t39HB689eFnaAx7
OdcIKCpF1NMqJ8CVHCSHbOU1Ub0vcUyQWXM8mcUZqRpBGh6yZpyrbhimepIQ9Rg5dZbpYhZMd45E
bpRZW7hRtSYSF++IGt76+4p6yGLnkZkF6HRGvsGWUF3IceDVQBjlAfr4iZlR6JlFBCkpQXy27Fsc
rK7l4LBniqoH1DNq1KjjjxpweL1ep1bEd8lz4va0X1NjA9Zt3I6klDSFG8m6pn1mUgvUKr0Xyegp
MRiQsSdn4Zc0PyxbnmwZfNP/RaP+zKrpMdcCV66BjWvdVM+pu5Ygvui5zO5ZC4eUnRpm8sIJEAjG
EYl6vpwlJSzGSVFDrW5ba14uMXbvO4h9+6stshPibd/Ro0dT2lDKUWFz+J1dbpnkSXAiaPqprqER
ZeVV8PsCtty7xZLDMvbgiQ5krEtSAk4qxbMUfThRU8VkfMYZspLhLRGqJJkDj3LrQ0zMBqdyvE3i
areYbQzGoqa7lSvC0pB36GC86sQcbCr9sDGunkewt6IKfUo6A81wUdGTKBUpyFv9dw6O9pBCJC2a
I7LQK63otXXgsJS90R4x5om5d5mT41Zzx3r0QQnVUaW6dLW+yVYnkYySx0xrhv0jLpLRYwEoM/Ex
i3gOdMFu5oCwWJBOZkzntjaa1GTLwdGmMjEWB2Aw5n4Ocuceqq23fEIW52Y4jFu7xzkSQlGc56il
vo74fkkG4tBFYeNgq3qkNGK3Qgp/iGH1QcoRFjVItb57ubFIKiId5/VIRlBLkuVdRK+lly6M2fMB
KRJFmHZbitNAMYYjckS9NSVrQNL1RYq7oYhBkkWDc1FbjDmOvGaLhCl7Vh0TbZzolB4xHtQHphsC
KV4zYIl5vDymPLTDjIEjIjmOns3sReUExTzGnCYlT8o46PTQG0IhcVBacgDJvBXmZiA7IxUZqUHV
U9KM8spDKD9Yi/qGZtTVN4kM3OQkv5KJy5il3sVMKJScxZewGUjCNjWFRAQ5GPQjIxhAXnYqsjKS
ef+CgmgIMAd4f2obQqiorEFzWEZDYxOamiP8OB9XX72c2Jg155X0TgCjWkRu+6YmxZ2awq8dCCYh
PzsdGWlBMR5a16tr6vi1m1BxsAYN/LWxMYQG3mef14ckfm1jdnKiWgGzlELfe3Do06jdPTbMQjNg
rQdD3Bd6yWDW92OKUrhZFtm9WZkpOG1kH5w4pCcG9y5G96ICpHCA+H0e+HweVVtjfN8w6jkRbCnd
i1Xrd+HzFd/iqzXbOVDCgoi9Ho+FLsUMYpLpwKvn9NSrUCgiiLOkOB8jB/fAiAHd0Kt7IToVZovg
WZLfK9JuNFUlxPvDcYTa+kbsLDvA+7UP67eW4ZvNe7BhSxmqDtUKEKVycCFmZlsOYJiDisYil4Nw
7In9cMKgHhjIx6Jb5wKkpyaDbi1JpH0onaeIdphfPMSP27PvALbtKsf6Lfy6m3dhzbc7sO9ADRo5
WIjRCMkWNywt8Jv/YCRHAmPgFmm3P6Fk7YwRcy0ohVcWdgg9DOK4RQVZuOy8E3HxmcNR0rXQ1Adj
eji5GAkw1PI4Jx055DjcMGEMB8l2zHhtId7/bB0HTrNIj0gIyTobKMwlHBHS4F5dcPVFJ+Hs0f05
p05xdY0HAsq1UpKTUMAl3bAB3aNxqV17D2IRB+/8xevw5ddb+DWgqD/axXWp5vVc4hTmpmPC+afj
snNHohtnDvp4RCQsmwiaJrF5hXRK4febk9UFA/t0wwVnkO0Q5pLsEFas3YKPv1iDjxevwcHqeqOL
lh0dIDji4EiMsG28VUxug9SwJkChCMsqSvi/5kizeDb/74JRuP2acwRX1nzojpOtWLxhSTr34L7d
8OR93XD519/iD1PfxOpNezlAAohpc5J9FzmxNnB1LSXgx22TzsWk8acICaGoehHjrgkyC7oHsgO6
FeWLduHYoTjzygexu7IZSUm+mJQWHuSIUMMuOH0o7rnxx2J/DVyGdBDmkFpCqpguA5tss/ycdJw7
Zrhov7jvCfz7vWVIT0uz93JprnSGH7bk0OIQ7hFw5q6iqT59vTlp8CyZJjM1ckLMzkjB7267FBed
dYLqJYk4cGfJxTEmR8n/pON745UnbsaDT87FKx8sF6kwXo/X1v+v9acgJwOP3nMZThne27U/iTvs
mDDGyXlQVX0IZWVl8Cbn67xQaqSbg/2uieNw+7XnRkHRVkNYODAiZLuI+RjYsXOPmnwp2UsM+eiS
Jt8NOJjZ02QStSwxcEUfguUlmDECoeouDdxW6NYpD3/7zXUY2r+beGCywwNJhFMbUrM5UaelpuCv
U65EVnoynnnlc6Ry1cgTzQaWda9cgoUj3NgP4NnfX43j+3ZpF1Bo/dYT9+atO9EYkpGa4okCg36n
HKZf3fBj3HLV2WIsNO5v6ZJthX1JwKw8eJDbI5VcBUtyTHuJPizp6ACH5zsDh4jiRkSzjGi7SBzj
6SJxOVVmoNB35EnJ5xx6+iM3CGAQIbYFGFbX0rg+2QL333IZfnrOYNRyg1hINq6Hi4k/cjgaX2jm
6szd15/brsCwIublazaiMaz4WZkKDGIUZ44eqACDyQa1yCW+4K5u6cBRyqVG6e4KVVVkBnsu2iLq
ZK6IfNSoVe0KjkS4jYn6VKe4nBAROp3P7gFqjVQfsg0evedn6NuzyJUQEwGG06ad/3e3XY5BJfmo
q2uMizE0cgP4lOE9hd3DWMtmTNK96Jv9fsp9LF6+Dl5fUJ2IpdgH2ZmpmHLjBWp/5YTvTZuRqTWz
lDJvXy5bw4EY5tf3WqtSsnPcw+EZsO8LOGQnbmrwocsRnQql2gyIoHWJh1pyTiQ+l0m31dXXY/LP
zsDYkwe62hfmh2/VvF6va8/oOmlpqXjw1kvgk0KKbSIzgx//6otG6+wDZ+ZA19SuT0Z0Q32DmB3X
HArF9zE6U9LDOfdufLV6M+9LmsKZSb1sCuHsUwaiV/eOwrOUCBPQZmmSS5auqzX6TEmk0d+9HoN0
eO/jJfAFU9X70EkK2TrhK1Gng8/nCxw1NofTfHB+Q0E3zkq2BfnkKyqr4PFlGuOxsidqQzDWkpiJ
ZHZL6T4q/aW4xMDeXXHzVec4GvnadxonXrV2PT5d/DW+XrcN5QeqxfddOhfglBMG4tyxJyIzI91V
AtGYnTRsAC4aOwT/fm8FMtPTBQ8IcaO3S4dsDO3XLSHCVGqANeOdeZ/hP+9/jtKyA3ysVCBzAGSk
p6B7cQFOHNoXQ/qXcKIv5kSqPF7Kgq6qiyAvzSskB9kWfp+EMSP7WYQamOW4UF7dkmUrMfs/H2PV
+q3cfomlv6SmBNExPwdDB/TEyKH90btnMbKzFe/fmnXfCmCmpOVzDVp2dOMqQU0ZdY2NCUnrzMxM
ukjSUQEOSiy0kwqccHpZEZyBEPnLIVGSJcIHW7IQPJJlEQNnj5WO81h6QiShQvz8ijPFQ9R7Yszn
1LhzdXUN7nt4Gma/uxgh2Qd/cho8nNCICJd9W4FX3l+BvrM+xJ+nXINRwwc4AkQbr2vGn47X53+F
MLc3CGRkCPfq0RF53AYyH28eY1KNQqEm3HjnH/HaB1/Bn5aDpEByFMSKAD6ExWv24MX/fIGcjGT0
7l6IcacNw49OGoR/v/ExktMyowyDGFB2RhqGDywxqHN2ajEB45kX5+BXf3ieU0wqkvh4EFhjDKAe
X28sx1sLViPJ+zpKuuRj5PG9cOUlZ2Hmy2+hvgnIzUzi+4UdXe70PGhcdnHgS5LXVb1TwRE4KsBB
IlMjLgvuMszuZjRCJMLbXrqLn0NuV7gzpktLN7k6SGoM6l2MH48dZiAEK7BR/w5yYPx00r348utS
ZHcoRiYVezAl10rpGdiypxbX/WoaXvzLZM4t+zkChKTHoH7HYdSgHvh0xQ4O0hRBpF075iZkx3g8
Xrz70X8FMPKKSoREYDZSXJIyhP3w9aYDWLrubaROf5tLqQhSOaC0uR4R/gwLc9OQlpLkqgb7OQj2
lO3Do9PmIJheiLSMDHvHiepo3LavHhv+8yVeefdLLi3CyMjN44AMu8SiVO9jhGHHngqudjU72jJU
X6BPnz75HCBF1dXVpd+5zUGdJY5BnIQISdPP+fsM3k5yN+Q8WPXNZk6wso0kYLZuPMdz6ycFmHTY
EJd2F555gogi641OO5Xq1w9PFcDIL+4BH79PppszoenLpO+npgRQ3RDGrx+bjVouDZ1sEK3v550+
HKGmhqg6WZiXnrARvKV0DzxJKUJaaEXX9HNRtIlWooYVV51SkoPIzMqEFMjgUiNbKeGj2mI0DrlZ
6cJ75MTQxLjw65XvP4ADNU1I5SphzMOkm39DgUpqZEtGIiIXLJ3v6wukcSmTBS+XAta1fnQTr1QX
LqXGrPm2FFWH6h0nPJEWk5+fnz5w4EDbUpfjxo07cuDQBkwzDIUrVJnccz5/X+T0gMlApIlOH3+2
jA9aUM3Ls8iliRJ5i2Cr61+sERGTijH25AEJeX+WLl+Nue8sQnZhEWIlbUzTTXVjkRIMYPWmMrwx
b0lCvRx5fB/enyRhb9CkUr/Pm3CwrV+v7vD6fULtYLoJqco0X+Vz3HuZir2pta1MY0PXlmw8e0ap
F0GHgjwUcVurrq5e/d2iqJdOcmhVGSWR4GkvZazqjVH0fvM2ygnbGS3d47RNnjz5fDu7o62u8VZ7
qwgg5KHgUiSbS5P73DoSTE7GoqUrsWTlt0hLS29VJJQ51GnVpmDqZxY2NYYwqE9X9O5RJB6ynUql
fX717U+4jeFXJIYc7/0SM+FMMxcpyfA/85dHPdNOqlW34o7olM/VnuaQIAryGCWy0dieeeoIXP/T
sfzYJhziXLU51CxSS6yZsbEQXHw2jczHpkkkDFrSrW6cafJRIQfHfbdcwe2UAGoO1YrEyFjaOgxS
21Llspr2F8fbWHQMKct37jufEcdyHFPylF188cVnDB48uG0i4nC4cjlRpXGO+08u4vo67efnHKCu
thYPPfYPjqpUoUPHT+eMr9RnF5VlVvMEDIShGPjEPY/v3yPOVRpv8HrQUF+PL1ZsQDAlXRiOlgUO
ZHWqKOVfyYo7kkR/6e792FtRqdyXA7AJdH1LOnGVICQ6u4MflyhToBjBI/dci5efuAWXnz8SBdxm
IJWxRjg4mlVjN6I2h+xWmo7K1ZyyiirHEjj6a4f4fpddMBZvTb8Pd078MY7rWigIp6a6XqTwRwwg
cwGCBgZ9083Fp5Yc8OOND5bgi2XfIDk5aBu7IqbBn53/jTfeeLRz584DjiZwDOftPW4Yna938ZoJ
jzgr2SgPPfYclxpbkJmdo85JtrEdTN5ZN5046js3zB1Xc5044Q7sU+waJKSN3MsbuTgnHZuMPXI5
kwpj1aiUjNbIPVlRWW1J6Iaqf+orpcE3Nymuyh1l++Oc0baxoYhiK5w6ciCeenAS3v3HFDz/8A24
4adj0KtrgQBpTW2DcEDoZ/ZZgdzLL1i+vxqVVTWOAUT9mBGXLunSCVMmX4Y3n78X/3rydkz5+UUY
MbBEqJeH6htRW69KIycgWM78RBzN1HHJdv9f/4kyPkbBQJItHdDyBF27di1ZunTpW9dee+3l35m3
SjEdJALF1eFw+BouMVKiSXc6+ad5p8gw83Gp8cjjz+HJ6W8gs6CLYUCYaVKSOIfM4jwxrsmHknmQ
lTI7pFeXdHEtvihUHsqgnfanu7heH4zVZoP7MgLaQ+vSOT9qozgRWcfCHMhccpA+/e3m3dixpxxd
OhVYegGtAC3m6fP3BbmZOPe04aLVNzRizfrtWPjVepEevm7TTtTx/YhoPdqkLv30d46OQ/UNWLpy
I0q6dnYFhvaMm0KKGhjgdsFJw/rw1hc3X9OEbTvKsWj5Biz4YrU4Z2VNLd8nKWpTOReNY5bZAUEu
PVatL8V1dz2K6X+5DZ07FIj6A1ZbXV0d8vLyus+YMePlW2+99aonn3xyxuuvv/4+73fdEQMHJ9B3
+EM8q6mpyWvnE9c8WFRm5WBVNR58+O+Y8co8ZOQVCQmieFNsikFL9tFx8/UMYLEQ3xH+uSAnExmp
ya6pGfTwc3OycfG5p7benczPQVzTTQr4uOpFOVbEHfeUH8RHn63CxJ+embhnTh0hsgUkSbleMMmP
kUP7iHbrdecJAn3xtQWYx8/d0Bw/t0RkV3GV5K35X3EV7RQhdewi9LJFIiLtS7P+tOdwXPdO6HNc
Ma6+dAy2lJbhlbcX4tX3FvP7q0IqV4taW7CSaIgmkV1161/wp3uvw/Dj+wk7Mmyyb0V8REj7EPr3
7z+Og2Tc008/vZkb63fzn984ImoVv/hY3rxOcx7oofu8Hnzw0WcYd9nNeGHOJ8jML4Y/STNyWVRn
jyew1qTKqPWYTCJbDjNkpqeISUmJGP90TwkWyrZsEVlOKJmUitpJXq9wvSb5PfjHK/Ox/0CVcJG7
xRws+63mSZFEoUbjP3rEADz/x1vw8lO3Y0DPTtyAb9A5l5TkvmSuqixcuh7vLfiKX9vvKrEcbRJR
Bb1RALZn10544LYr8Pb0+3H5eSehnksoo6qlT59R7Ld4h0LM/iCX+ZqNuzH+5w/hj0+9hENcSpBU
susLqX+HDh3iwErpGQgEzuZfZxwpm6PBSb2hqZv79lfiqsn34ZKrfoX1pdXI7tCZD77XotpeLM8m
lgslG6RAi5YvYDCkQ5OBGuTin/zmR9OEMyWvKCy6SdNNt+7Yh1senMYfaK1b6aOEvHfE1QkkBNhR
w/pj7tS78eMxgwSRKpUQIwZj/d6/zMLSFetEgNdOnUoYqLIsVK96bn8UdcrDU7+7CffdcglnVCE1
n86u4IJzUS2aYtvULOHhJ1/B2RN+iUVLVwmVzc4Frb2PKIEt35EChyNzJA6WkZaKKy+7ABN+diky
s7I5kkPGmzCWQDOUVGNMy69Bwg8oWgwuzuZgSE9LFgPLHLxfR3oTVcTVFVyoN8nBIOYtWs916ydQ
umuPAIinlany8V6mELKzMjD1oZtwwsBiwd31aqifS/h9+2sx8ZdPYd6nXwqAEIPTqpy0ZMzM+9E8
dJIot066BDdfdTbqauvUunVytNks8mD8IzsrFBbTh4dwtWryxJ+ipHuRQRo5xGnaNCG9ReBITU1N
4i2uxIu+k6Q2jBs7CtP/fBv++dhtGNy3C+o415JlZuOcMA0Li3flOgJEQtS/ziwq9eEom6YcjQdF
s5EZt4tSsGDpRlw48Q94ae77gqgIJKSeWnmbElV3BJE2KYW5H7r7KqQFJJG6YzR8fdhf1Yhr73wK
Ux6ahrJ95QKwwWCgVZLLLEnIm3T79eNx4pAeIoho43+3pmOKBTXy/qck4X6uqr014ze4jttnOVnp
2iKbln0IBhX3r8/n87blWbUIHPfee+9dc+fOXcTBEab0Z7tEQ/KekGfhtJOGYO4z92HiZWOFLmgA
SJx+6Yxx2cKDZTA7ohxR9eVz3bumpk70w+xJayf9qEWBzKjLmNsX8MSvD0KVPfZxIr3tD//Ehdc9
gOdeegM79+wT6gNxdL/fZyk13CYiqbYiBvXvhfNPPx4N9bVxfQtwgHj9ATzz8ic496r78cCfnsWy
ld8Iwz1ZlCgKRvOczCC1nFym+43sEPIEXj+BZho2aU/Tvkypzt4gOurFjf3ZT0/BHddfgoBfeaZ2
aUAECmIEK1eu3P7AAw+8Onv27Hnkuzgi3qpHHnnk7/xlZt++fU/lF7/pkksuOZ8G3npFWCoV04BU
Prh/nDJJlLeZ9q8PkJaa5mA0SPGOvhZVIDESS0jo3okZylpipL1nyyz5pHgJxtw10j17KxSDXJbj
rkV1nvx8fFZtLMeSVbPw+PQ3MaRPF4w5eQhOOL4v+vTsJjINFPWsWUkPcUjOM8dYLvvJaZj73he6
MWW6QKgkUvD3V4fw1MwP8cKcj9GnRwecMnIATh4xEAP79kRuTpaoVEnle0IOGdpxMRIuvU4bNRR9
uhdi484q4QxwHGOKX/BjBvftjhceuxNdOudxUNSoz8n62VEu15IlS3b++te/fvHjjz9+n3+9gTfi
BM1HBByaW3n9+vXvT5gwYd6VV17582efffavvHMBu/QRCpqRDnvfbVdizYatWLR8C1fPku0Hx4YT
aUszaxFtk6c8zl9Ou1RRwbH6eq53pzkPgs8n5m7ceOfD/EC/qXyMg5DVf+VUBldMG5cE9MvKq8WD
FIYx06XZq6/CNRukIm7ZIrHxo6Wb8d5/VyM7IxldO+XiVE6sPxo1GMMG9+X3lSXmeDglVGobGej9
juuOTgUZ2L2/USnnY1HQjSRVVnamcJeu2lTBQfoO/vbCuyjqkIXjB5TgjFOH44QhfdG9a5F4rk0O
KTBRw5hLj+zMDAzu0w3fbFlCgRLbAKAAPu9rDt//id/8H7p0zBPSwolBkqr/xBNPfHT77bf/mX+k
RLdD30UQ0KA+v/TSS09zMVY7derU5+vr6332DyaCtJRk3HrdRVj69Z9EVNkTt0635Gjy20kQ2SY/
iABEE5Qqq2o55+mgLiwJW06bzjn25p0HIHvTYnV8YVqLnNlIiQQlG2mVgaRkxW0rm2pAxRU3gzCY
/b5kcteISobrSw9i5bcfYeqsD9GrWwdcct7JuG7CuZzjZ4gUDz3TMEtzum9SkWhC1Nbdm1TvlEXN
XbVMKamlpA6RSkWepj2VIWybvxKvvr8UHfLSuco8EJOvvQj9e5cIY9lJcjDVWdP3uK78vj/TJZ1a
Sw3K+7p24oUY1K9ESAwntZgYDWfQCzkwpvCPq9qiRrXVWxW3PffcczNnzJjxHKHXaaOCYScOG4Dj
+3XlRlaDg+1hr8vr54MbBktbtVV3PHFpKl6wY3e5O9FyLtmxQy7njD2FtyaVA1lrRBxK4+/pc4r+
vfY5KIzY6L5BXdP9RgExxUZk1mkVlqkWygD5vJIg1qzsLKSmZ2HLnhr8/qlXcfWtf8aBymrFy6SO
i5WaS5Kd5mbkZKZyZtUERFejjRgLHcjGRmMjMWVRy3T+jDOzclDTCMx+50tcPOm3+O8XK0V6h506
F3sP5OdmitR26zUIlFulwnG5XHJdfM7JaGyod8wYJoBv3Lhx/0033fRoewOjXcCh2iJ/5oNf6aT/
0gOjEjWjT+iP5lCjs8ciAVemRgD5uVlRn3f8NSNYuW6Lq4eFuFpycgrOHD0MjXW10WBZtGmJkdEE
ORlx63xIuu8lXWBScGNm8KwlHrexcOKoElQBSg4WfrUJc95ZCL8ap7C2/2JFsLUUHctrmHI/mc2q
uUL1ysoU9snfZr4tVCvJI1naOfrxtqMPPTjpXJQsWsSZldvimcSkHn/88bf520XtDYx2A8e2bdtK
Fy9e/CWlsDv5nYkrkKgMJknqkr/WQbJECEjJko2ga3FH+DyaPcLiVISv124VenkiHqsJl5zFVbAc
LtkajQ9Nx0ljNGKTfWr4Tja9l41SUta9mpvTKi+6wClFt1es3WbryYpPuzGPs54pmVezslZ7tONT
UgLYuK0M1Yca1KImzNGj5aGMR22pZx0g9JcIR8Lo07NYuG9ll5I/FRUVja+++ip5pA4eDrd7i22O
Tp064Y477hC6nmaEk7FXUFDw31AodK7d3GzF0GpGt+JOIitUBO+0RSuleO+DHRHrz02GWwk3DDvk
Z3KduInryQEdJ5dEct+q9VuwYfNOrht3E3q53bnJ61bcuSN+/6tr8PMpfwfFyygGYO6c+WE6BvzC
IqU6WvTZ6iCymQgLPq/HMapO+WhWnrSIHEZhflaclLayzyKiCHaT4ZbIHjSEAySrNB7LReEFZ6e5
6ORASKR8UqPIx5Jsz03vaKw6FuS6VWsSKtXy5cv3V1ZWroPr3kcIHORLnjVrlmEQVq5cScGmdWRo
1tbWOnL7jPRUoT9HrFYRVkV/dc0hoW9a1UvQJzjSg83m+ukVF52J3z/5suqO9QhC0vK/Kqsa8cmi
rzGgT4+44+Oj1yFcNG4Ml0R+PPDoP7F1Z7lazlNZf8Jy7WCdDR2JKHNIKN2dzt+1qECoCTTl0+vx
xBODiMd4QQXcaR08yhmiau7GKu3avhGLeFKIM4ZsXHnxWC6Vm23jH1qpIQLGbm6DCbCqafBpqUHs
VyurkE2ilPaxeDCm/lACIDGUqy87E5n8mdaJ9BSHmaD8nNt37Fan3Mi21UeoMHVeTrqQII4qD+/n
/v37K/jb6sMVsPW1FBhbt251FHVOniURQeeGXW52BsoqQ5wIfHFURgArrzgovEw52elq9ql9VRNy
FU++7lLUc4L8z7wlXMTXCw5JxnRaajIOHKzBa+8vwsTLzzHMI7eWcIoE+fHZozG4fwn+MfsDvPvx
V9i9rxJ1dQ3KKqdSbHaazGJrWVCQjrhofl4Whg4oEVU/xowajNff/QR3P/QCl7QZ+tU5hApDQa5r
xp+Jq8efIWo7zf98JbbsKENVdZ06X1+ZyipJscJpSoKkUnvqhCG98Ns7rkTf44pF7pQTUyLiLK+o
xDebShEIZiDEQduzWyc8/YebsGrdVrzzyVKsXr8V+ysPiTEiFchLNopHigUA+Q1TJXgq0FDcqQC/
mHghruXgoPtwAoak9mHF6m/5ef2udpbPihFZ2FM1NTUHCKdHBTiqqqosv6cUBbWzrq5XGmy6dzKW
WfTyuvpM/KFs27kXu8oqUJCXJcDhBDYiTC/ntg/ecQ1uuvpCbN+1T5T+IW7WuUMeHn5yJp598V3M
eetTXDvhPC4dGnQlbayNRbqfzh3y8du7rsXN1/yEE812rOdEtbNsP8oPVHGgKAvW0JwKqhfVuWM+
unYuEEYkEVxqakpUHTr/9JF46vnXsL8mLJIgo5EZWUk8vPS80RjUt4co3f+L637CiXcH1m3cgW82
lmLL9jLs3V8l8pRoHAIBP3KyMtC3pBgnj+iHs340FKnBJMG13ZzJVKd23oJFXEI1IDs/B3VNDeL4
IQOO44ygOyZceBq27dqLtRtKsY7f60auiu7adwB1tCANLaDDmRblqvXo0hFDBx6H88eOQFcOkEPR
eeVOKpAf6zduwdJVGxBMTovPhWO6eJVutTmtSqWdk4Gr86G2BPkOZ5wjIaPZkqjVLEMzcWqv9fyB
LFyyGiOO7xPlC3bqEFPXD6ccnKzMNIzIyRQBN5rj7OUPdPignngmTFHfNzkxDEenwtzo9FB9XMD8
gCkIRi07Kx1jTxkqGlNXbNUerHa8Nj+FHASkh1OqTMxG64gzThmCGXM/RVJWVlSdaOQqzjBOZEP6
9UBjo5JaQ/c2bEBPDBvUS1Q8CQvVEGKNPErgpGAmSSiKf0BUHWyMTgByIk9So4hxzZz9DvyBVPEA
iNDPHXMCwlyV1OIUtEBNr26dceFZJ4p7j4gM37CQvhki/T9ZcHXKdqA6uzRF19VNzu+B1MV/vfou
qqsakNUhJy71J5qdK2rlqnSRQF6dJB3eitMt8lbpMyqtmlsagav3SeUotGj7vIXLUU+qjEey3M/q
O+KuVLSAJuJQ6jTptt2KOiKNExWtdvS7x/9pUP+c+h2LD8hCklAjg550YZJWFPWlIgf0nVYWk4jM
qhjz6BMGcLtCneGounnJczdqWD8R/9ByzsR8BNH/RvEq5onw69GcBjK6iRYobYQAQWqenOD8F0o5
mf36e1j9TSlS09KETdS7e2f06tFJ9F9T10hFpZQfikmJew2HxTULuQSnCVUEJPLk1XCwNqszF91o
glzO6zZswqw5HyAlKzdG+HHllI6+7YhUWXde1TT+J+I0y1ZvwlvzFhsm2CcCEqN3hgz2DKSnJolp
l3PfXYQ/T5ut1nP1xoE+sXtRjW+1XL87uMIY3O84ZPI+EEFpXlhSy07hoGEs4n4tsaxYs+PCOvap
FSlYtXodHnpsBgLpnGtzKdfQ1Iihg3tyOyhZjJHZ5aqtNRhlOkKKGOf9JzJmlFlMTOVXv30c1XVc
raSSTDJzWQ/9BwYOe4DYpy2Tx+Yvz8xB6c4yTtgBV4ljJ+lysjKRnhIUKk+Ac7FHn30VT01/RQSy
/D6fo8HnJDkT3UiadexYwO0nrewnEyAp7piLkq4dYkuJOQQ7WzNDUAPG1m2luPYXD6KyjvHPaUJ6
kWPieK7OyRFmmYyQSCq62yZmPPLXu+7/KxYsXIX0nHzr2IpFkJExt9VE/8fAYRAYkvuOpFtv3bkP
N9/7JCoOVIoUjITUMou55kxdnpjiK16fHw8+Ogt3PPCUmHJJrlpzTpIZAC0FhJmQKNu2e3EHUQ1d
W2SSbB/y2kUsUvH1oGjNRoyFphQs/WolLrnmTmzcdgBZ2flKwTcuqZKTfOhWXCiCo4kymkSBQWNJ
i/dQveGb7vot/jXnI2R06KwuGXeUi4rvEhzMVnJYb1TS8rNl63HlLQ9hzTcbRTZvkstUUj1hGR8k
U2s2eQQgaO72+En3Cw8OGZk0uUeSEFcXqTWg0GY0ahyUij6T9IoIYmRC1aL4BHF2pptx1xYpoREm
nZPsoiemvoALrroTm3dWIyuvUGQkMPX8wWASjuterBbDaJlt6HRtUoEpz+ojPqYX/OwXmPvmQmR2
LIrVKfuebUd42TMWW5jegAtm7R2XIOIVy9duw4XX3Y9JV5yNCReeha4UZaeS/M2qcWwiYK+6fgbl
G5HhbM4+JY5AwcgV3EC9YvIjOOPkgZh4xfk4acTgqBuWDF99TMTJO6K5G7XF6rWCBVT+dOu2HZj/
6RdY9NVqQZSkWpALd+PWnfjwk88xYkg/MY9CzJMgI7+5WaUj5khPSlck4bAQaif/XHmgCq+//SGe
ffF1rFi1GclZ+cjKSdHNsFSGtZFLsH+99gHOHzsShQX5AsA0js3NWs2r+GubmYRHrUZIdgWppxRn
WfTlcsz815t444PP+Q8pyOpYHOMWiWgPjFkGWH8g4GihnFHHijwe9Y0R/Gnqa5j5yoc47aTBOGXk
IPQqKUbHwgKRxakRLgGl/GA1DtXWomxvBb74ahXKKg7yh5geXY0vKpm4qkbfvf/ZGnz0+Sr069kZ
Z54yjINkEPr37o4cfl6qaC7SKwSXNc0jUXOnwmLKphIf2bFrD77dvB3raO7KklVYu3Ebqg7WIzkj
G8kpKeIYqvu0cctOXHHzwyguzBLrfQwf0hf9+5SgpFuRkGIUIFUWgZEEcKLu4ohCwKLIG7ejDhw4
iNVcqi78Yjne/XCxUEU9SanIKCwSAUvZlKvmUQOn9/1lJp54brZwJ48aMQAD+bV7lXRFVmaG4PQi
AKkGPPUpNwQSLROAALFy1XosW7lOrBuybM0m/htXq7IKBWhku2qHP1TJoXHQdu+o34t0fwZq6sJ4
5e1FmP3mp5zjpojliYNJ3qh6QA+OOGNzsywqADY3NSMtO1dEe8U6fHruR2kV/DWdEy359NdvKcfK
ta8h+MKbyM1MQX5eJnpyYu1QkCPW9qAAHNVSIlrbX1mlTAeuq0f5/krs2nsAu/dUcDumAQdrakHT
R3wpadz4TUV2YRaUtUdiXiHi1rLsw+6Kesx87VO8MHe+WIYsh1+3uGM+ingr4KqXn0tAmoFHDIII
cl9FpXCn7iuvxNbtu0XAtKKyBpFmfs60DGTkdhKSU2ayzaxGJu45JSUVh+oj+HDhGrz38TIuMQNi
hd0O+VnoWlQo7pkkUjqXsBRQVYLANcKNS6+lu/diy/Y9/N75ONQ1wRNMRUpGgbK0GYNj0qA7U2xd
UYd2p7mWBFKoslwinbXT073RggERxHKkW2IKMQUkSelKBidXQ6rqOCerjRjkNdWClSQfgunJSMn0
6ErAGO9V1qVy09JdXk6AxLVJ+lTWhlFevR+rNuxRy+tri10qrlcqGyqmG5JE4dKF1DwfvXqDyMhO
i96rk/vaI5YLS4rOygvx6+yuaMCOvdsQXrpRLeEj667L+HV9IgBI1/b6qaqgXxClmM+hruEuM/fq
4pLKcHx+miWZJp4ZRfH3Ve3DivW7IZN9JCvLL2j3LDRdr3J9SgPx0fWDWchM85oCek5EIjsCg9JW
sjLTDatAtRUErQ0WtkpypKamxl2tpqbG4y5VmDDYCvPzsH3vdocFbGRnX4E6VsSl6M/vZh3bEqhk
AEkMKJzwaH07RadzHmBzFmtrDFx1V5ISfl38xSr3S1vK3ngsi1OfWnpxAmqSWO3Vrzdq4liVHJf2
IVsTfCu6QvcX4OoYefKaw5FE56gnujgzOxzgkHSgsP2tvr6+NinJeb0mmlWWkZ6O3j27YNGyDWBi
hSPmABBYlw49TP4zM1A0sDgSO2s7UcSG0hzElPGdbdH7lRPLB2e2t2HPq0wb5ZD14XZkIVcnE1HL
JIU4tMZaEUBgrXHlWtXENk/g9Ojfc3DQpPaQ2/iR+D57zIkiNds4Qcm6xU3jjGusHVv8zE2quevW
5DaKfZlpC88wQ2uFLzDxP9ex0MYXLWuy83mdnnW4uRlnnTaC25KprgvPkF27c+fOgzo1w9ys6NSJ
phMChxMgJItOkB7gmT9//u5wOFzuZoxT/tFpJ4/AheecjLqD1QnaXszlt8PUbGsrxe9GBr2spkbI
6vtEW0LdsVEtDISX0G0x5yXIWtu0qcGt3Gq5od+nV1dcdelZ0SLVbnbEggULtqsM2atqQV6NHnWv
VoCxA4qjWmUFDJheJavPN9xwQ3W3bt2+OvXUU4u4FHH0ZnFrFQ9N+T9Q5sSb85YI41ab6JMYQA6X
P5C1UCrH7xlpsweFWesmRySGxo7oYcQYRG0xrk4N6NcTUx++DQW5GWJ5BKfRJjdxWVlZ47Jly75R
B8tvwUqcPpsH2FIp9FpQnOQiMfTINDQODjZmzJiLGtU52HZGLOnSFGw7/4xR6Nuri8horao+JPzv
iXkZvmtnufTdE+TRAIxWHRIr7kDMsGf3TvjFpEvx0D0TUdwpF7V1jY71NUhC0hTtOXPmrHzjjTdm
QqlR5XFpVoze7r1k+4ULOMzvza/BTz/9dO6oUaNOpDLwbm40kXJAbky+y+KlqzHxzj+hpr7ZcWXW
9nDRHVniP1q3xGruHq6trrYB99zyM9x543gRcKznDJIi9G7PlJw+nPk2Dxo06EEuPebwrxoQq5ti
XmaXufzmpMAyj4MhbmdneE06nk9tJNrkiRMn/q6urq7KXInETsWiuQk0v4ACTxJrbtEaHYfvobIf
QEOb8rjavPFnX8QlRSDJK2oG2E2H1m/ENFNSUnD77be/w4GxUCXyJLX5dc1nok+vhQ0iudggromH
kulkZpD4TM2/ZcuWDT/60Y/uCYVCtZQZmugWEnMdWrfCbMsM0sSM3f9pmdFWUMjt0ABRdC8iywlp
ACQxiJ5uvvnmebNmzXoRSmEFMyj8FjRpBQr9e0dXbqKqlcfhIgapsnr16gVDhgy5adGiResyMzPF
jSX8QFhb+D07JigcvWptAIXFsuNtVemkBNRXkhYZGRkUZG4aP37869OmTXuOf12qs5nNLRE6TcRr
1aoIW0I2yY4dO5affvrpN3Kkz9i3b19lTk6OSBX3Rcu/eCwjRIlNiHGIi0A2tWN/2kJBrR5Xkuie
9kCoDFgU/TbbkUQjpJZnZYl6XGzGjBnrBgwY8Cg3wP/BP283MfZE4hqJRtEdXblt4bOyzhWm3fnB
Z5555vHp06e/M27cuHMmTZp0Mr/JHp07d06mAdAb3jlU4SIQhDfUbuzpKPMGfY83T4JKeIKODr8v
CI8/gnQuEXz+IHJyglEblOatV1VVRbh6Xvnaa69tmDNnzpKdO3cu4z/v4o3coBGdDGOm94ka2y1y
y9i5cT0uNocnwaYdm8MlRtehQ4f2KSws7Jyamprr5xv/LlBXXx98850FtcEOQ844Ro0/jK13QdP7
g/qVZDWHI0RLkdra2v0cGAfWrl1beuDAAVKdynijelAhC6uFtcDCibgcawUi5gYOycUob+1nGgya
VRRQjShiHbRoB6X91sI62Hhs+9/aIqpBna3SRESNWZB0aFJfZQe3rNwOn50kDGvvOEdLf5NsgjSu
of1j2/9QoMU+mu0Ut0g0ltHqOIeUgIoFB5C0ttklg9mlrBzb/rcBYgYF4LpAQhs9AvbXjL5KNjaI
E6FKCX5u6TGAe4j/2Pa/LT0SAYrb55YcAyuJ4UR4ieaetNerk5Q4BowfFkCsQGIHnPZ4dXqPlmT2
SQmCqK37HgPFMZC4Acftt5bua/ldQqsQt+I3qZ3Pd2z7YYOkLb+19nytJsb2IOJjQDi2tQdgDts5
DjeBHgPAse37ABzL7f8LMADD8AGv7pVSOwAAAABJRU5ErkJggg==
------=_NextPart_000_25A7_00BE17D0.638B6235--
